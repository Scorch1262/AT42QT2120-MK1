

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Apr 07 10:39:50 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,inline
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,inline
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1,inline
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1,inline
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1,inline
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1,inline
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1,inline
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1
    76                           	psect	text64,global,reloc=2,class=CODE,delta=1
    77                           	psect	text65,global,reloc=2,class=CODE,delta=1
    78                           	psect	text66,global,reloc=2,class=CODE,delta=1
    79                           	psect	text67,global,reloc=2,class=CODE,delta=1
    80                           	psect	text68,global,reloc=2,class=CODE,delta=1
    81                           	psect	text69,global,reloc=2,class=CODE,delta=1
    82                           	psect	text70,global,reloc=2,class=CODE,delta=1
    83                           	psect	text71,global,reloc=2,class=CODE,delta=1,inline
    84                           	psect	text72,global,reloc=2,class=CODE,delta=1,inline
    85                           	psect	text73,global,reloc=2,class=CODE,delta=1,inline
    86                           	psect	text74,global,reloc=2,class=CODE,delta=1
    87                           	psect	text75,global,reloc=2,class=CODE,delta=1,inline
    88                           	psect	text76,global,reloc=2,class=CODE,delta=1,inline
    89                           	psect	text77,global,reloc=2,class=CODE,delta=1,inline
    90                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    91                           	psect	text79,global,reloc=2,class=CODE,delta=1
    92                           	psect	text80,global,reloc=2,class=CODE,delta=1
    93                           	psect	text81,global,reloc=2,class=CODE,delta=1
    94                           	psect	text82,global,reloc=2,class=CODE,delta=1
    95                           	psect	text83,global,reloc=2,class=CODE,delta=1
    96                           	psect	text84,global,reloc=2,class=CODE,delta=1
    97                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    98                           	psect	text85,global,reloc=2,class=CODE,delta=1
    99                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   100                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   101                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   102                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   103  0000                     
   104                           ; Version 2.20
   105                           ; Generated 05/05/2020 GMT
   106                           ; 
   107                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   108                           ; All rights reserved.
   109                           ; 
   110                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   111                           ; 
   112                           ; Redistribution and use in source and binary forms, with or without modification, are
   113                           ; permitted provided that the following conditions are met:
   114                           ; 
   115                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   116                           ;        conditions and the following disclaimer.
   117                           ; 
   118                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   119                           ;        of conditions and the following disclaimer in the documentation and/or other
   120                           ;        materials provided with the distribution.
   121                           ; 
   122                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   123                           ;        software without specific prior written permission.
   124                           ; 
   125                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   126                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   127                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   128                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   129                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   130                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   131                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   132                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   133                           ; 
   134                           ; 
   135                           ; Code-generator required, PIC18F46K20 Definitions
   136                           ; 
   137                           ; SFR Addresses
   138  0000                     
   139                           	psect	smallconst
   140  001000                     __psmallconst:
   141                           	callstack 0
   142  001000  00                 	db	0
   143  001001                     _fsmStateTable:
   144                           	callstack 0
   145  001001  68                 	db	low _I2C_DO_IDLE
   146  001002  24                 	db	high _I2C_DO_IDLE
   147  001003  40                 	db	low _I2C_DO_SEND_ADR_READ
   148  001004  24                 	db	high _I2C_DO_SEND_ADR_READ
   149  001005  30                 	db	low _I2C_DO_SEND_ADR_WRITE
   150  001006  24                 	db	high _I2C_DO_SEND_ADR_WRITE
   151  001007  82                 	db	low _I2C_DO_TX
   152  001008  18                 	db	high _I2C_DO_TX
   153  001009  02                 	db	low _I2C_DO_RX
   154  00100A  1A                 	db	high _I2C_DO_RX
   155  00100B  5C                 	db	low _I2C_DO_RCEN
   156  00100C  24                 	db	high _I2C_DO_RCEN
   157  00100D  CC                 	db	low _I2C_DO_TX_EMPTY
   158  00100E  1B                 	db	high _I2C_DO_TX_EMPTY
   159  00100F  F2                 	db	low _I2C_DO_SEND_RESTART_READ
   160  001010  24                 	db	high _I2C_DO_SEND_RESTART_READ
   161  001011  EA                 	db	low _I2C_DO_SEND_RESTART_WRITE
   162  001012  24                 	db	high _I2C_DO_SEND_RESTART_WRITE
   163  001013  E2                 	db	low _I2C_DO_SEND_RESTART
   164  001014  24                 	db	high _I2C_DO_SEND_RESTART
   165  001015  DA                 	db	low _I2C_DO_SEND_STOP
   166  001016  24                 	db	high _I2C_DO_SEND_STOP
   167  001017  D2                 	db	low _I2C_DO_RX_ACK
   168  001018  24                 	db	high _I2C_DO_RX_ACK
   169  001019  CA                 	db	low _I2C_DO_RX_NACK_STOP
   170  00101A  24                 	db	high _I2C_DO_RX_NACK_STOP
   171  00101B  C2                 	db	low _I2C_DO_RX_NACK_RESTART
   172  00101C  24                 	db	high _I2C_DO_RX_NACK_RESTART
   173  00101D  50                 	db	low _I2C_DO_RESET
   174  00101E  24                 	db	high _I2C_DO_RESET
   175  00101F  F0                 	db	low _I2C_DO_ADDRESS_NACK
   176  001020  1E                 	db	high _I2C_DO_ADDRESS_NACK
   177  001021                     __end_of_fsmStateTable:
   178                           	callstack 0
   179  0000                     _RCREG	set	4014
   180  0000                     _TXREG	set	4013
   181  0000                     _SPBRG	set	4015
   182  0000                     _TXSTA	set	4012
   183  0000                     _TRISD	set	3989
   184  0000                     _TRISC	set	3988
   185  0000                     _TRISB	set	3987
   186  0000                     _LATC	set	3979
   187  0000                     _LATB	set	3978
   188  001021                     STR_1:
   189  001021  53                 	db	83	;'S'
   190  001022  6C                 	db	108	;'l'
   191  001023  69                 	db	105	;'i'
   192  001024  64                 	db	100	;'d'
   193  001025  65                 	db	101	;'e'
   194  001026  72                 	db	114	;'r'
   195  001027  20                 	db	32
   196  001028  3D                 	db	61	;'='
   197  001029  20                 	db	32
   198  00102A  25                 	db	37
   199  00102B  64                 	db	100	;'d'
   200  00102C  0D                 	db	13
   201  00102D  0A                 	db	10
   202  00102E  00                 	db	0
   203  00102F  00                 	db	0	; dummy byte at the end
   204  0000                     
   205                           	psect	nvBANK0
   206  0000E3                     __pnvBANK0:
   207                           	callstack 0
   208  0000E3                     _EUSART_ErrorHandler:
   209                           	callstack 0
   210  0000E3                     	ds	2
   211  0000E5                     _EUSART_OverrunErrorHandler:
   212                           	callstack 0
   213  0000E5                     	ds	2
   214  0000E7                     _EUSART_FramingErrorHandler:
   215                           	callstack 0
   216  0000E7                     	ds	2
   217  0000E9                     _EUSART_RxDefaultInterruptHandler:
   218                           	callstack 0
   219  0000E9                     	ds	2
   220  0000EB                     _EUSART_TxDefaultInterruptHandler:
   221                           	callstack 0
   222  0000EB                     	ds	2
   223  0000ED                     _eusartTxBufferRemaining:
   224                           	callstack 0
   225  0000ED                     	ds	1
   226  0000                     _RCSTAbits	set	4011
   227  0000                     _TXSTAbits	set	4012
   228  0000                     _SSPSTATbits	set	4039
   229  0000                     _SSPCON2bits	set	4037
   230  0000                     _SSPCON1bits	set	4038
   231  0000                     _WPUB	set	3964
   232  0000                     _ANSEL	set	3966
   233  0000                     _LATA	set	3977
   234  0000                     _LATD	set	3980
   235  0000                     _LATE	set	3981
   236  0000                     _OSCTUNE	set	3995
   237  0000                     _PIE1bits	set	3997
   238  0000                     _PIR2bits	set	4001
   239  0000                     _SSPCON2	set	4037
   240  0000                     _SSPCON1	set	4038
   241  0000                     _SSPSTAT	set	4039
   242  0000                     _RCONbits	set	4048
   243  0000                     _OSCCON	set	4051
   244  0000                     _SSPBUF	set	4041
   245  0000                     _SSPADD	set	4040
   246  0000                     _RCSTA	set	4011
   247  0000                     _BAUDCON	set	4024
   248  0000                     _PIR1bits	set	3998
   249  0000                     _INTCON2bits	set	4081
   250  0000                     _TRISA	set	3986
   251  0000                     _TRISE	set	3990
   252  0000                     _ANSELH	set	3967
   253  0000                     _INTCONbits	set	4082
   254  0000                     _SPBRGH	set	4016
   255                           
   256                           ; #config settings
   257                           
   258                           	psect	cinit
   259  002364                     __pcinit:
   260                           	callstack 0
   261  002364                     start_initialization:
   262                           	callstack 0
   263  002364                     __initialization:
   264                           	callstack 0
   265                           
   266                           ; Clear objects allocated to BANK0 (115 bytes)
   267  002364  EE00  F060         	lfsr	0,__pbssBANK0
   268  002368  0E73               	movlw	115
   269  00236A                     clear_0:
   270  00236A  6AEE               	clrf	postinc0,c
   271  00236C  06E8               	decf	wreg,f,c
   272  00236E  E1FD               	bnz	clear_0
   273                           
   274                           ; Clear objects allocated to COMRAM (5 bytes)
   275  002370  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   276  002372  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   277  002374  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   278  002376  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   279  002378  6A56               	clrf	__pbssCOMRAM& (0+255),c
   280  00237A                     end_of_initialization:
   281                           	callstack 0
   282  00237A                     __end_of__initialization:
   283                           	callstack 0
   284  00237A  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   285  00237C  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   286  00237E  0100               	movlb	0
   287  002380  EF45  F00F         	goto	_main	;jump to C main() function
   288                           
   289                           	psect	bssCOMRAM
   290  000056                     __pbssCOMRAM:
   291                           	callstack 0
   292  000056                     _eusartRxCount:
   293                           	callstack 0
   294  000056                     	ds	1
   295  000057                     _eusartRxTail:
   296                           	callstack 0
   297  000057                     	ds	1
   298  000058                     _eusartRxHead:
   299                           	callstack 0
   300  000058                     	ds	1
   301  000059                     _eusartTxTail:
   302                           	callstack 0
   303  000059                     	ds	1
   304  00005A                     _eusartTxHead:
   305                           	callstack 0
   306  00005A                     	ds	1
   307                           
   308                           	psect	bssBANK0
   309  000060                     __pbssBANK0:
   310                           	callstack 0
   311  000060                     _I2C_Status:
   312                           	callstack 0
   313  000060                     	ds	36
   314  000084                     _readBuffer:
   315                           	callstack 0
   316  000084                     	ds	10
   317  00008E                     _eusartRxStatusBuffer:
   318                           	callstack 0
   319  00008E                     	ds	8
   320  000096                     _eusartRxBuffer:
   321                           	callstack 0
   322  000096                     	ds	8
   323  00009E                     _eusartTxBuffer:
   324                           	callstack 0
   325  00009E                     	ds	8
   326  0000A6                     _writeBuffer:
   327                           	callstack 0
   328  0000A6                     	ds	3
   329  0000A9                     _nout:
   330                           	callstack 0
   331  0000A9                     	ds	2
   332  0000AB                     _width:
   333                           	callstack 0
   334  0000AB                     	ds	2
   335  0000AD                     _prec:
   336                           	callstack 0
   337  0000AD                     	ds	2
   338  0000AF                     _flags:
   339                           	callstack 0
   340  0000AF                     	ds	2
   341  0000B1                     _Slider_pos:
   342                           	callstack 0
   343  0000B1                     	ds	1
   344  0000B2                     _eusartRxLastError:
   345                           	callstack 0
   346  0000B2                     	ds	1
   347  0000B3                     _dbuf:
   348                           	callstack 0
   349  0000B3                     	ds	32
   350                           
   351                           	psect	cstackBANK0
   352  0000D3                     __pcstackBANK0:
   353                           	callstack 0
   354  0000D3                     ?_vfprintf:
   355                           	callstack 0
   356  0000D3                     vfprintf@fp:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x0
   360  0000D3                     	ds	2
   361  0000D5                     vfprintf@fmt:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x2
   365  0000D5                     	ds	2
   366  0000D7                     vfprintf@ap:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x4
   370  0000D7                     	ds	2
   371  0000D9                     vfprintf@cfmt:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x6
   375  0000D9                     	ds	2
   376  0000DB                     ?_printf:
   377                           	callstack 0
   378  0000DB                     printf@fmt:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x8
   382  0000DB                     	ds	4
   383  0000DF                     printf@ap:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0xC
   387  0000DF                     	ds	2
   388  0000E1                     ??_main:
   389                           
   390                           ; 1 bytes @ 0xE
   391  0000E1                     	ds	2
   392                           
   393                           	psect	cstackCOMRAM
   394  000001                     __pcstackCOMRAM:
   395                           	callstack 0
   396  000001                     ??_INTERRUPT_InterruptManager:
   397  000001                     
   398                           ; 1 bytes @ 0x0
   399  000001                     	ds	4
   400  000005                     ?_strlen:
   401                           	callstack 0
   402  000005                     ?___aodiv:
   403                           	callstack 0
   404  000005                     ?___aomod:
   405                           	callstack 0
   406  000005                     I2C_Open@address:
   407                           	callstack 0
   408  000005                     I2C_Close@returnValue:
   409                           	callstack 0
   410  000005                     I2C_MasterSendTxData@data:
   411                           	callstack 0
   412  000005                     EUSART_Write@txData:
   413                           	callstack 0
   414  000005                     I2C_SetBuffer@buffer:
   415                           	callstack 0
   416  000005                     I2C_SetCallback@cb:
   417                           	callstack 0
   418  000005                     EUSART_SetFramingErrorHandler@interruptHandler:
   419                           	callstack 0
   420  000005                     EUSART_SetOverrunErrorHandler@interruptHandler:
   421                           	callstack 0
   422  000005                     EUSART_SetErrorHandler@interruptHandler:
   423                           	callstack 0
   424  000005                     EUSART_SetTxInterruptHandler@interruptHandler:
   425                           	callstack 0
   426  000005                     EUSART_SetRxInterruptHandler@interruptHandler:
   427                           	callstack 0
   428  000005                     strlen@s:
   429                           	callstack 0
   430  000005                     ___aodiv@dividend:
   431                           	callstack 0
   432  000005                     ___aomod@dividend:
   433                           	callstack 0
   434                           
   435                           ; 8 bytes @ 0x4
   436  000005                     	ds	1
   437  000006                     I2C_Open@returnValue:
   438                           	callstack 0
   439  000006                     putch@txData:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x5
   443  000006                     	ds	1
   444  000007                     I2C_SetBuffer@bufferSize:
   445                           	callstack 0
   446  000007                     I2C_SetCallback@ptr:
   447                           	callstack 0
   448  000007                     fputc@c:
   449                           	callstack 0
   450  000007                     strlen@a:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x6
   454  000007                     	ds	2
   455  000009                     I2C_SetCallback@idx:
   456                           	callstack 0
   457  000009                     fputc@fp:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x8
   461  000009                     	ds	1
   462  00000A                     I2C_SetDataCompleteCallback@cb:
   463                           	callstack 0
   464  00000A                     I2C_SetAddressNackCallback@cb:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x9
   468  00000A                     	ds	1
   469  00000B                     ??_fputc:
   470                           
   471                           ; 1 bytes @ 0xA
   472  00000B                     	ds	1
   473  00000C                     I2C_SetDataCompleteCallback@ptr:
   474                           	callstack 0
   475  00000C                     I2C_SetAddressNackCallback@ptr:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0xB
   479  00000C                     	ds	1
   480  00000D                     ___aodiv@divisor:
   481                           	callstack 0
   482  00000D                     ___aomod@divisor:
   483                           	callstack 0
   484                           
   485                           ; 8 bytes @ 0xC
   486  00000D                     	ds	1
   487  00000E                     rd1RegCompleteHandler@ptr:
   488                           	callstack 0
   489  00000E                     rd2RegCompleteHandler@ptr:
   490                           	callstack 0
   491  00000E                     wr1RegCompleteHandler@ptr:
   492                           	callstack 0
   493  00000E                     wr2RegCompleteHandler@ptr:
   494                           	callstack 0
   495  00000E                     rdBlkRegCompleteHandler@ptr:
   496                           	callstack 0
   497  00000E                     I2C_CallbackReturnReset@funPtr:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0xD
   501  00000E                     	ds	2
   502  000010                     ??_I2C_DO_TX:
   503  000010                     ??_I2C_DO_RX:
   504  000010                     ??_I2C_DO_TX_EMPTY:
   505  000010                     ??_I2C_DO_ADDRESS_NACK:
   506  000010                     fputs@s:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0xF
   510  000010                     	ds	2
   511  000012                     ??_I2C_MasterFsm:
   512  000012                     fputs@fp:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x11
   516  000012                     	ds	2
   517  000014                     I2C_MasterOperation@read:
   518                           	callstack 0
   519  000014                     fputs@c:
   520                           	callstack 0
   521                           
   522                           ; 1 bytes @ 0x13
   523  000014                     	ds	1
   524  000015                     I2C_MasterOperation@returnValue:
   525                           	callstack 0
   526  000015                     ___aodiv@counter:
   527                           	callstack 0
   528  000015                     ___aomod@counter:
   529                           	callstack 0
   530  000015                     fputs@i:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x14
   534  000015                     	ds	1
   535  000016                     I2C_Read1ByteRegister@reg:
   536                           	callstack 0
   537  000016                     I2C_Write1ByteRegister@reg:
   538                           	callstack 0
   539  000016                     ___aodiv@sign:
   540                           	callstack 0
   541  000016                     ___aomod@sign:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x15
   545  000016                     	ds	1
   546  000017                     ?_abs:
   547                           	callstack 0
   548  000017                     ?_pad:
   549                           	callstack 0
   550  000017                     I2C_Read1ByteRegister@address:
   551                           	callstack 0
   552  000017                     I2C_Write1ByteRegister@data:
   553                           	callstack 0
   554  000017                     pad@fp:
   555                           	callstack 0
   556  000017                     abs@a:
   557                           	callstack 0
   558  000017                     ___aodiv@quotient:
   559                           	callstack 0
   560                           
   561                           ; 8 bytes @ 0x16
   562  000017                     	ds	1
   563  000018                     I2C_Read1ByteRegister@returnValue:
   564                           	callstack 0
   565  000018                     I2C_Write1ByteRegister@address:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x17
   569  000018                     	ds	1
   570  000019                     ??_abs:
   571  000019                     pad@buf:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x18
   575  000019                     	ds	2
   576  00001B                     pad@p:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x1A
   580  00001B                     	ds	2
   581  00001D                     ??_pad:
   582                           
   583                           ; 1 bytes @ 0x1C
   584  00001D                     	ds	1
   585  00001E                     pad@i:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x1D
   589  00001E                     	ds	2
   590  000020                     pad@w:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x1F
   594  000020                     	ds	2
   595  000022                     ?_dtoa:
   596                           	callstack 0
   597  000022                     dtoa@fp:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x21
   601  000022                     	ds	2
   602  000024                     dtoa@d:
   603                           	callstack 0
   604                           
   605                           ; 8 bytes @ 0x23
   606  000024                     	ds	8
   607  00002C                     ??_dtoa:
   608                           
   609                           ; 1 bytes @ 0x2B
   610  00002C                     	ds	8
   611  000034                     _dtoa$2046:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x33
   615  000034                     	ds	2
   616  000036                     dtoa@p:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x35
   620  000036                     	ds	2
   621  000038                     dtoa@w:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x37
   625  000038                     	ds	2
   626  00003A                     dtoa@s:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x39
   630  00003A                     	ds	2
   631  00003C                     dtoa@n:
   632                           	callstack 0
   633                           
   634                           ; 8 bytes @ 0x3B
   635  00003C                     	ds	8
   636  000044                     dtoa@i:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x43
   640  000044                     	ds	2
   641  000046                     ?_vfpfcnvrt:
   642                           	callstack 0
   643  000046                     vfpfcnvrt@fp:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x45
   647  000046                     	ds	2
   648  000048                     vfpfcnvrt@fmt:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x47
   652  000048                     	ds	2
   653  00004A                     vfpfcnvrt@ap:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x49
   657  00004A                     	ds	2
   658  00004C                     ??_vfpfcnvrt:
   659                           
   660                           ; 1 bytes @ 0x4B
   661  00004C                     	ds	2
   662  00004E                     vfpfcnvrt@ll:
   663                           	callstack 0
   664                           
   665                           ; 8 bytes @ 0x4D
   666  00004E                     	ds	8
   667  000056                     
   668                           ; 1 bytes @ 0x55
   669 ;;
   670 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   671 ;;
   672 ;; *************** function _main *****************
   673 ;; Defined at:
   674 ;;		line 53 in file "main.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;		None
   679 ;; Return value:  Size  Location     Type
   680 ;;                  1    wreg      void 
   681 ;; Registers used:
   682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   690 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   691 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;Total ram usage:        2 bytes
   693 ;; Hardware stack levels required when called: 15
   694 ;; This function calls:
   695 ;;		_AT42QT2120_Init
   696 ;;		_AT42QT2120_sliderPosition
   697 ;;		_SYSTEM_Initialize
   698 ;;		_printf
   699 ;; This function is called by:
   700 ;;		Startup code after reset
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           	psect	text0
   705  001E8A                     __ptext0:
   706                           	callstack 0
   707  001E8A                     _main:
   708                           	callstack 16
   709  001E8A                     
   710                           ;main.c: 55:     SYSTEM_Initialize();
   711  001E8A  ECE9  F011         	call	_SYSTEM_Initialize	;wreg free
   712  001E8E                     
   713                           ;main.c: 56:     _delay((unsigned long)((500)*(8000000/4000.0)));
   714  001E8E  0E06               	movlw	6
   715  001E90  0100               	movlb	0	; () banked
   716  001E92  6FE2               	movwf	(??_main+1)& (0+255),b
   717  001E94  0E13               	movlw	19
   718  001E96  6FE1               	movwf	??_main& (0+255),b
   719  001E98  0EAD               	movlw	173
   720  001E9A                     u2547:
   721  001E9A  2EE8               	decfsz	wreg,f,c
   722  001E9C  D7FE               	bra	u2547
   723  001E9E  2FE1               	decfsz	??_main& (0+255),f,b
   724  001EA0  D7FC               	bra	u2547
   725  001EA2  2FE2               	decfsz	(??_main+1)& (0+255),f,b
   726  001EA4  D7FA               	bra	u2547
   727  001EA6  F000 F000          	nop2	
   728  001EAA                     
   729                           ;main.c: 57:     AT42QT2120_Init();
   730  001EAA  EC81  F012         	call	_AT42QT2120_Init	;wreg free
   731  001EAE                     
   732                           ;main.c: 64:     (INTCONbits.GIE = 1);
   733  001EAE  8EF2               	bsf	242,7,c	;volatile
   734  001EB0                     
   735                           ;main.c: 70:     (INTCONbits.PEIE = 1);
   736  001EB0  8CF2               	bsf	242,6,c	;volatile
   737  001EB2                     l3938:
   738                           
   739                           ;main.c: 76:         Slider_pos = AT42QT2120_sliderPosition();
   740  001EB2  ECE1  F010         	call	_AT42QT2120_sliderPosition	;wreg free
   741  001EB6  0100               	movlb	0	; () banked
   742  001EB8  6FB1               	movwf	_Slider_pos& (0+255),b
   743  001EBA                     
   744                           ; BSR set to: 0
   745                           ;main.c: 77:         printf("Slider = %d\r\n",Slider_pos);
   746  001EBA  0E21               	movlw	low STR_1
   747  001EBC  6FDB               	movwf	printf@fmt& (0+255),b
   748  001EBE  0E10               	movlw	high STR_1
   749  001EC0  6FDC               	movwf	(printf@fmt+1)& (0+255),b
   750  001EC2  C0B1  F0DD         	movff	_Slider_pos,?_printf+2
   751  001EC6  6BDE               	clrf	(?_printf+3)& (0+255),b
   752  001EC8  EC7B  F011         	call	_printf	;wreg free
   753  001ECC                     
   754                           ;main.c: 78:         _delay((unsigned long)((500)*(8000000/4000.0)));
   755  001ECC  0E06               	movlw	6
   756  001ECE  0100               	movlb	0	; () banked
   757  001ED0  6FE2               	movwf	(??_main+1)& (0+255),b
   758  001ED2  0E13               	movlw	19
   759  001ED4  6FE1               	movwf	??_main& (0+255),b
   760  001ED6  0EAD               	movlw	173
   761  001ED8                     u2557:
   762  001ED8  2EE8               	decfsz	wreg,f,c
   763  001EDA  D7FE               	bra	u2557
   764  001EDC  2FE1               	decfsz	??_main& (0+255),f,b
   765  001EDE  D7FC               	bra	u2557
   766  001EE0  2FE2               	decfsz	(??_main+1)& (0+255),f,b
   767  001EE2  D7FA               	bra	u2557
   768  001EE4  F000 F000          	nop2	
   769  001EE8  EF59  F00F         	goto	l3938
   770  001EEC  EF58  F000         	goto	start
   771  001EF0                     __end_of_main:
   772                           	callstack 0
   773                           
   774 ;; *************** function _printf *****************
   775 ;; Defined at:
   776 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\printf.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
   779 ;;		 -> STR_1(14), 
   780 ;; Auto vars:     Size  Location     Type
   781 ;;  ap              2   12[BANK0 ] PTR void [1]
   782 ;;		 -> ?_printf(2), 
   783 ;;  ret             2    0        int 
   784 ;; Return value:  Size  Location     Type
   785 ;;                  2    8[BANK0 ] int 
   786 ;; Registers used:
   787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   793 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;Total ram usage:        6 bytes
   798 ;; Hardware stack levels used: 1
   799 ;; Hardware stack levels required when called: 12
   800 ;; This function calls:
   801 ;;		_vfprintf
   802 ;; This function is called by:
   803 ;;		_main
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text1
   808  0022F6                     __ptext1:
   809                           	callstack 0
   810  0022F6                     _printf:
   811                           	callstack 18
   812  0022F6  0EDD               	movlw	low (?_printf+2)
   813  0022F8  0100               	movlb	0	; () banked
   814  0022FA  6FDF               	movwf	printf@ap& (0+255),b
   815  0022FC  0E00               	movlw	high (?_printf+2)
   816  0022FE  6FE0               	movwf	(printf@ap+1)& (0+255),b
   817  002300                     
   818                           ; BSR set to: 0
   819  002300  0E00               	movlw	0
   820  002302  6FD3               	movwf	vfprintf@fp& (0+255),b
   821  002304  0E00               	movlw	0
   822  002306  6FD4               	movwf	(vfprintf@fp+1)& (0+255),b
   823  002308  C0DB  F0D5         	movff	printf@fmt,vfprintf@fmt
   824  00230C  C0DC  F0D6         	movff	printf@fmt+1,vfprintf@fmt+1
   825  002310  0EDF               	movlw	low printf@ap
   826  002312  6FD7               	movwf	vfprintf@ap& (0+255),b
   827  002314  0E00               	movlw	high printf@ap
   828  002316  6FD8               	movwf	(vfprintf@ap+1)& (0+255),b
   829  002318  ECAB  F00F         	call	_vfprintf	;wreg free
   830  00231C  0012               	return		;funcret
   831  00231E                     __end_of_printf:
   832                           	callstack 0
   833                           
   834 ;; *************** function _vfprintf *****************
   835 ;; Defined at:
   836 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
   839 ;;		 -> NULL(0), 
   840 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   841 ;;		 -> STR_1(14), 
   842 ;;  ap              2    4[BANK0 ] PTR PTR void 
   843 ;;		 -> printf@ap(2), 
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  cfmt            2    6[BANK0 ] PTR unsigned char 
   846 ;;		 -> STR_1(14), 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  2    0[BANK0 ] int 
   849 ;; Registers used:
   850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   856 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;Total ram usage:        8 bytes
   861 ;; Hardware stack levels used: 1
   862 ;; Hardware stack levels required when called: 11
   863 ;; This function calls:
   864 ;;		_vfpfcnvrt
   865 ;; This function is called by:
   866 ;;		_printf
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text2
   871  001F56                     __ptext2:
   872                           	callstack 0
   873  001F56                     _vfprintf:
   874                           	callstack 18
   875  001F56                     
   876                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   877  001F56  C0D5  F0D9         	movff	vfprintf@fmt,vfprintf@cfmt
   878  001F5A  C0D6  F0DA         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   879  001F5E                     
   880                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   881  001F5E  0E00               	movlw	0
   882  001F60  0100               	movlb	0	; () banked
   883  001F62  6FAA               	movwf	(_nout+1)& (0+255),b
   884  001F64  0E00               	movlw	0
   885  001F66  6FA9               	movwf	_nout& (0+255),b
   886                           
   887                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   888  001F68  EFC9  F00F         	goto	l3920
   889  001F6C                     l3918:
   890                           
   891                           ; BSR set to: 0
   892                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   893  001F6C  C0D3  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
   894  001F70  C0D4  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   895  001F74  0ED9               	movlw	low vfprintf@cfmt
   896  001F76  6E48               	movwf	vfpfcnvrt@fmt^0,c
   897  001F78  0E00               	movlw	high vfprintf@cfmt
   898  001F7A  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
   899  001F7C  C0D7  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
   900  001F80  C0D8  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   901  001F84  EC89  F009         	call	_vfpfcnvrt	;wreg free
   902  001F88  5046               	movf	?_vfpfcnvrt^0,w,c
   903  001F8A  0100               	movlb	0	; () banked
   904  001F8C  27A9               	addwf	_nout& (0+255),f,b
   905  001F8E  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
   906  001F90  23AA               	addwfc	(_nout+1)& (0+255),f,b
   907  001F92                     l3920:
   908                           
   909                           ; BSR set to: 0
   910                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   911  001F92  C0D9  FFF6         	movff	vfprintf@cfmt,tblptrl
   912  001F96  C0DA  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   913  001F9A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   914  001F9A  6AF8               	clrf	tblptru,c
   915  001F9C                     	endif
   916  001F9C                     	if	0	;tblptru may be non-zero
   917  001F9C                     	endif
   918  001F9C  0008               	tblrd		*
   919  001F9E  50F5               	movf	tablat,w,c
   920  001FA0  0900               	iorlw	0
   921  001FA2  A4D8               	btfss	status,2,c
   922  001FA4  EFD6  F00F         	goto	u2531
   923  001FA8  EFD8  F00F         	goto	u2530
   924  001FAC                     u2531:
   925  001FAC  EFB6  F00F         	goto	l3918
   926  001FB0                     u2530:
   927  001FB0                     
   928                           ; BSR set to: 0
   929                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   930  001FB0  C0A9  F0D3         	movff	_nout,?_vfprintf
   931  001FB4  C0AA  F0D4         	movff	_nout+1,?_vfprintf+1
   932  001FB8                     
   933                           ; BSR set to: 0
   934  001FB8  0012               	return		;funcret
   935  001FBA                     __end_of_vfprintf:
   936                           	callstack 0
   937                           
   938 ;; *************** function _vfpfcnvrt *****************
   939 ;; Defined at:
   940 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
   943 ;;		 -> NULL(0), 
   944 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
   945 ;;		 -> vfprintf@cfmt(2), 
   946 ;;  ap              2   73[COMRAM] PTR PTR void 
   947 ;;		 -> printf@ap(2), 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  ll              8   77[COMRAM] long long 
   950 ;;  llu             8    0        unsigned long long 
   951 ;;  f               4    0        unsigned long long 
   952 ;;  vp              3    0        PTR void 
   953 ;;  ct              3    0        unsigned char [3]
   954 ;;  cp              3    0        PTR unsigned char 
   955 ;;  i               2    0        int 
   956 ;;  done            2    0        int 
   957 ;;  c               1    0        unsigned char 
   958 ;; Return value:  Size  Location     Type
   959 ;;                  2   69[COMRAM] int 
   960 ;; Registers used:
   961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   967 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   968 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   969 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   971 ;;Total ram usage:       16 bytes
   972 ;; Hardware stack levels used: 1
   973 ;; Hardware stack levels required when called: 10
   974 ;; This function calls:
   975 ;;		_dtoa
   976 ;;		_fputc
   977 ;; This function is called by:
   978 ;;		_vfprintf
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           	psect	text3
   983  001312                     __ptext3:
   984                           	callstack 0
   985  001312                     _vfpfcnvrt:
   986                           	callstack 18
   987  001312                     
   988                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
   989  001312  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   990  001316  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   991  00131A  CFDE FFF6          	movff	postinc2,tblptrl
   992  00131E  CFDD FFF7          	movff	postdec2,tblptrh
   993  001322                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   994  001322  6AF8               	clrf	tblptru,c
   995  001324                     	endif
   996  001324                     	if	0	;tblptru may be non-zero
   997  001324                     	endif
   998  001324  0008               	tblrd		*
   999  001326  50F5               	movf	tablat,w,c
  1000  001328  0A25               	xorlw	37
  1001  00132A  A4D8               	btfss	status,2,c
  1002  00132C  EF9A  F009         	goto	u2491
  1003  001330  EF9C  F009         	goto	u2490
  1004  001334                     u2491:
  1005  001334  EF4B  F00A         	goto	l3906
  1006  001338                     u2490:
  1007  001338                     
  1008                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1009  001338  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1010  00133C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1011  001340  2ADE               	incf	postinc2,f,c
  1012  001342  0E00               	movlw	0
  1013  001344  22DD               	addwfc	postdec2,f,c
  1014  001346                     
  1015                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1016  001346  0E00               	movlw	0
  1017  001348  0100               	movlb	0	; () banked
  1018  00134A  6FAC               	movwf	(_width+1)& (0+255),b
  1019  00134C  0E00               	movlw	0
  1020  00134E  6FAB               	movwf	_width& (0+255),b
  1021  001350  C0AB  F0AF         	movff	_width,_flags
  1022  001354  C0AC  F0B0         	movff	_width+1,_flags+1
  1023  001358                     
  1024                           ; BSR set to: 0
  1025                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1026  001358  69AD               	setf	_prec& (0+255),b
  1027  00135A  69AE               	setf	(_prec+1)& (0+255),b
  1028  00135C                     
  1029                           ; BSR set to: 0
  1030                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1031  00135C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1032  001360  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1033  001364  CFDE FFF6          	movff	postinc2,tblptrl
  1034  001368  CFDD FFF7          	movff	postdec2,tblptrh
  1035  00136C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1036  00136C  6AF8               	clrf	tblptru,c
  1037  00136E                     	endif
  1038  00136E                     	if	0	;tblptru may be non-zero
  1039  00136E                     	endif
  1040  00136E  0008               	tblrd		*
  1041  001370  50F5               	movf	tablat,w,c
  1042  001372  0A64               	xorlw	100
  1043  001374  B4D8               	btfsc	status,2,c
  1044  001376  EFBF  F009         	goto	u2501
  1045  00137A  EFC1  F009         	goto	u2500
  1046  00137E                     u2501:
  1047  00137E  EFD4  F009         	goto	l3884
  1048  001382                     u2500:
  1049  001382                     
  1050                           ; BSR set to: 0
  1051  001382  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1052  001386  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1053  00138A  CFDE FFF6          	movff	postinc2,tblptrl
  1054  00138E  CFDD FFF7          	movff	postdec2,tblptrh
  1055  001392                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1056  001392  6AF8               	clrf	tblptru,c
  1057  001394                     	endif
  1058  001394                     	if	0	;tblptru may be non-zero
  1059  001394                     	endif
  1060  001394  0008               	tblrd		*
  1061  001396  50F5               	movf	tablat,w,c
  1062  001398  0A69               	xorlw	105
  1063  00139A  A4D8               	btfss	status,2,c
  1064  00139C  EFD2  F009         	goto	u2511
  1065  0013A0  EFD4  F009         	goto	u2510
  1066  0013A4                     u2511:
  1067  0013A4  EF14  F00A         	goto	l3890
  1068  0013A8                     u2510:
  1069  0013A8                     l3884:
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1073  0013A8  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1074  0013AC  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1075  0013B0  2ADE               	incf	postinc2,f,c
  1076  0013B2  0E00               	movlw	0
  1077  0013B4  22DD               	addwfc	postdec2,f,c
  1078                           
  1079                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1080  0013B6  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1081  0013BA  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1082  0013BE  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  1083  0013C2  0E02               	movlw	2
  1084  0013C4  26DE               	addwf	postinc2,f,c
  1085  0013C6  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  1086  0013CA  0E00               	movlw	0
  1087  0013CC  22DD               	addwfc	postdec2,f,c
  1088  0013CE  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1089  0013D2  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1090  0013D6  CFDE F04E          	movff	postinc2,vfpfcnvrt@ll
  1091  0013DA  CFDD F04F          	movff	postdec2,vfpfcnvrt@ll+1
  1092  0013DE  0E00               	movlw	0
  1093  0013E0  BE4F               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1094  0013E2  0EFF               	movlw	-1
  1095  0013E4  6E50               	movwf	(vfpfcnvrt@ll+2)^0,c
  1096  0013E6  6E51               	movwf	(vfpfcnvrt@ll+3)^0,c
  1097  0013E8  6E52               	movwf	(vfpfcnvrt@ll+4)^0,c
  1098  0013EA  6E53               	movwf	(vfpfcnvrt@ll+5)^0,c
  1099  0013EC  6E54               	movwf	(vfpfcnvrt@ll+6)^0,c
  1100  0013EE  6E55               	movwf	(vfpfcnvrt@ll+7)^0,c
  1101  0013F0                     
  1102                           ; BSR set to: 0
  1103                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1104  0013F0  C046  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  1105  0013F4  C047  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1106  0013F8  C04E  F024         	movff	vfpfcnvrt@ll,dtoa@d
  1107  0013FC  C04F  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1108  001400  C050  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1109  001404  C051  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1110  001408  C052  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1111  00140C  C053  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1112  001410  C054  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1113  001414  C055  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1114  001418  EC18  F008         	call	_dtoa	;wreg free
  1115  00141C  C022  F046         	movff	?_dtoa,?_vfpfcnvrt
  1116  001420  C023  F047         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1117  001424  EF67  F00A         	goto	l1466
  1118  001428                     l3890:
  1119                           
  1120                           ; BSR set to: 0
  1121                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1122  001428  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1123  00142C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1124  001430  CFDE FFF6          	movff	postinc2,tblptrl
  1125  001434  CFDD FFF7          	movff	postdec2,tblptrh
  1126  001438                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1127  001438  6AF8               	clrf	tblptru,c
  1128  00143A                     	endif
  1129  00143A                     	if	0	;tblptru may be non-zero
  1130  00143A                     	endif
  1131  00143A  0008               	tblrd		*
  1132  00143C  50F5               	movf	tablat,w,c
  1133  00143E  0A25               	xorlw	37
  1134  001440  A4D8               	btfss	status,2,c
  1135  001442  EF25  F00A         	goto	u2521
  1136  001446  EF27  F00A         	goto	u2520
  1137  00144A                     u2521:
  1138  00144A  EF3E  F00A         	goto	l3900
  1139  00144E                     u2520:
  1140  00144E                     
  1141                           ; BSR set to: 0
  1142                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1143  00144E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1144  001452  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1145  001456  2ADE               	incf	postinc2,f,c
  1146  001458  0E00               	movlw	0
  1147  00145A  22DD               	addwfc	postdec2,f,c
  1148  00145C                     
  1149                           ; BSR set to: 0
  1150                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1151  00145C  0E00               	movlw	0
  1152  00145E  6E08               	movwf	(fputc@c+1)^0,c
  1153  001460  0E25               	movlw	37
  1154  001462  6E07               	movwf	fputc@c^0,c
  1155  001464  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1156  001468  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1157  00146C  EC54  F00D         	call	_fputc	;wreg free
  1158  001470                     l3896:
  1159                           
  1160                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1161  001470  0E00               	movlw	0
  1162  001472  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  1163  001474  0E01               	movlw	1
  1164  001476  6E46               	movwf	?_vfpfcnvrt^0,c
  1165  001478  EF67  F00A         	goto	l1466
  1166  00147C                     l3900:
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1170  00147C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1171  001480  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1172  001484  2ADE               	incf	postinc2,f,c
  1173  001486  0E00               	movlw	0
  1174  001488  22DD               	addwfc	postdec2,f,c
  1175  00148A                     
  1176                           ; BSR set to: 0
  1177                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1178  00148A  0E00               	movlw	0
  1179  00148C  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  1180  00148E  0E00               	movlw	0
  1181  001490  6E46               	movwf	?_vfpfcnvrt^0,c
  1182  001492  EF67  F00A         	goto	l1466
  1183  001496                     l3906:
  1184                           
  1185                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1186  001496  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1187  00149A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1188  00149E  CFDE FFF6          	movff	postinc2,tblptrl
  1189  0014A2  CFDD FFF7          	movff	postdec2,tblptrh
  1190  0014A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1191  0014A6  6AF8               	clrf	tblptru,c
  1192  0014A8                     	endif
  1193  0014A8                     	if	0	;tblptru may be non-zero
  1194  0014A8                     	endif
  1195  0014A8  0008               	tblrd		*
  1196  0014AA  50F5               	movf	tablat,w,c
  1197  0014AC  6E07               	movwf	fputc@c^0,c
  1198  0014AE  6A08               	clrf	(fputc@c+1)^0,c
  1199  0014B0  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1200  0014B4  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1201  0014B8  EC54  F00D         	call	_fputc	;wreg free
  1202  0014BC                     
  1203                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1204  0014BC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1205  0014C0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1206  0014C4  2ADE               	incf	postinc2,f,c
  1207  0014C6  0E00               	movlw	0
  1208  0014C8  22DD               	addwfc	postdec2,f,c
  1209  0014CA  EF38  F00A         	goto	l3896
  1210  0014CE                     l1466:
  1211  0014CE  0012               	return		;funcret
  1212  0014D0                     __end_of_vfpfcnvrt:
  1213                           	callstack 0
  1214                           
  1215 ;; *************** function _dtoa *****************
  1216 ;; Defined at:
  1217 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  1220 ;;		 -> NULL(0), 
  1221 ;;  d               8   35[COMRAM] long long 
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;  n               8   59[COMRAM] long long 
  1224 ;;  i               2   67[COMRAM] int 
  1225 ;;  s               2   57[COMRAM] int 
  1226 ;;  w               2   55[COMRAM] int 
  1227 ;;  p               2   53[COMRAM] int 
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  2   33[COMRAM] int 
  1230 ;; Registers used:
  1231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1237 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;Total ram usage:       36 bytes
  1242 ;; Hardware stack levels used: 1
  1243 ;; Hardware stack levels required when called: 9
  1244 ;; This function calls:
  1245 ;;		___aodiv
  1246 ;;		___aomod
  1247 ;;		_abs
  1248 ;;		_pad
  1249 ;; This function is called by:
  1250 ;;		_vfpfcnvrt
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text4
  1255  001030                     __ptext4:
  1256                           	callstack 0
  1257  001030                     _dtoa:
  1258                           	callstack 18
  1259  001030                     
  1260                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1261  001030  C024  F03C         	movff	dtoa@d,dtoa@n
  1262  001034  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  1263  001038  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  1264  00103C  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  1265  001040  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  1266  001044  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  1267  001048  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  1268  00104C  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  1269  001050                     
  1270                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1271  001050  BE43               	btfsc	(dtoa@n+7)^0,7,c
  1272  001052  EF2D  F008         	goto	u2341
  1273  001056  EF30  F008         	goto	u2340
  1274  00105A                     u2341:
  1275  00105A  0E01               	movlw	1
  1276  00105C  EF31  F008         	goto	u2350
  1277  001060                     u2340:
  1278  001060  0E00               	movlw	0
  1279  001062                     u2350:
  1280  001062  6E3A               	movwf	dtoa@s^0,c
  1281  001064  6A3B               	clrf	(dtoa@s+1)^0,c
  1282                           
  1283                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1284  001066  503A               	movf	dtoa@s^0,w,c
  1285  001068  103B               	iorwf	(dtoa@s+1)^0,w,c
  1286  00106A  B4D8               	btfsc	status,2,c
  1287  00106C  EF3A  F008         	goto	u2361
  1288  001070  EF3C  F008         	goto	u2360
  1289  001074                     u2361:
  1290  001074  EF4C  F008         	goto	l3816
  1291  001078                     u2360:
  1292  001078                     
  1293                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1294  001078  1E43               	comf	(dtoa@n+7)^0,f,c
  1295  00107A  1E42               	comf	(dtoa@n+6)^0,f,c
  1296  00107C  1E41               	comf	(dtoa@n+5)^0,f,c
  1297  00107E  1E40               	comf	(dtoa@n+4)^0,f,c
  1298  001080  1E3F               	comf	(dtoa@n+3)^0,f,c
  1299  001082  1E3E               	comf	(dtoa@n+2)^0,f,c
  1300  001084  1E3D               	comf	(dtoa@n+1)^0,f,c
  1301  001086  6C3C               	negf	dtoa@n^0,c
  1302  001088  0E00               	movlw	0
  1303  00108A  223D               	addwfc	(dtoa@n+1)^0,f,c
  1304  00108C  223E               	addwfc	(dtoa@n+2)^0,f,c
  1305  00108E  223F               	addwfc	(dtoa@n+3)^0,f,c
  1306  001090  2240               	addwfc	(dtoa@n+4)^0,f,c
  1307  001092  2241               	addwfc	(dtoa@n+5)^0,f,c
  1308  001094  2242               	addwfc	(dtoa@n+6)^0,f,c
  1309  001096  2243               	addwfc	(dtoa@n+7)^0,f,c
  1310  001098                     l3816:
  1311                           
  1312                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1313  001098  0100               	movlb	0	; () banked
  1314  00109A  BFAE               	btfsc	(_prec+1)& (0+255),7,b
  1315  00109C  EF52  F008         	goto	u2371
  1316  0010A0  EF54  F008         	goto	u2370
  1317  0010A4                     u2371:
  1318  0010A4  EF55  F008         	goto	l3820
  1319  0010A8                     u2370:
  1320  0010A8                     
  1321                           ; BSR set to: 0
  1322                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1323  0010A8  93AF               	bcf	_flags& (0+255),1,b
  1324  0010AA                     l3820:
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1328  0010AA  BFAE               	btfsc	(_prec+1)& (0+255),7,b
  1329  0010AC  EF62  F008         	goto	u2380
  1330  0010B0  51AE               	movf	(_prec+1)& (0+255),w,b
  1331  0010B2  E106               	bnz	u2381
  1332  0010B4  05AD               	decf	_prec& (0+255),w,b
  1333  0010B6  B0D8               	btfsc	status,0,c
  1334  0010B8  EF60  F008         	goto	u2381
  1335  0010BC  EF62  F008         	goto	u2380
  1336  0010C0                     u2381:
  1337  0010C0  EF68  F008         	goto	l1439
  1338  0010C4                     u2380:
  1339  0010C4                     
  1340                           ; BSR set to: 0
  1341  0010C4  0E00               	movlw	0
  1342  0010C6  6E37               	movwf	(dtoa@p+1)^0,c
  1343  0010C8  0E01               	movlw	1
  1344  0010CA  6E36               	movwf	dtoa@p^0,c
  1345  0010CC  EF6C  F008         	goto	l1441
  1346  0010D0                     l1439:
  1347                           
  1348                           ; BSR set to: 0
  1349  0010D0  C0AD  F036         	movff	_prec,dtoa@p
  1350  0010D4  C0AE  F037         	movff	_prec+1,dtoa@p+1
  1351  0010D8                     l1441:
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1355  0010D8  C0AB  F038         	movff	_width,dtoa@w
  1356  0010DC  C0AC  F039         	movff	_width+1,dtoa@w+1
  1357  0010E0                     
  1358                           ; BSR set to: 0
  1359                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1360  0010E0  503A               	movf	dtoa@s^0,w,c
  1361  0010E2  103B               	iorwf	(dtoa@s+1)^0,w,c
  1362  0010E4  A4D8               	btfss	status,2,c
  1363  0010E6  EF77  F008         	goto	u2391
  1364  0010EA  EF79  F008         	goto	u2390
  1365  0010EE                     u2391:
  1366  0010EE  EF80  F008         	goto	l3828
  1367  0010F2                     u2390:
  1368  0010F2                     
  1369                           ; BSR set to: 0
  1370  0010F2  A5AF               	btfss	_flags& (0+255),2,b
  1371  0010F4  EF7E  F008         	goto	u2401
  1372  0010F8  EF80  F008         	goto	u2400
  1373  0010FC                     u2401:
  1374  0010FC  EF83  F008         	goto	l3830
  1375  001100                     u2400:
  1376  001100                     l3828:
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  1380  001100  0638               	decf	dtoa@w^0,f,c
  1381  001102  A0D8               	btfss	status,0,c
  1382  001104  0639               	decf	(dtoa@w+1)^0,f,c
  1383  001106                     l3830:
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1387  001106  0E00               	movlw	0
  1388  001108  6E45               	movwf	(dtoa@i+1)^0,c
  1389  00110A  0E1F               	movlw	31
  1390  00110C  6E44               	movwf	dtoa@i^0,c
  1391  00110E                     
  1392                           ; BSR set to: 0
  1393                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1394  00110E  0E00               	movlw	0
  1395  001110  6FD2               	movwf	(_dbuf+31)& (0+255),b
  1396                           
  1397                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1398  001112  EF07  F009         	goto	l3844
  1399  001116                     l3834:
  1400                           
  1401                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  1402  001116  0644               	decf	dtoa@i^0,f,c
  1403  001118  A0D8               	btfss	status,0,c
  1404  00111A  0645               	decf	(dtoa@i+1)^0,f,c
  1405  00111C                     
  1406                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1407  00111C  0EB3               	movlw	low _dbuf
  1408  00111E  2444               	addwf	dtoa@i^0,w,c
  1409  001120  6ED9               	movwf	fsr2l,c
  1410  001122  0E00               	movlw	high _dbuf
  1411  001124  2045               	addwfc	(dtoa@i+1)^0,w,c
  1412  001126  6EDA               	movwf	fsr2h,c
  1413  001128  C03C  F005         	movff	dtoa@n,___aomod@dividend
  1414  00112C  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1415  001130  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1416  001134  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1417  001138  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1418  00113C  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1419  001140  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1420  001144  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1421  001148  0E0A               	movlw	10
  1422  00114A  6E0D               	movwf	___aomod@divisor^0,c
  1423  00114C  0E00               	movlw	0
  1424  00114E  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1425  001150  0E00               	movlw	0
  1426  001152  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1427  001154  0E00               	movlw	0
  1428  001156  6E10               	movwf	(___aomod@divisor+3)^0,c
  1429  001158  0E00               	movlw	0
  1430  00115A  6E11               	movwf	(___aomod@divisor+4)^0,c
  1431  00115C  0E00               	movlw	0
  1432  00115E  6E12               	movwf	(___aomod@divisor+5)^0,c
  1433  001160  0E00               	movlw	0
  1434  001162  6E13               	movwf	(___aomod@divisor+6)^0,c
  1435  001164  0E00               	movlw	0
  1436  001166  6E14               	movwf	(___aomod@divisor+7)^0,c
  1437  001168  EC2C  F00B         	call	___aomod	;wreg free
  1438  00116C  C005  F02C         	movff	?___aomod,??_dtoa
  1439  001170  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  1440  001174  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  1441  001178  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  1442  00117C  C009  F030         	movff	?___aomod+4,??_dtoa+4
  1443  001180  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  1444  001184  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  1445  001188  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  1446  00118C  C02C  F017         	movff	??_dtoa,abs@a
  1447  001190  C02E  F018         	movff	??_dtoa+2,abs@a+1
  1448  001194  EC6E  F010         	call	_abs	;wreg free
  1449  001198  5017               	movf	?_abs^0,w,c
  1450  00119A  0F30               	addlw	48
  1451  00119C  6EDF               	movwf	indf2,c
  1452  00119E                     
  1453                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  1454  00119E  0636               	decf	dtoa@p^0,f,c
  1455  0011A0  A0D8               	btfss	status,0,c
  1456  0011A2  0637               	decf	(dtoa@p+1)^0,f,c
  1457  0011A4                     
  1458                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  1459  0011A4  0638               	decf	dtoa@w^0,f,c
  1460  0011A6  A0D8               	btfss	status,0,c
  1461  0011A8  0639               	decf	(dtoa@w+1)^0,f,c
  1462  0011AA                     
  1463                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1464  0011AA  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  1465  0011AE  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1466  0011B2  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1467  0011B6  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1468  0011BA  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1469  0011BE  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1470  0011C2  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1471  0011C6  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1472  0011CA  0E0A               	movlw	10
  1473  0011CC  6E0D               	movwf	___aodiv@divisor^0,c
  1474  0011CE  0E00               	movlw	0
  1475  0011D0  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  1476  0011D2  0E00               	movlw	0
  1477  0011D4  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  1478  0011D6  0E00               	movlw	0
  1479  0011D8  6E10               	movwf	(___aodiv@divisor+3)^0,c
  1480  0011DA  0E00               	movlw	0
  1481  0011DC  6E11               	movwf	(___aodiv@divisor+4)^0,c
  1482  0011DE  0E00               	movlw	0
  1483  0011E0  6E12               	movwf	(___aodiv@divisor+5)^0,c
  1484  0011E2  0E00               	movlw	0
  1485  0011E4  6E13               	movwf	(___aodiv@divisor+6)^0,c
  1486  0011E6  0E00               	movlw	0
  1487  0011E8  6E14               	movwf	(___aodiv@divisor+7)^0,c
  1488  0011EA  EC68  F00A         	call	___aodiv	;wreg free
  1489  0011EE  C005  F03C         	movff	?___aodiv,dtoa@n
  1490  0011F2  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  1491  0011F6  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  1492  0011FA  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  1493  0011FE  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  1494  001202  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  1495  001206  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  1496  00120A  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  1497  00120E                     l3844:
  1498                           
  1499                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1500  00120E  BE45               	btfsc	(dtoa@i+1)^0,7,c
  1501  001210  EF12  F009         	goto	u2411
  1502  001214  5045               	movf	(dtoa@i+1)^0,w,c
  1503  001216  E108               	bnz	u2410
  1504  001218  0444               	decf	dtoa@i^0,w,c
  1505  00121A  A0D8               	btfss	status,0,c
  1506  00121C  EF12  F009         	goto	u2411
  1507  001220  EF14  F009         	goto	u2410
  1508  001224                     u2411:
  1509  001224  EF45  F009         	goto	l3854
  1510  001228                     u2410:
  1511  001228  503C               	movf	dtoa@n^0,w,c
  1512  00122A  103D               	iorwf	(dtoa@n+1)^0,w,c
  1513  00122C  103E               	iorwf	(dtoa@n+2)^0,w,c
  1514  00122E  103F               	iorwf	(dtoa@n+3)^0,w,c
  1515  001230  1040               	iorwf	(dtoa@n+4)^0,w,c
  1516  001232  1041               	iorwf	(dtoa@n+5)^0,w,c
  1517  001234  1042               	iorwf	(dtoa@n+6)^0,w,c
  1518  001236  1043               	iorwf	(dtoa@n+7)^0,w,c
  1519  001238  A4D8               	btfss	status,2,c
  1520  00123A  EF21  F009         	goto	u2421
  1521  00123E  EF23  F009         	goto	u2420
  1522  001242                     u2421:
  1523  001242  EF8B  F008         	goto	l3834
  1524  001246                     u2420:
  1525  001246  BE37               	btfsc	(dtoa@p+1)^0,7,c
  1526  001248  EF30  F009         	goto	u2430
  1527  00124C  5037               	movf	(dtoa@p+1)^0,w,c
  1528  00124E  E106               	bnz	u2431
  1529  001250  0436               	decf	dtoa@p^0,w,c
  1530  001252  B0D8               	btfsc	status,0,c
  1531  001254  EF2E  F009         	goto	u2431
  1532  001258  EF30  F009         	goto	u2430
  1533  00125C                     u2431:
  1534  00125C  EF8B  F008         	goto	l3834
  1535  001260                     u2430:
  1536  001260  BE39               	btfsc	(dtoa@w+1)^0,7,c
  1537  001262  EF3B  F009         	goto	u2441
  1538  001266  5039               	movf	(dtoa@w+1)^0,w,c
  1539  001268  E108               	bnz	u2440
  1540  00126A  0438               	decf	dtoa@w^0,w,c
  1541  00126C  A0D8               	btfss	status,0,c
  1542  00126E  EF3B  F009         	goto	u2441
  1543  001272  EF3D  F009         	goto	u2440
  1544  001276                     u2441:
  1545  001276  EF45  F009         	goto	l3854
  1546  00127A                     u2440:
  1547  00127A  0100               	movlb	0	; () banked
  1548  00127C  B3AF               	btfsc	_flags& (0+255),1,b
  1549  00127E  EF43  F009         	goto	u2451
  1550  001282  EF45  F009         	goto	u2450
  1551  001286                     u2451:
  1552  001286  EF8B  F008         	goto	l3834
  1553  00128A                     u2450:
  1554  00128A                     l3854:
  1555                           
  1556                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1557  00128A  503A               	movf	dtoa@s^0,w,c
  1558  00128C  103B               	iorwf	(dtoa@s+1)^0,w,c
  1559  00128E  A4D8               	btfss	status,2,c
  1560  001290  EF4C  F009         	goto	u2461
  1561  001294  EF4E  F009         	goto	u2460
  1562  001298                     u2461:
  1563  001298  EF56  F009         	goto	l3858
  1564  00129C                     u2460:
  1565  00129C  0100               	movlb	0	; () banked
  1566  00129E  A5AF               	btfss	_flags& (0+255),2,b
  1567  0012A0  EF54  F009         	goto	u2471
  1568  0012A4  EF56  F009         	goto	u2470
  1569  0012A8                     u2471:
  1570  0012A8  EF74  F009         	goto	l3868
  1571  0012AC                     u2470:
  1572  0012AC                     l3858:
  1573                           
  1574                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  1575  0012AC  0644               	decf	dtoa@i^0,f,c
  1576  0012AE  A0D8               	btfss	status,0,c
  1577  0012B0  0645               	decf	(dtoa@i+1)^0,f,c
  1578  0012B2                     
  1579                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1580  0012B2  503A               	movf	dtoa@s^0,w,c
  1581  0012B4  103B               	iorwf	(dtoa@s+1)^0,w,c
  1582  0012B6  A4D8               	btfss	status,2,c
  1583  0012B8  EF60  F009         	goto	u2481
  1584  0012BC  EF62  F009         	goto	u2480
  1585  0012C0                     u2481:
  1586  0012C0  EF68  F009         	goto	l3864
  1587  0012C4                     u2480:
  1588  0012C4  0E00               	movlw	0
  1589  0012C6  6E35               	movwf	(_dtoa$2046+1)^0,c
  1590  0012C8  0E2B               	movlw	43
  1591  0012CA  6E34               	movwf	_dtoa$2046^0,c
  1592  0012CC  EF6C  F009         	goto	l3866
  1593  0012D0                     l3864:
  1594  0012D0  0E00               	movlw	0
  1595  0012D2  6E35               	movwf	(_dtoa$2046+1)^0,c
  1596  0012D4  0E2D               	movlw	45
  1597  0012D6  6E34               	movwf	_dtoa$2046^0,c
  1598  0012D8                     l3866:
  1599  0012D8  0EB3               	movlw	low _dbuf
  1600  0012DA  2444               	addwf	dtoa@i^0,w,c
  1601  0012DC  6ED9               	movwf	fsr2l,c
  1602  0012DE  0E00               	movlw	high _dbuf
  1603  0012E0  2045               	addwfc	(dtoa@i+1)^0,w,c
  1604  0012E2  6EDA               	movwf	fsr2h,c
  1605  0012E4  C034  FFDF         	movff	_dtoa$2046,indf2
  1606  0012E8                     l3868:
  1607                           
  1608                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1609  0012E8  C022  F017         	movff	dtoa@fp,pad@fp
  1610  0012EC  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  1611  0012F0  0EB3               	movlw	low _dbuf
  1612  0012F2  2444               	addwf	dtoa@i^0,w,c
  1613  0012F4  6E19               	movwf	pad@buf^0,c
  1614  0012F6  0E00               	movlw	high _dbuf
  1615  0012F8  2045               	addwfc	(dtoa@i+1)^0,w,c
  1616  0012FA  6E1A               	movwf	(pad@buf+1)^0,c
  1617  0012FC  C038  F01B         	movff	dtoa@w,pad@p
  1618  001300  C039  F01C         	movff	dtoa@w+1,pad@p+1
  1619  001304  ECDE  F00B         	call	_pad	;wreg free
  1620  001308  C017  F022         	movff	?_pad,?_dtoa
  1621  00130C  C018  F023         	movff	?_pad+1,?_dtoa+1
  1622  001310  0012               	return		;funcret
  1623  001312                     __end_of_dtoa:
  1624                           	callstack 0
  1625                           
  1626 ;; *************** function _pad *****************
  1627 ;; Defined at:
  1628 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  1631 ;;		 -> NULL(0), 
  1632 ;;  buf             2   24[COMRAM] PTR unsigned char 
  1633 ;;		 -> dbuf(32), 
  1634 ;;  p               2   26[COMRAM] int 
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;  w               2   31[COMRAM] int 
  1637 ;;  i               2   29[COMRAM] int 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  2   22[COMRAM] int 
  1640 ;; Registers used:
  1641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1647 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1648 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;Total ram usage:       11 bytes
  1652 ;; Hardware stack levels used: 1
  1653 ;; Hardware stack levels required when called: 8
  1654 ;; This function calls:
  1655 ;;		_fputc
  1656 ;;		_fputs
  1657 ;;		_strlen
  1658 ;; This function is called by:
  1659 ;;		_dtoa
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text5
  1664  0017BC                     __ptext5:
  1665                           	callstack 0
  1666  0017BC                     _pad:
  1667                           	callstack 18
  1668  0017BC                     
  1669                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1670  0017BC  0100               	movlb	0	; () banked
  1671  0017BE  A1AF               	btfss	_flags& (0+255),0,b
  1672  0017C0  EFE4  F00B         	goto	u2291
  1673  0017C4  EFE6  F00B         	goto	u2290
  1674  0017C8                     u2291:
  1675  0017C8  EFF0  F00B         	goto	l3788
  1676  0017CC                     u2290:
  1677  0017CC                     
  1678                           ; BSR set to: 0
  1679                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1680  0017CC  C019  F010         	movff	pad@buf,fputs@s
  1681  0017D0  C01A  F011         	movff	pad@buf+1,fputs@s+1
  1682  0017D4  C017  F012         	movff	pad@fp,fputs@fp
  1683  0017D8  C018  F013         	movff	pad@fp+1,fputs@fp+1
  1684  0017DC  EC09  F010         	call	_fputs	;wreg free
  1685  0017E0                     l3788:
  1686                           
  1687                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1688  0017E0  BE1C               	btfsc	(pad@p+1)^0,7,c
  1689  0017E2  EFF5  F00B         	goto	u2301
  1690  0017E6  EFF7  F00B         	goto	u2300
  1691  0017EA                     u2301:
  1692  0017EA  EFFD  F00B         	goto	l3792
  1693  0017EE                     u2300:
  1694  0017EE  C01B  F020         	movff	pad@p,pad@w
  1695  0017F2  C01C  F021         	movff	pad@p+1,pad@w+1
  1696  0017F6  EF01  F00C         	goto	l1428
  1697  0017FA                     l3792:
  1698  0017FA  0E00               	movlw	0
  1699  0017FC  6E21               	movwf	(pad@w+1)^0,c
  1700  0017FE  0E00               	movlw	0
  1701  001800  6E20               	movwf	pad@w^0,c
  1702  001802                     l1428:
  1703                           
  1704                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1705  001802  0E00               	movlw	0
  1706  001804  6E1F               	movwf	(pad@i+1)^0,c
  1707  001806  0E00               	movlw	0
  1708  001808  6E1E               	movwf	pad@i^0,c
  1709                           
  1710                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1711  00180A  EF13  F00C         	goto	l3798
  1712  00180E                     l3794:
  1713                           
  1714                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1715  00180E  0E00               	movlw	0
  1716  001810  6E08               	movwf	(fputc@c+1)^0,c
  1717  001812  0E20               	movlw	32
  1718  001814  6E07               	movwf	fputc@c^0,c
  1719  001816  C017  F009         	movff	pad@fp,fputc@fp
  1720  00181A  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  1721  00181E  EC54  F00D         	call	_fputc	;wreg free
  1722  001822                     
  1723                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1724  001822  4A1E               	infsnz	pad@i^0,f,c
  1725  001824  2A1F               	incf	(pad@i+1)^0,f,c
  1726  001826                     l3798:
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1729  001826  5020               	movf	pad@w^0,w,c
  1730  001828  5C1E               	subwf	pad@i^0,w,c
  1731  00182A  501F               	movf	(pad@i+1)^0,w,c
  1732  00182C  0A80               	xorlw	128
  1733  00182E  6E1D               	movwf	??_pad^0,c
  1734  001830  5021               	movf	(pad@w+1)^0,w,c
  1735  001832  0A80               	xorlw	128
  1736  001834  581D               	subwfb	??_pad^0,w,c
  1737  001836  A0D8               	btfss	status,0,c
  1738  001838  EF20  F00C         	goto	u2311
  1739  00183C  EF22  F00C         	goto	u2310
  1740  001840                     u2311:
  1741  001840  EF07  F00C         	goto	l3794
  1742  001844                     u2310:
  1743  001844                     
  1744                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1745  001844  0100               	movlb	0	; () banked
  1746  001846  B1AF               	btfsc	_flags& (0+255),0,b
  1747  001848  EF28  F00C         	goto	u2321
  1748  00184C  EF2A  F00C         	goto	u2320
  1749  001850                     u2321:
  1750  001850  EF34  F00C         	goto	l3802
  1751  001854                     u2320:
  1752  001854                     
  1753                           ; BSR set to: 0
  1754                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1755  001854  C019  F010         	movff	pad@buf,fputs@s
  1756  001858  C01A  F011         	movff	pad@buf+1,fputs@s+1
  1757  00185C  C017  F012         	movff	pad@fp,fputs@fp
  1758  001860  C018  F013         	movff	pad@fp+1,fputs@fp+1
  1759  001864  EC09  F010         	call	_fputs	;wreg free
  1760  001868                     l3802:
  1761                           
  1762                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1763  001868  C019  F005         	movff	pad@buf,strlen@s
  1764  00186C  C01A  F006         	movff	pad@buf+1,strlen@s+1
  1765  001870  ECAE  F010         	call	_strlen	;wreg free
  1766  001874  5020               	movf	pad@w^0,w,c
  1767  001876  2405               	addwf	?_strlen^0,w,c
  1768  001878  6E17               	movwf	?_pad^0,c
  1769  00187A  5021               	movf	(pad@w+1)^0,w,c
  1770  00187C  2006               	addwfc	(?_strlen+1)^0,w,c
  1771  00187E  6E18               	movwf	(?_pad+1)^0,c
  1772  001880  0012               	return		;funcret
  1773  001882                     __end_of_pad:
  1774                           	callstack 0
  1775                           
  1776 ;; *************** function _strlen *****************
  1777 ;; Defined at:
  1778 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  s               2    4[COMRAM] PTR const unsigned char 
  1781 ;;		 -> dbuf(32), 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  a               2    6[COMRAM] PTR const unsigned char 
  1784 ;;		 -> dbuf(32), 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  2    4[COMRAM] unsigned int 
  1787 ;; Registers used:
  1788 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1794 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1795 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;Total ram usage:        4 bytes
  1799 ;; Hardware stack levels used: 1
  1800 ;; Hardware stack levels required when called: 4
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_pad
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           	psect	text6
  1809  00215C                     __ptext6:
  1810                           	callstack 0
  1811  00215C                     _strlen:
  1812                           	callstack 21
  1813  00215C  C005  F007         	movff	strlen@s,strlen@a
  1814  002160  C006  F008         	movff	strlen@s+1,strlen@a+1
  1815  002164  EFB6  F010         	goto	l3698
  1816  002168                     l3696:
  1817  002168  4A05               	infsnz	strlen@s^0,f,c
  1818  00216A  2A06               	incf	(strlen@s+1)^0,f,c
  1819  00216C                     l3698:
  1820  00216C  C005  FFD9         	movff	strlen@s,fsr2l
  1821  002170  C006  FFDA         	movff	strlen@s+1,fsr2h
  1822  002174  50DF               	movf	indf2,w,c
  1823  002176  A4D8               	btfss	status,2,c
  1824  002178  EFC0  F010         	goto	u2151
  1825  00217C  EFC2  F010         	goto	u2150
  1826  002180                     u2151:
  1827  002180  EFB4  F010         	goto	l3696
  1828  002184                     u2150:
  1829  002184  5007               	movf	strlen@a^0,w,c
  1830  002186  5C05               	subwf	strlen@s^0,w,c
  1831  002188  6E05               	movwf	?_strlen^0,c
  1832  00218A  5008               	movf	(strlen@a+1)^0,w,c
  1833  00218C  5806               	subwfb	(strlen@s+1)^0,w,c
  1834  00218E  6E06               	movwf	(?_strlen+1)^0,c
  1835  002190  0012               	return		;funcret
  1836  002192                     __end_of_strlen:
  1837                           	callstack 0
  1838                           
  1839 ;; *************** function _fputs *****************
  1840 ;; Defined at:
  1841 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  s               2   15[COMRAM] PTR const unsigned char 
  1844 ;;		 -> dbuf(32), 
  1845 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  1846 ;;		 -> NULL(0), 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  i               2   20[COMRAM] int 
  1849 ;;  c               1   19[COMRAM] unsigned char 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  2   15[COMRAM] int 
  1852 ;; Registers used:
  1853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1859 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;Total ram usage:        7 bytes
  1864 ;; Hardware stack levels used: 1
  1865 ;; Hardware stack levels required when called: 7
  1866 ;; This function calls:
  1867 ;;		_fputc
  1868 ;; This function is called by:
  1869 ;;		_pad
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text7
  1874  002012                     __ptext7:
  1875                           	callstack 0
  1876  002012                     _fputs:
  1877                           	callstack 18
  1878  002012  0E00               	movlw	0
  1879  002014  6E16               	movwf	(fputs@i+1)^0,c
  1880  002016  0E00               	movlw	0
  1881  002018  6E15               	movwf	fputs@i^0,c
  1882  00201A  EF1A  F010         	goto	l3692
  1883  00201E                     l3688:
  1884  00201E  C014  F007         	movff	fputs@c,fputc@c
  1885  002022  6A08               	clrf	(fputc@c+1)^0,c
  1886  002024  C012  F009         	movff	fputs@fp,fputc@fp
  1887  002028  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  1888  00202C  EC54  F00D         	call	_fputc	;wreg free
  1889  002030  4A15               	infsnz	fputs@i^0,f,c
  1890  002032  2A16               	incf	(fputs@i+1)^0,f,c
  1891  002034                     l3692:
  1892  002034  5015               	movf	fputs@i^0,w,c
  1893  002036  2410               	addwf	fputs@s^0,w,c
  1894  002038  6ED9               	movwf	fsr2l,c
  1895  00203A  5016               	movf	(fputs@i+1)^0,w,c
  1896  00203C  2011               	addwfc	(fputs@s+1)^0,w,c
  1897  00203E  6EDA               	movwf	fsr2h,c
  1898  002040  50DF               	movf	indf2,w,c
  1899  002042  6E14               	movwf	fputs@c^0,c
  1900  002044  5014               	movf	fputs@c^0,w,c
  1901  002046  A4D8               	btfss	status,2,c
  1902  002048  EF28  F010         	goto	u2141
  1903  00204C  EF2A  F010         	goto	u2140
  1904  002050                     u2141:
  1905  002050  EF0F  F010         	goto	l3688
  1906  002054                     u2140:
  1907  002054  0012               	return		;funcret
  1908  002056                     __end_of_fputs:
  1909                           	callstack 0
  1910                           
  1911 ;; *************** function _fputc *****************
  1912 ;; Defined at:
  1913 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;  c               2    6[COMRAM] int 
  1916 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  1917 ;;		 -> NULL(0), 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;		None
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  2    6[COMRAM] int 
  1922 ;; Registers used:
  1923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1929 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;Total ram usage:        9 bytes
  1934 ;; Hardware stack levels used: 1
  1935 ;; Hardware stack levels required when called: 6
  1936 ;; This function calls:
  1937 ;;		_putch
  1938 ;; This function is called by:
  1939 ;;		_pad
  1940 ;;		_vfpfcnvrt
  1941 ;;		_fputs
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text8
  1946  001AA8                     __ptext8:
  1947                           	callstack 0
  1948  001AA8                     _fputc:
  1949                           	callstack 21
  1950  001AA8  5009               	movf	fputc@fp^0,w,c
  1951  001AAA  100A               	iorwf	(fputc@fp+1)^0,w,c
  1952  001AAC  B4D8               	btfsc	status,2,c
  1953  001AAE  EF5B  F00D         	goto	u2101
  1954  001AB2  EF5D  F00D         	goto	u2100
  1955  001AB6                     u2101:
  1956  001AB6  EF66  F00D         	goto	l3676
  1957  001ABA                     u2100:
  1958  001ABA  5009               	movf	fputc@fp^0,w,c
  1959  001ABC  100A               	iorwf	(fputc@fp+1)^0,w,c
  1960  001ABE  A4D8               	btfss	status,2,c
  1961  001AC0  EF64  F00D         	goto	u2111
  1962  001AC4  EF66  F00D         	goto	u2110
  1963  001AC8                     u2111:
  1964  001AC8  EF6B  F00D         	goto	l3678
  1965  001ACC                     u2110:
  1966  001ACC                     l3676:
  1967  001ACC  5007               	movf	fputc@c^0,w,c
  1968  001ACE  EC3A  F012         	call	_putch
  1969  001AD2  EF9E  F00D         	goto	l1492
  1970  001AD6                     l3678:
  1971  001AD6  EE20 F009          	lfsr	2,9
  1972  001ADA  5009               	movf	fputc@fp^0,w,c
  1973  001ADC  26D9               	addwf	fsr2l,f,c
  1974  001ADE  500A               	movf	(fputc@fp+1)^0,w,c
  1975  001AE0  22DA               	addwfc	fsr2h,f,c
  1976  001AE2  50DE               	movf	postinc2,w,c
  1977  001AE4  10DE               	iorwf	postinc2,w,c
  1978  001AE6  B4D8               	btfsc	status,2,c
  1979  001AE8  EF78  F00D         	goto	u2121
  1980  001AEC  EF7A  F00D         	goto	u2120
  1981  001AF0                     u2121:
  1982  001AF0  EF95  F00D         	goto	l3682
  1983  001AF4                     u2120:
  1984  001AF4  EE20 F009          	lfsr	2,9
  1985  001AF8  5009               	movf	fputc@fp^0,w,c
  1986  001AFA  26D9               	addwf	fsr2l,f,c
  1987  001AFC  500A               	movf	(fputc@fp+1)^0,w,c
  1988  001AFE  22DA               	addwfc	fsr2h,f,c
  1989  001B00  EE10 F003          	lfsr	1,3
  1990  001B04  5009               	movf	fputc@fp^0,w,c
  1991  001B06  26E1               	addwf	fsr1l,f,c
  1992  001B08  500A               	movf	(fputc@fp+1)^0,w,c
  1993  001B0A  22E2               	addwfc	fsr1h,f,c
  1994  001B0C  50DE               	movf	postinc2,w,c
  1995  001B0E  5CE6               	subwf	postinc1,w,c
  1996  001B10  50E6               	movf	postinc1,w,c
  1997  001B12  0A80               	xorlw	128
  1998  001B14  6E0F               	movwf	(??_fputc+4)^0,c
  1999  001B16  50DE               	movf	postinc2,w,c
  2000  001B18  0A80               	xorlw	128
  2001  001B1A  580F               	subwfb	(??_fputc+4)^0,w,c
  2002  001B1C  B0D8               	btfsc	status,0,c
  2003  001B1E  EF93  F00D         	goto	u2131
  2004  001B22  EF95  F00D         	goto	u2130
  2005  001B26                     u2131:
  2006  001B26  EF9E  F00D         	goto	l1492
  2007  001B2A                     u2130:
  2008  001B2A                     l3682:
  2009  001B2A  EE20 F003          	lfsr	2,3
  2010  001B2E  5009               	movf	fputc@fp^0,w,c
  2011  001B30  26D9               	addwf	fsr2l,f,c
  2012  001B32  500A               	movf	(fputc@fp+1)^0,w,c
  2013  001B34  22DA               	addwfc	fsr2h,f,c
  2014  001B36  2ADE               	incf	postinc2,f,c
  2015  001B38  0E00               	movlw	0
  2016  001B3A  22DD               	addwfc	postdec2,f,c
  2017  001B3C                     l1492:
  2018  001B3C  0012               	return		;funcret
  2019  001B3E                     __end_of_fputc:
  2020                           	callstack 0
  2021                           
  2022 ;; *************** function _putch *****************
  2023 ;; Defined at:
  2024 ;;		line 201 in file "mcc_generated_files/eusart.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  txData          1    wreg     unsigned char 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  txData          1    5[COMRAM] unsigned char 
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2041 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2042 ;;Total ram usage:        1 bytes
  2043 ;; Hardware stack levels used: 1
  2044 ;; Hardware stack levels required when called: 5
  2045 ;; This function calls:
  2046 ;;		_EUSART_Write
  2047 ;; This function is called by:
  2048 ;;		_fputc
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text9
  2053  002474                     __ptext9:
  2054                           	callstack 0
  2055  002474                     _putch:
  2056                           	callstack 21
  2057                           
  2058                           ;incstack = 0
  2059                           ;putch@txData stored from wreg
  2060  002474  6E06               	movwf	putch@txData^0,c
  2061  002476                     
  2062                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  2063  002476  5006               	movf	putch@txData^0,w,c
  2064  002478  ECDD  F00F         	call	_EUSART_Write
  2065  00247C  0012               	return		;funcret
  2066  00247E                     __end_of_putch:
  2067                           	callstack 0
  2068                           
  2069 ;; *************** function _EUSART_Write *****************
  2070 ;; Defined at:
  2071 ;;		line 173 in file "mcc_generated_files/eusart.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;  txData          1    wreg     unsigned char 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  txData          1    4[COMRAM] unsigned char 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;Total ram usage:        1 bytes
  2090 ;; Hardware stack levels used: 1
  2091 ;; Hardware stack levels required when called: 4
  2092 ;; This function calls:
  2093 ;;		Nothing
  2094 ;; This function is called by:
  2095 ;;		_putch
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text10
  2100  001FBA                     __ptext10:
  2101                           	callstack 0
  2102  001FBA                     _EUSART_Write:
  2103                           	callstack 21
  2104                           
  2105                           ;incstack = 0
  2106                           ;EUSART_Write@txData stored from wreg
  2107  001FBA  6E05               	movwf	EUSART_Write@txData^0,c
  2108  001FBC                     l3654:
  2109                           
  2110                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  2111  001FBC  0100               	movlb	0	; () banked
  2112  001FBE  51ED               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
  2113  001FC0  B4D8               	btfsc	status,2,c
  2114  001FC2  EFE5  F00F         	goto	u2071
  2115  001FC6  EFE7  F00F         	goto	u2070
  2116  001FCA                     u2071:
  2117  001FCA  EFDE  F00F         	goto	l3654
  2118  001FCE                     u2070:
  2119  001FCE                     
  2120                           ; BSR set to: 0
  2121                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TX1IE)
  2122  001FCE  B89D               	btfsc	157,4,c	;volatile
  2123  001FD0  EFEC  F00F         	goto	u2081
  2124  001FD4  EFEE  F00F         	goto	u2080
  2125  001FD8                     u2081:
  2126  001FD8  EFF2  F00F         	goto	l595
  2127  001FDC                     u2080:
  2128  001FDC                     
  2129                           ; BSR set to: 0
  2130                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  2131  001FDC  C005  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  2132                           
  2133                           ;mcc_generated_files/eusart.c: 182:     }
  2134  001FE0  EF07  F010         	goto	l3668
  2135  001FE4                     l595:
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TX1IE = 0;
  2139  001FE4  989D               	bcf	157,4,c	;volatile
  2140  001FE6                     
  2141                           ; BSR set to: 0
  2142                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  2143  001FE6  0E9E               	movlw	low _eusartTxBuffer
  2144  001FE8  245A               	addwf	_eusartTxHead^0,w,c	;volatile
  2145  001FEA  6ED9               	movwf	fsr2l,c
  2146  001FEC  6ADA               	clrf	fsr2h,c
  2147  001FEE  0E00               	movlw	high _eusartTxBuffer
  2148  001FF0  22DA               	addwfc	fsr2h,f,c
  2149  001FF2  C005  FFDF         	movff	EUSART_Write@txData,indf2
  2150  001FF6                     
  2151                           ; BSR set to: 0
  2152  001FF6  2A5A               	incf	_eusartTxHead^0,f,c	;volatile
  2153  001FF8                     
  2154                           ; BSR set to: 0
  2155                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  2156  001FF8  0E07               	movlw	7
  2157  001FFA  645A               	cpfsgt	_eusartTxHead^0,c	;volatile
  2158  001FFC  EF02  F010         	goto	u2091
  2159  002000  EF04  F010         	goto	u2090
  2160  002004                     u2091:
  2161  002004  EF06  F010         	goto	l3666
  2162  002008                     u2090:
  2163  002008                     
  2164                           ; BSR set to: 0
  2165                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  2166  002008  0E00               	movlw	0
  2167  00200A  6E5A               	movwf	_eusartTxHead^0,c	;volatile
  2168  00200C                     l3666:
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  2172  00200C  07ED               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  2173  00200E                     l3668:
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TX1IE = 1;
  2177  00200E  889D               	bsf	157,4,c	;volatile
  2178  002010                     
  2179                           ; BSR set to: 0
  2180  002010  0012               	return		;funcret
  2181  002012                     __end_of_EUSART_Write:
  2182                           	callstack 0
  2183                           
  2184 ;; *************** function _abs *****************
  2185 ;; Defined at:
  2186 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  a               2   22[COMRAM] int 
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;		None
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  2   22[COMRAM] int 
  2193 ;; Registers used:
  2194 ;;		wreg, status,2, status,0
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2200 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2202 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2203 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2204 ;;Total ram usage:        4 bytes
  2205 ;; Hardware stack levels used: 1
  2206 ;; Hardware stack levels required when called: 4
  2207 ;; This function calls:
  2208 ;;		Nothing
  2209 ;; This function is called by:
  2210 ;;		_dtoa
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text11
  2215  0020DC                     __ptext11:
  2216                           	callstack 0
  2217  0020DC                     _abs:
  2218                           	callstack 22
  2219  0020DC  BE18               	btfsc	(abs@a+1)^0,7,c
  2220  0020DE  EF7B  F010         	goto	u2330
  2221  0020E2  5018               	movf	(abs@a+1)^0,w,c
  2222  0020E4  E106               	bnz	u2331
  2223  0020E6  0417               	decf	abs@a^0,w,c
  2224  0020E8  B0D8               	btfsc	status,0,c
  2225  0020EA  EF79  F010         	goto	u2331
  2226  0020EE  EF7B  F010         	goto	u2330
  2227  0020F2                     u2331:
  2228  0020F2  EF89  F010         	goto	l1477
  2229  0020F6                     u2330:
  2230  0020F6  C017  F019         	movff	abs@a,??_abs
  2231  0020FA  C018  F01A         	movff	abs@a+1,??_abs+1
  2232  0020FE  1E19               	comf	??_abs^0,f,c
  2233  002100  1E1A               	comf	(??_abs+1)^0,f,c
  2234  002102  4A19               	infsnz	??_abs^0,f,c
  2235  002104  2A1A               	incf	(??_abs+1)^0,f,c
  2236  002106  C019  F017         	movff	??_abs,?_abs
  2237  00210A  C01A  F018         	movff	??_abs+1,?_abs+1
  2238  00210E  EF8D  F010         	goto	l1480
  2239  002112                     l1477:
  2240  002112  C017  F017         	movff	abs@a,?_abs
  2241  002116  C018  F018         	movff	abs@a+1,?_abs+1
  2242  00211A                     l1480:
  2243  00211A  0012               	return		;funcret
  2244  00211C                     __end_of_abs:
  2245                           	callstack 0
  2246                           
  2247 ;; *************** function ___aomod *****************
  2248 ;; Defined at:
  2249 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  dividend        8    4[COMRAM] long long 
  2252 ;;  divisor         8   12[COMRAM] long long 
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;  sign            1   21[COMRAM] unsigned char 
  2255 ;;  counter         1   20[COMRAM] unsigned char 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  8    4[COMRAM] long long 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2, status,0
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2265 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;Total ram usage:       18 bytes
  2270 ;; Hardware stack levels used: 1
  2271 ;; Hardware stack levels required when called: 4
  2272 ;; This function calls:
  2273 ;;		Nothing
  2274 ;; This function is called by:
  2275 ;;		_dtoa
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           	psect	text12
  2280  001658                     __ptext12:
  2281                           	callstack 0
  2282  001658                     ___aomod:
  2283                           	callstack 22
  2284  001658  0E00               	movlw	0
  2285  00165A  6E16               	movwf	___aomod@sign^0,c
  2286  00165C  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  2287  00165E  EF35  F00B         	goto	u2230
  2288  001662  EF33  F00B         	goto	u2231
  2289  001666                     u2231:
  2290  001666  EF47  F00B         	goto	l3756
  2291  00166A                     u2230:
  2292  00166A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2293  00166C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2294  00166E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2295  001670  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2296  001672  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2297  001674  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2298  001676  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2299  001678  6C05               	negf	___aomod@dividend^0,c
  2300  00167A  0E00               	movlw	0
  2301  00167C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2302  00167E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2303  001680  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2304  001682  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2305  001684  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2306  001686  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2307  001688  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2308  00168A  0E01               	movlw	1
  2309  00168C  6E16               	movwf	___aomod@sign^0,c
  2310  00168E                     l3756:
  2311  00168E  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  2312  001690  EF4E  F00B         	goto	u2240
  2313  001694  EF4C  F00B         	goto	u2241
  2314  001698                     u2241:
  2315  001698  EF5E  F00B         	goto	l3760
  2316  00169C                     u2240:
  2317  00169C  1E14               	comf	(___aomod@divisor+7)^0,f,c
  2318  00169E  1E13               	comf	(___aomod@divisor+6)^0,f,c
  2319  0016A0  1E12               	comf	(___aomod@divisor+5)^0,f,c
  2320  0016A2  1E11               	comf	(___aomod@divisor+4)^0,f,c
  2321  0016A4  1E10               	comf	(___aomod@divisor+3)^0,f,c
  2322  0016A6  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  2323  0016A8  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  2324  0016AA  6C0D               	negf	___aomod@divisor^0,c
  2325  0016AC  0E00               	movlw	0
  2326  0016AE  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  2327  0016B0  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  2328  0016B2  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  2329  0016B4  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  2330  0016B6  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  2331  0016B8  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  2332  0016BA  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  2333  0016BC                     l3760:
  2334  0016BC  500D               	movf	___aomod@divisor^0,w,c
  2335  0016BE  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  2336  0016C0  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  2337  0016C2  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  2338  0016C4  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  2339  0016C6  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  2340  0016C8  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  2341  0016CA  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  2342  0016CC  B4D8               	btfsc	status,2,c
  2343  0016CE  EF6B  F00B         	goto	u2251
  2344  0016D2  EF6D  F00B         	goto	u2250
  2345  0016D6                     u2251:
  2346  0016D6  EFB5  F00B         	goto	l3776
  2347  0016DA                     u2250:
  2348  0016DA  0E01               	movlw	1
  2349  0016DC  6E15               	movwf	___aomod@counter^0,c
  2350  0016DE  EF7B  F00B         	goto	l3766
  2351  0016E2                     l3764:
  2352  0016E2  90D8               	bcf	status,0,c
  2353  0016E4  360D               	rlcf	___aomod@divisor^0,f,c
  2354  0016E6  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  2355  0016E8  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  2356  0016EA  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  2357  0016EC  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  2358  0016EE  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  2359  0016F0  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  2360  0016F2  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  2361  0016F4  2A15               	incf	___aomod@counter^0,f,c
  2362  0016F6                     l3766:
  2363  0016F6  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  2364  0016F8  EF80  F00B         	goto	u2261
  2365  0016FC  EF82  F00B         	goto	u2260
  2366  001700                     u2261:
  2367  001700  EF71  F00B         	goto	l3764
  2368  001704                     u2260:
  2369  001704                     l3768:
  2370  001704  500D               	movf	___aomod@divisor^0,w,c
  2371  001706  5C05               	subwf	___aomod@dividend^0,w,c
  2372  001708  500E               	movf	(___aomod@divisor+1)^0,w,c
  2373  00170A  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  2374  00170C  500F               	movf	(___aomod@divisor+2)^0,w,c
  2375  00170E  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  2376  001710  5010               	movf	(___aomod@divisor+3)^0,w,c
  2377  001712  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  2378  001714  5011               	movf	(___aomod@divisor+4)^0,w,c
  2379  001716  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  2380  001718  5012               	movf	(___aomod@divisor+5)^0,w,c
  2381  00171A  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  2382  00171C  5013               	movf	(___aomod@divisor+6)^0,w,c
  2383  00171E  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  2384  001720  5014               	movf	(___aomod@divisor+7)^0,w,c
  2385  001722  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  2386  001724  A0D8               	btfss	status,0,c
  2387  001726  EF97  F00B         	goto	u2271
  2388  00172A  EF99  F00B         	goto	u2270
  2389  00172E                     u2271:
  2390  00172E  EFA9  F00B         	goto	l3772
  2391  001732                     u2270:
  2392  001732  500D               	movf	___aomod@divisor^0,w,c
  2393  001734  5E05               	subwf	___aomod@dividend^0,f,c
  2394  001736  500E               	movf	(___aomod@divisor+1)^0,w,c
  2395  001738  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  2396  00173A  500F               	movf	(___aomod@divisor+2)^0,w,c
  2397  00173C  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  2398  00173E  5010               	movf	(___aomod@divisor+3)^0,w,c
  2399  001740  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  2400  001742  5011               	movf	(___aomod@divisor+4)^0,w,c
  2401  001744  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  2402  001746  5012               	movf	(___aomod@divisor+5)^0,w,c
  2403  001748  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  2404  00174A  5013               	movf	(___aomod@divisor+6)^0,w,c
  2405  00174C  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  2406  00174E  5014               	movf	(___aomod@divisor+7)^0,w,c
  2407  001750  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2408  001752                     l3772:
  2409  001752  90D8               	bcf	status,0,c
  2410  001754  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2411  001756  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2412  001758  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2413  00175A  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2414  00175C  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2415  00175E  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2416  001760  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2417  001762  320D               	rrcf	___aomod@divisor^0,f,c
  2418  001764  2E15               	decfsz	___aomod@counter^0,f,c
  2419  001766  EF82  F00B         	goto	l3768
  2420  00176A                     l3776:
  2421  00176A  5016               	movf	___aomod@sign^0,w,c
  2422  00176C  B4D8               	btfsc	status,2,c
  2423  00176E  EFBB  F00B         	goto	u2281
  2424  001772  EFBD  F00B         	goto	u2280
  2425  001776                     u2281:
  2426  001776  EFCD  F00B         	goto	l3780
  2427  00177A                     u2280:
  2428  00177A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2429  00177C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2430  00177E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2431  001780  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2432  001782  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2433  001784  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2434  001786  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2435  001788  6C05               	negf	___aomod@dividend^0,c
  2436  00178A  0E00               	movlw	0
  2437  00178C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2438  00178E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2439  001790  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2440  001792  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2441  001794  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2442  001796  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2443  001798  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2444  00179A                     l3780:
  2445  00179A  C005  F005         	movff	___aomod@dividend,?___aomod
  2446  00179E  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2447  0017A2  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2448  0017A6  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2449  0017AA  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2450  0017AE  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2451  0017B2  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2452  0017B6  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2453  0017BA  0012               	return		;funcret
  2454  0017BC                     __end_of___aomod:
  2455                           	callstack 0
  2456                           
  2457 ;; *************** function ___aodiv *****************
  2458 ;; Defined at:
  2459 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  dividend        8    4[COMRAM] long long 
  2462 ;;  divisor         8   12[COMRAM] long long 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;  quotient        8   22[COMRAM] long long 
  2465 ;;  sign            1   21[COMRAM] unsigned char 
  2466 ;;  counter         1   20[COMRAM] unsigned char 
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  8    4[COMRAM] long long 
  2469 ;; Registers used:
  2470 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2476 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;Total ram usage:       26 bytes
  2481 ;; Hardware stack levels used: 1
  2482 ;; Hardware stack levels required when called: 4
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_dtoa
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text13
  2491  0014D0                     __ptext13:
  2492                           	callstack 0
  2493  0014D0                     ___aodiv:
  2494                           	callstack 22
  2495  0014D0  0E00               	movlw	0
  2496  0014D2  6E16               	movwf	___aodiv@sign^0,c
  2497  0014D4  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2498  0014D6  EF71  F00A         	goto	u2160
  2499  0014DA  EF6F  F00A         	goto	u2161
  2500  0014DE                     u2161:
  2501  0014DE  EF83  F00A         	goto	l3712
  2502  0014E2                     u2160:
  2503  0014E2  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2504  0014E4  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2505  0014E6  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2506  0014E8  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2507  0014EA  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2508  0014EC  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2509  0014EE  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2510  0014F0  6C0D               	negf	___aodiv@divisor^0,c
  2511  0014F2  0E00               	movlw	0
  2512  0014F4  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2513  0014F6  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2514  0014F8  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2515  0014FA  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2516  0014FC  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2517  0014FE  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2518  001500  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2519  001502  0E01               	movlw	1
  2520  001504  6E16               	movwf	___aodiv@sign^0,c
  2521  001506                     l3712:
  2522  001506  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2523  001508  EF8A  F00A         	goto	u2170
  2524  00150C  EF88  F00A         	goto	u2171
  2525  001510                     u2171:
  2526  001510  EF9C  F00A         	goto	l3718
  2527  001514                     u2170:
  2528  001514  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2529  001516  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2530  001518  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2531  00151A  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2532  00151C  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2533  00151E  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2534  001520  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2535  001522  6C05               	negf	___aodiv@dividend^0,c
  2536  001524  0E00               	movlw	0
  2537  001526  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2538  001528  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2539  00152A  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2540  00152C  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2541  00152E  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2542  001530  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2543  001532  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2544  001534  0E01               	movlw	1
  2545  001536  1A16               	xorwf	___aodiv@sign^0,f,c
  2546  001538                     l3718:
  2547  001538  EE20  F017         	lfsr	2,___aodiv@quotient
  2548  00153C  0E07               	movlw	7
  2549  00153E                     u2181:
  2550  00153E  6ADE               	clrf	postinc2,c
  2551  001540  06E8               	decf	wreg,f,c
  2552  001542  E2FD               	bc	u2181
  2553  001544  500D               	movf	___aodiv@divisor^0,w,c
  2554  001546  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2555  001548  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2556  00154A  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2557  00154C  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2558  00154E  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2559  001550  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2560  001552  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2561  001554  B4D8               	btfsc	status,2,c
  2562  001556  EFAF  F00A         	goto	u2191
  2563  00155A  EFB1  F00A         	goto	u2190
  2564  00155E                     u2191:
  2565  00155E  EF03  F00B         	goto	l3740
  2566  001562                     u2190:
  2567  001562  0E01               	movlw	1
  2568  001564  6E15               	movwf	___aodiv@counter^0,c
  2569  001566  EFBF  F00A         	goto	l3726
  2570  00156A                     l3724:
  2571  00156A  90D8               	bcf	status,0,c
  2572  00156C  360D               	rlcf	___aodiv@divisor^0,f,c
  2573  00156E  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2574  001570  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2575  001572  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2576  001574  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2577  001576  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2578  001578  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2579  00157A  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2580  00157C  2A15               	incf	___aodiv@counter^0,f,c
  2581  00157E                     l3726:
  2582  00157E  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2583  001580  EFC4  F00A         	goto	u2201
  2584  001584  EFC6  F00A         	goto	u2200
  2585  001588                     u2201:
  2586  001588  EFB5  F00A         	goto	l3724
  2587  00158C                     u2200:
  2588  00158C                     l3728:
  2589  00158C  90D8               	bcf	status,0,c
  2590  00158E  3617               	rlcf	___aodiv@quotient^0,f,c
  2591  001590  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2592  001592  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2593  001594  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2594  001596  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2595  001598  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2596  00159A  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2597  00159C  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2598  00159E  500D               	movf	___aodiv@divisor^0,w,c
  2599  0015A0  5C05               	subwf	___aodiv@dividend^0,w,c
  2600  0015A2  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2601  0015A4  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2602  0015A6  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2603  0015A8  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2604  0015AA  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2605  0015AC  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2606  0015AE  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2607  0015B0  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2608  0015B2  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2609  0015B4  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2610  0015B6  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2611  0015B8  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2612  0015BA  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2613  0015BC  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2614  0015BE  A0D8               	btfss	status,0,c
  2615  0015C0  EFE4  F00A         	goto	u2211
  2616  0015C4  EFE6  F00A         	goto	u2210
  2617  0015C8                     u2211:
  2618  0015C8  EFF7  F00A         	goto	l3736
  2619  0015CC                     u2210:
  2620  0015CC  500D               	movf	___aodiv@divisor^0,w,c
  2621  0015CE  5E05               	subwf	___aodiv@dividend^0,f,c
  2622  0015D0  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2623  0015D2  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2624  0015D4  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2625  0015D6  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2626  0015D8  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2627  0015DA  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2628  0015DC  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2629  0015DE  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2630  0015E0  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2631  0015E2  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2632  0015E4  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2633  0015E6  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2634  0015E8  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2635  0015EA  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2636  0015EC  8017               	bsf	___aodiv@quotient^0,0,c
  2637  0015EE                     l3736:
  2638  0015EE  90D8               	bcf	status,0,c
  2639  0015F0  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2640  0015F2  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2641  0015F4  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2642  0015F6  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2643  0015F8  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2644  0015FA  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2645  0015FC  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2646  0015FE  320D               	rrcf	___aodiv@divisor^0,f,c
  2647  001600  2E15               	decfsz	___aodiv@counter^0,f,c
  2648  001602  EFC6  F00A         	goto	l3728
  2649  001606                     l3740:
  2650  001606  5016               	movf	___aodiv@sign^0,w,c
  2651  001608  B4D8               	btfsc	status,2,c
  2652  00160A  EF09  F00B         	goto	u2221
  2653  00160E  EF0B  F00B         	goto	u2220
  2654  001612                     u2221:
  2655  001612  EF1B  F00B         	goto	l3744
  2656  001616                     u2220:
  2657  001616  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  2658  001618  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  2659  00161A  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  2660  00161C  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  2661  00161E  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  2662  001620  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  2663  001622  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  2664  001624  6C17               	negf	___aodiv@quotient^0,c
  2665  001626  0E00               	movlw	0
  2666  001628  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  2667  00162A  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  2668  00162C  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2669  00162E  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2670  001630  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2671  001632  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2672  001634  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2673  001636                     l3744:
  2674  001636  C017  F005         	movff	___aodiv@quotient,?___aodiv
  2675  00163A  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  2676  00163E  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  2677  001642  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  2678  001646  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  2679  00164A  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  2680  00164E  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  2681  001652  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  2682  001656  0012               	return		;funcret
  2683  001658                     __end_of___aodiv:
  2684                           	callstack 0
  2685                           
  2686 ;; *************** function _SYSTEM_Initialize *****************
  2687 ;; Defined at:
  2688 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;		None
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  1    wreg      void 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0, cstack
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;Total ram usage:        0 bytes
  2707 ;; Hardware stack levels used: 1
  2708 ;; Hardware stack levels required when called: 6
  2709 ;; This function calls:
  2710 ;;		_EUSART_Initialize
  2711 ;;		_I2C_Initialize
  2712 ;;		_INTERRUPT_Initialize
  2713 ;;		_OSCILLATOR_Initialize
  2714 ;;		_PIN_MANAGER_Initialize
  2715 ;; This function is called by:
  2716 ;;		_main
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           	psect	text14
  2721  0023D2                     __ptext14:
  2722                           	callstack 0
  2723  0023D2                     _SYSTEM_Initialize:
  2724                           	callstack 24
  2725  0023D2                     
  2726                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  2727  0023D2  EC90  F012         	call	_INTERRUPT_Initialize	;wreg free
  2728  0023D6                     
  2729                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  2730  0023D6  ECF4  F011         	call	_I2C_Initialize	;wreg free
  2731  0023DA                     
  2732                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  2733  0023DA  ECC9  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  2734  0023DE                     
  2735                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  2736  0023DE  EC3F  F012         	call	_OSCILLATOR_Initialize	;wreg free
  2737  0023E2                     
  2738                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  2739  0023E2  EC61  F00E         	call	_EUSART_Initialize	;wreg free
  2740  0023E6  0012               	return		;funcret
  2741  0023E8                     __end_of_SYSTEM_Initialize:
  2742                           	callstack 0
  2743                           
  2744 ;; *************** function _PIN_MANAGER_Initialize *****************
  2745 ;; Defined at:
  2746 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;		None
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      void 
  2753 ;; Registers used:
  2754 ;;		wreg, status,2
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;Total ram usage:        0 bytes
  2765 ;; Hardware stack levels used: 1
  2766 ;; Hardware stack levels required when called: 4
  2767 ;; This function calls:
  2768 ;;		Nothing
  2769 ;; This function is called by:
  2770 ;;		_SYSTEM_Initialize
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text15
  2775  002192                     __ptext15:
  2776                           	callstack 0
  2777  002192                     _PIN_MANAGER_Initialize:
  2778                           	callstack 25
  2779  002192                     
  2780                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2781  002192  0E00               	movlw	0
  2782  002194  6E8D               	movwf	141,c	;volatile
  2783                           
  2784                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  2785  002196  0E00               	movlw	0
  2786  002198  6E8C               	movwf	140,c	;volatile
  2787                           
  2788                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  2789  00219A  0E00               	movlw	0
  2790  00219C  6E89               	movwf	137,c	;volatile
  2791                           
  2792                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  2793  00219E  0E00               	movlw	0
  2794  0021A0  6E8A               	movwf	138,c	;volatile
  2795                           
  2796                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  2797  0021A2  0E00               	movlw	0
  2798  0021A4  6E8B               	movwf	139,c	;volatile
  2799                           
  2800                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  2801  0021A6  0E07               	movlw	7
  2802  0021A8  6E96               	movwf	150,c	;volatile
  2803  0021AA                     
  2804                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  2805  0021AA  6892               	setf	146,c	;volatile
  2806  0021AC                     
  2807                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  2808  0021AC  6893               	setf	147,c	;volatile
  2809                           
  2810                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  2811  0021AE  0EBF               	movlw	191
  2812  0021B0  6E94               	movwf	148,c	;volatile
  2813  0021B2                     
  2814                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  2815  0021B2  6895               	setf	149,c	;volatile
  2816  0021B4                     
  2817                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  2818  0021B4  687E               	setf	126,c	;volatile
  2819                           
  2820                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  2821  0021B6  0E1F               	movlw	31
  2822  0021B8  6E7F               	movwf	127,c	;volatile
  2823                           
  2824                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  2825  0021BA  0E00               	movlw	0
  2826  0021BC  6E7C               	movwf	124,c	;volatile
  2827  0021BE                     
  2828                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  2829  0021BE  8EF1               	bsf	241,7,c	;volatile
  2830  0021C0  0012               	return		;funcret
  2831  0021C2                     __end_of_PIN_MANAGER_Initialize:
  2832                           	callstack 0
  2833                           
  2834 ;; *************** function _OSCILLATOR_Initialize *****************
  2835 ;; Defined at:
  2836 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;		None
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;		None
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  1    wreg      void 
  2843 ;; Registers used:
  2844 ;;		wreg, status,2
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;Total ram usage:        0 bytes
  2855 ;; Hardware stack levels used: 1
  2856 ;; Hardware stack levels required when called: 4
  2857 ;; This function calls:
  2858 ;;		Nothing
  2859 ;; This function is called by:
  2860 ;;		_SYSTEM_Initialize
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           	psect	text16
  2865  00247E                     __ptext16:
  2866                           	callstack 0
  2867  00247E                     _OSCILLATOR_Initialize:
  2868                           	callstack 25
  2869  00247E                     
  2870                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x60;
  2871  00247E  0E60               	movlw	96
  2872  002480  6ED3               	movwf	211,c	;volatile
  2873                           
  2874                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  2875  002482  0E00               	movlw	0
  2876  002484  6E9B               	movwf	155,c	;volatile
  2877  002486  0012               	return		;funcret
  2878  002488                     __end_of_OSCILLATOR_Initialize:
  2879                           	callstack 0
  2880                           
  2881 ;; *************** function _INTERRUPT_Initialize *****************
  2882 ;; Defined at:
  2883 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;		None
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;		None
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      void 
  2890 ;; Registers used:
  2891 ;;		None
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;Total ram usage:        0 bytes
  2902 ;; Hardware stack levels used: 1
  2903 ;; Hardware stack levels required when called: 4
  2904 ;; This function calls:
  2905 ;;		Nothing
  2906 ;; This function is called by:
  2907 ;;		_SYSTEM_Initialize
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           	psect	text17
  2912  002520                     __ptext17:
  2913                           	callstack 0
  2914  002520                     _INTERRUPT_Initialize:
  2915                           	callstack 25
  2916  002520                     
  2917                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  2918  002520  9ED0               	bcf	208,7,c	;volatile
  2919  002522  0012               	return		;funcret
  2920  002524                     __end_of_INTERRUPT_Initialize:
  2921                           	callstack 0
  2922                           
  2923 ;; *************** function _I2C_Initialize *****************
  2924 ;; Defined at:
  2925 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;		None
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      void 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;Total ram usage:        0 bytes
  2944 ;; Hardware stack levels used: 1
  2945 ;; Hardware stack levels required when called: 4
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_SYSTEM_Initialize
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text18
  2954  0023E8                     __ptext18:
  2955                           	callstack 0
  2956  0023E8                     _I2C_Initialize:
  2957                           	callstack 25
  2958  0023E8                     
  2959                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  2960  0023E8  0E00               	movlw	0
  2961  0023EA  6EC7               	movwf	199,c	;volatile
  2962                           
  2963                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  2964  0023EC  0E08               	movlw	8
  2965  0023EE  6EC6               	movwf	198,c	;volatile
  2966                           
  2967                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  2968  0023F0  0E00               	movlw	0
  2969  0023F2  6EC5               	movwf	197,c	;volatile
  2970                           
  2971                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  2972  0023F4  0E13               	movlw	19
  2973  0023F6  6EC8               	movwf	200,c	;volatile
  2974  0023F8                     
  2975                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  2976  0023F8  9AC6               	bcf	198,5,c	;volatile
  2977  0023FA  0012               	return		;funcret
  2978  0023FC                     __end_of_I2C_Initialize:
  2979                           	callstack 0
  2980                           
  2981 ;; *************** function _EUSART_Initialize *****************
  2982 ;; Defined at:
  2983 ;;		line 88 in file "mcc_generated_files/eusart.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;		None
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;		None
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      void 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;Total ram usage:        0 bytes
  3002 ;; Hardware stack levels used: 1
  3003 ;; Hardware stack levels required when called: 5
  3004 ;; This function calls:
  3005 ;;		_EUSART_SetErrorHandler
  3006 ;;		_EUSART_SetFramingErrorHandler
  3007 ;;		_EUSART_SetOverrunErrorHandler
  3008 ;;		_EUSART_SetRxInterruptHandler
  3009 ;;		_EUSART_SetTxInterruptHandler
  3010 ;; This function is called by:
  3011 ;;		_SYSTEM_Initialize
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           	psect	text19
  3016  001CC2                     __ptext19:
  3017                           	callstack 0
  3018  001CC2                     _EUSART_Initialize:
  3019                           	callstack 24
  3020  001CC2                     
  3021                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RC1IE = 0;
  3022  001CC2  9A9D               	bcf	157,5,c	;volatile
  3023  001CC4                     
  3024                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3025  001CC4  0E46               	movlw	low _EUSART_Receive_ISR
  3026  001CC6  6E05               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
  3027  001CC8  0E19               	movlw	high _EUSART_Receive_ISR
  3028  001CCA  6E06               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
  3029  001CCC  EC49  F012         	call	_EUSART_SetRxInterruptHandler	;wreg free
  3030  001CD0                     
  3031                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TX1IE = 0;
  3032  001CD0  989D               	bcf	157,4,c	;volatile
  3033                           
  3034                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  3035  001CD2  0E9A               	movlw	low _EUSART_Transmit_ISR
  3036  001CD4  6E05               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
  3037  001CD6  0E20               	movlw	high _EUSART_Transmit_ISR
  3038  001CD8  6E06               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
  3039  001CDA  EC44  F012         	call	_EUSART_SetTxInterruptHandler	;wreg free
  3040  001CDE                     
  3041                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  3042  001CDE  0E08               	movlw	8
  3043  001CE0  6EB8               	movwf	184,c	;volatile
  3044  001CE2                     
  3045                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  3046  001CE2  0E90               	movlw	144
  3047  001CE4  6EAB               	movwf	171,c	;volatile
  3048  001CE6                     
  3049                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  3050  001CE6  0E24               	movlw	36
  3051  001CE8  6EAC               	movwf	172,c	;volatile
  3052  001CEA                     
  3053                           ;mcc_generated_files/eusart.c: 107:     SPBRG = 0xCF;
  3054  001CEA  0ECF               	movlw	207
  3055  001CEC  6EAF               	movwf	175,c	;volatile
  3056  001CEE                     
  3057                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  3058  001CEE  0E00               	movlw	0
  3059  001CF0  6EB0               	movwf	176,c	;volatile
  3060  001CF2                     
  3061                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  3062  001CF2  0E50               	movlw	low _EUSART_DefaultFramingErrorHandler
  3063  001CF4  6E05               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  3064  001CF6  0E25               	movlw	high _EUSART_DefaultFramingErrorHandler
  3065  001CF8  6E06               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  3066  001CFA  EC53  F012         	call	_EUSART_SetFramingErrorHandler	;wreg free
  3067  001CFE                     
  3068                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  3069  001CFE  0E14               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3070  001D00  6E05               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  3071  001D02  0E25               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3072  001D04  6E06               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3073  001D06  EC4E  F012         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  3074  001D0A                     
  3075                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  3076  001D0A  0E1A               	movlw	low _EUSART_DefaultErrorHandler
  3077  001D0C  6E05               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  3078  001D0E  0E25               	movlw	high _EUSART_DefaultErrorHandler
  3079  001D10  6E06               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  3080  001D12  EC58  F012         	call	_EUSART_SetErrorHandler	;wreg free
  3081                           
  3082                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  3083  001D16  0E00               	movlw	0
  3084  001D18  0100               	movlb	0	; () banked
  3085  001D1A  6FB2               	movwf	_eusartRxLastError& (0+255),b	;volatile
  3086                           
  3087                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  3088  001D1C  0E00               	movlw	0
  3089  001D1E  6E5A               	movwf	_eusartTxHead^0,c	;volatile
  3090                           
  3091                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  3092  001D20  0E00               	movlw	0
  3093  001D22  6E59               	movwf	_eusartTxTail^0,c	;volatile
  3094                           
  3095                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  3096  001D24  0E08               	movlw	8
  3097  001D26  6FED               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
  3098                           
  3099                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  3100  001D28  0E00               	movlw	0
  3101  001D2A  6E58               	movwf	_eusartRxHead^0,c	;volatile
  3102                           
  3103                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  3104  001D2C  0E00               	movlw	0
  3105  001D2E  6E57               	movwf	_eusartRxTail^0,c	;volatile
  3106                           
  3107                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  3108  001D30  0E00               	movlw	0
  3109  001D32  6E56               	movwf	_eusartRxCount^0,c	;volatile
  3110  001D34                     
  3111                           ; BSR set to: 0
  3112                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RC1IE = 1;
  3113  001D34  8A9D               	bsf	157,5,c	;volatile
  3114  001D36                     
  3115                           ; BSR set to: 0
  3116  001D36  0012               	return		;funcret
  3117  001D38                     __end_of_EUSART_Initialize:
  3118                           	callstack 0
  3119                           
  3120 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3121 ;; Defined at:
  3122 ;;		line 285 in file "mcc_generated_files/eusart.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3125 ;;		 -> EUSART_Transmit_ISR(1), 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;		None
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  1    wreg      void 
  3130 ;; Registers used:
  3131 ;;		wreg, status,2, status,0
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3137 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3141 ;;Total ram usage:        2 bytes
  3142 ;; Hardware stack levels used: 1
  3143 ;; Hardware stack levels required when called: 4
  3144 ;; This function calls:
  3145 ;;		Nothing
  3146 ;; This function is called by:
  3147 ;;		_EUSART_Initialize
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text20
  3152  002488                     __ptext20:
  3153                           	callstack 0
  3154  002488                     _EUSART_SetTxInterruptHandler:
  3155                           	callstack 24
  3156  002488                     
  3157                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  3158  002488  C005  F0EB         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  3159  00248C  C006  F0EC         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  3160  002490  0012               	return		;funcret
  3161  002492                     __end_of_EUSART_SetTxInterruptHandler:
  3162                           	callstack 0
  3163                           
  3164 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3165 ;; Defined at:
  3166 ;;		line 289 in file "mcc_generated_files/eusart.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3169 ;;		 -> EUSART_Receive_ISR(1), 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;		None
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      void 
  3174 ;; Registers used:
  3175 ;;		wreg, status,2, status,0
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3181 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;Total ram usage:        2 bytes
  3186 ;; Hardware stack levels used: 1
  3187 ;; Hardware stack levels required when called: 4
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_EUSART_Initialize
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           	psect	text21
  3196  002492                     __ptext21:
  3197                           	callstack 0
  3198  002492                     _EUSART_SetRxInterruptHandler:
  3199                           	callstack 24
  3200  002492                     
  3201                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  3202  002492  C005  F0E9         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  3203  002496  C006  F0EA         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  3204  00249A  0012               	return		;funcret
  3205  00249C                     __end_of_EUSART_SetRxInterruptHandler:
  3206                           	callstack 0
  3207                           
  3208 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3209 ;; Defined at:
  3210 ;;		line 277 in file "mcc_generated_files/eusart.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3213 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;Total ram usage:        2 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 4
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_EUSART_Initialize
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text22
  3240  00249C                     __ptext22:
  3241                           	callstack 0
  3242  00249C                     _EUSART_SetOverrunErrorHandler:
  3243                           	callstack 24
  3244  00249C                     
  3245                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  3246  00249C  C005  F0E5         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  3247  0024A0  C006  F0E6         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  3248  0024A4  0012               	return		;funcret
  3249  0024A6                     __end_of_EUSART_SetOverrunErrorHandler:
  3250                           	callstack 0
  3251                           
  3252 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3253 ;; Defined at:
  3254 ;;		line 273 in file "mcc_generated_files/eusart.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3257 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;Total ram usage:        2 bytes
  3274 ;; Hardware stack levels used: 1
  3275 ;; Hardware stack levels required when called: 4
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_EUSART_Initialize
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text23
  3284  0024A6                     __ptext23:
  3285                           	callstack 0
  3286  0024A6                     _EUSART_SetFramingErrorHandler:
  3287                           	callstack 24
  3288  0024A6                     
  3289                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  3290  0024A6  C005  F0E7         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  3291  0024AA  C006  F0E8         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  3292  0024AE  0012               	return		;funcret
  3293  0024B0                     __end_of_EUSART_SetFramingErrorHandler:
  3294                           	callstack 0
  3295                           
  3296 ;; *************** function _EUSART_SetErrorHandler *****************
  3297 ;; Defined at:
  3298 ;;		line 281 in file "mcc_generated_files/eusart.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3301 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;		None
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  1    wreg      void 
  3306 ;; Registers used:
  3307 ;;		wreg, status,2, status,0
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3317 ;;Total ram usage:        2 bytes
  3318 ;; Hardware stack levels used: 1
  3319 ;; Hardware stack levels required when called: 4
  3320 ;; This function calls:
  3321 ;;		Nothing
  3322 ;; This function is called by:
  3323 ;;		_EUSART_Initialize
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           	psect	text24
  3328  0024B0                     __ptext24:
  3329                           	callstack 0
  3330  0024B0                     _EUSART_SetErrorHandler:
  3331                           	callstack 24
  3332  0024B0                     
  3333                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  3334  0024B0  C005  F0E3         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  3335  0024B4  C006  F0E4         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  3336  0024B8  0012               	return		;funcret
  3337  0024BA                     __end_of_EUSART_SetErrorHandler:
  3338                           	callstack 0
  3339                           
  3340 ;; *************** function _AT42QT2120_sliderPosition *****************
  3341 ;; Defined at:
  3342 ;;		line 103 in file "at42qt2120.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;		None
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;		None
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      unsigned char 
  3349 ;; Registers used:
  3350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;Total ram usage:        0 bytes
  3361 ;; Hardware stack levels used: 1
  3362 ;; Hardware stack levels required when called: 13
  3363 ;; This function calls:
  3364 ;;		_I2C_Read1ByteRegister
  3365 ;; This function is called by:
  3366 ;;		_main
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           	psect	text25
  3371  0021C2                     __ptext25:
  3372                           	callstack 0
  3373  0021C2                     _AT42QT2120_sliderPosition:
  3374                           	callstack 17
  3375  0021C2                     
  3376                           ;at42qt2120.c: 104:     readBuffer[0] = I2C_Read1ByteRegister(0x1C, 2);
  3377  0021C2  0E02               	movlw	2
  3378  0021C4  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  3379  0021C6  0E1C               	movlw	28
  3380  0021C8  EC9C  F00E         	call	_I2C_Read1ByteRegister
  3381  0021CC  0100               	movlb	0	; () banked
  3382  0021CE  6F84               	movwf	_readBuffer& (0+255),b
  3383  0021D0                     
  3384                           ; BSR set to: 0
  3385                           ;at42qt2120.c: 105:     if((readBuffer[0] & 0b00000001) == 0b00000001){
  3386  0021D0  A184               	btfss	_readBuffer& (0+255),0,b
  3387  0021D2  EFED  F010         	goto	u1861
  3388  0021D6  EFEF  F010         	goto	u1860
  3389  0021DA                     u1861:
  3390  0021DA  EFF7  F010         	goto	l716
  3391  0021DE                     u1860:
  3392  0021DE                     
  3393                           ; BSR set to: 0
  3394                           ;at42qt2120.c: 106:         readBuffer[0] = I2C_Read1ByteRegister(0x1C, 5);
  3395  0021DE  0E05               	movlw	5
  3396  0021E0  6E16               	movwf	I2C_Read1ByteRegister@reg^0,c
  3397  0021E2  0E1C               	movlw	28
  3398  0021E4  EC9C  F00E         	call	_I2C_Read1ByteRegister
  3399  0021E8  0100               	movlb	0	; () banked
  3400  0021EA  6F84               	movwf	_readBuffer& (0+255),b
  3401  0021EC                     
  3402                           ; BSR set to: 0
  3403                           ;at42qt2120.c: 107:         return readBuffer[0];
  3404  0021EC  5184               	movf	_readBuffer& (0+255),w,b
  3405  0021EE                     l716:
  3406                           
  3407                           ; BSR set to: 0
  3408  0021EE  0012               	return		;funcret
  3409  0021F0                     __end_of_AT42QT2120_sliderPosition:
  3410                           	callstack 0
  3411                           
  3412 ;; *************** function _I2C_Read1ByteRegister *****************
  3413 ;; Defined at:
  3414 ;;		line 63 in file "mcc_generated_files/examples/i2c_master_example.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  address         1    wreg     unsigned char 
  3417 ;;  reg             1   21[COMRAM] unsigned char 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;  address         1   22[COMRAM] unsigned char 
  3420 ;;  returnValue     1   23[COMRAM] unsigned char 
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  1    wreg      unsigned char 
  3423 ;; Registers used:
  3424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3430 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3431 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3433 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3434 ;;Total ram usage:        3 bytes
  3435 ;; Hardware stack levels used: 1
  3436 ;; Hardware stack levels required when called: 12
  3437 ;; This function calls:
  3438 ;;		_I2C_Close
  3439 ;;		_I2C_MasterWrite
  3440 ;;		_I2C_Open
  3441 ;;		_I2C_SetAddressNackCallback
  3442 ;;		_I2C_SetBuffer
  3443 ;;		_I2C_SetDataCompleteCallback
  3444 ;; This function is called by:
  3445 ;;		_AT42QT2120_sliderPosition
  3446 ;;		_AT42QT2120_wheelPosition
  3447 ;; This function uses a non-reentrant model
  3448 ;;
  3449                           
  3450                           	psect	text26
  3451  001D38                     __ptext26:
  3452                           	callstack 0
  3453  001D38                     _I2C_Read1ByteRegister:
  3454                           	callstack 17
  3455                           
  3456                           ; BSR set to: 0
  3457                           ;incstack = 0
  3458                           ;I2C_Read1ByteRegister@address stored from wreg
  3459  001D38  6E17               	movwf	I2C_Read1ByteRegister@address^0,c
  3460  001D3A                     
  3461                           ;mcc_generated_files/examples/i2c_master_example.c: 63: uint8_t I2C_Read1ByteRegister(i2
      +                          c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 64:
      +                           {;mcc_generated_files/examples/i2c_master_example.c: 65:     uint8_t returnValue = 0x00
      +                          ;
  3462  001D3A  0E00               	movlw	0
  3463  001D3C  6E18               	movwf	I2C_Read1ByteRegister@returnValue^0,c
  3464  001D3E                     l3260:
  3465  001D3E  5017               	movf	I2C_Read1ByteRegister@address^0,w,c
  3466  001D40  EC9F  F00D         	call	_I2C_Open
  3467  001D44  0900               	iorlw	0
  3468  001D46  B4D8               	btfsc	status,2,c
  3469  001D48  EFA8  F00E         	goto	u1731
  3470  001D4C  EFAA  F00E         	goto	u1730
  3471  001D50                     u1731:
  3472  001D50  EF9F  F00E         	goto	l3260
  3473  001D54                     u1730:
  3474  001D54                     
  3475                           ;mcc_generated_files/examples/i2c_master_example.c: 68:     I2C_SetDataCompleteCallback(
      +                          rd1RegCompleteHandler,&returnValue);
  3476  001D54  0E48               	movlw	low _rd1RegCompleteHandler
  3477  001D56  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  3478  001D58  0E22               	movlw	high _rd1RegCompleteHandler
  3479  001D5A  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  3480  001D5C  0E18               	movlw	low I2C_Read1ByteRegister@returnValue
  3481  001D5E  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  3482  001D60  0E00               	movlw	high I2C_Read1ByteRegister@returnValue
  3483  001D62  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  3484  001D64  ECDD  F011         	call	_I2C_SetDataCompleteCallback	;wreg free
  3485  001D68                     
  3486                           ;mcc_generated_files/examples/i2c_master_example.c: 69:     I2C_SetBuffer(&reg,1);
  3487  001D68  0E16               	movlw	low I2C_Read1ByteRegister@reg
  3488  001D6A  6E05               	movwf	I2C_SetBuffer@buffer^0,c
  3489  001D6C  0E00               	movlw	high I2C_Read1ByteRegister@reg
  3490  001D6E  6E06               	movwf	(I2C_SetBuffer@buffer+1)^0,c
  3491  001D70  0E00               	movlw	0
  3492  001D72  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  3493  001D74  0E01               	movlw	1
  3494  001D76  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  3495  001D78  EC8F  F011         	call	_I2C_SetBuffer	;wreg free
  3496  001D7C                     
  3497                           ;mcc_generated_files/examples/i2c_master_example.c: 70:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  3498  001D7C  0E00               	movlw	0
  3499  001D7E  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
  3500  001D80  0E00               	movlw	0
  3501  001D82  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  3502  001D84  0E00               	movlw	0
  3503  001D86  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  3504  001D88  0E00               	movlw	0
  3505  001D8A  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  3506  001D8C  ECD1  F011         	call	_I2C_SetAddressNackCallback	;wreg free
  3507  001D90                     
  3508                           ;mcc_generated_files/examples/i2c_master_example.c: 71:     I2C_MasterWrite();
  3509  001D90  EC5D  F012         	call	_I2C_MasterWrite	;wreg free
  3510  001D94                     l3270:
  3511  001D94  EC50  F011         	call	_I2C_Close	;wreg free
  3512  001D98  06E8               	decf	wreg,f,c
  3513  001D9A  B4D8               	btfsc	status,2,c
  3514  001D9C  EFD2  F00E         	goto	u1741
  3515  001DA0  EFD4  F00E         	goto	u1740
  3516  001DA4                     u1741:
  3517  001DA4  EFCA  F00E         	goto	l3270
  3518  001DA8                     u1740:
  3519  001DA8                     
  3520                           ;mcc_generated_files/examples/i2c_master_example.c: 74:     return returnValue;
  3521  001DA8  5018               	movf	I2C_Read1ByteRegister@returnValue^0,w,c
  3522  001DAA  0012               	return		;funcret
  3523  001DAC                     __end_of_I2C_Read1ByteRegister:
  3524                           	callstack 0
  3525                           
  3526 ;; *************** function _AT42QT2120_Init *****************
  3527 ;; Defined at:
  3528 ;;		line 91 in file "at42qt2120.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;		None
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;		None
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      void 
  3535 ;; Registers used:
  3536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3546 ;;Total ram usage:        0 bytes
  3547 ;; Hardware stack levels used: 1
  3548 ;; Hardware stack levels required when called: 14
  3549 ;; This function calls:
  3550 ;;		_AT42QT2120_enableSlider
  3551 ;; This function is called by:
  3552 ;;		_main
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           	psect	text27
  3557  002502                     __ptext27:
  3558                           	callstack 0
  3559  002502                     _AT42QT2120_Init:
  3560                           	callstack 16
  3561  002502                     
  3562                           ;at42qt2120.c: 92:     AT42QT2120_enableSlider();
  3563  002502  EC08  F012         	call	_AT42QT2120_enableSlider	;wreg free
  3564  002506  0012               	return		;funcret
  3565  002508                     __end_of_AT42QT2120_Init:
  3566                           	callstack 0
  3567                           
  3568 ;; *************** function _AT42QT2120_enableSlider *****************
  3569 ;; Defined at:
  3570 ;;		line 95 in file "at42qt2120.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;		None
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;		None
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  1    wreg      void 
  3577 ;; Registers used:
  3578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3588 ;;Total ram usage:        0 bytes
  3589 ;; Hardware stack levels used: 1
  3590 ;; Hardware stack levels required when called: 13
  3591 ;; This function calls:
  3592 ;;		_I2C_Write1ByteRegister
  3593 ;; This function is called by:
  3594 ;;		_AT42QT2120_Init
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           	psect	text28
  3599  002410                     __ptext28:
  3600                           	callstack 0
  3601  002410                     _AT42QT2120_enableSlider:
  3602                           	callstack 16
  3603  002410                     
  3604                           ;at42qt2120.c: 96:     I2C_Write1ByteRegister(0x1C, 14, 0x80);
  3605  002410  0E0E               	movlw	14
  3606  002412  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  3607  002414  0E80               	movlw	128
  3608  002416  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  3609  002418  0E1C               	movlw	28
  3610  00241A  EC0E  F00F         	call	_I2C_Write1ByteRegister
  3611  00241E  0012               	return		;funcret
  3612  002420                     __end_of_AT42QT2120_enableSlider:
  3613                           	callstack 0
  3614                           
  3615 ;; *************** function _I2C_Write1ByteRegister *****************
  3616 ;; Defined at:
  3617 ;;		line 91 in file "mcc_generated_files/examples/i2c_master_example.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  address         1    wreg     unsigned char 
  3620 ;;  reg             1   21[COMRAM] unsigned char 
  3621 ;;  data            1   22[COMRAM] unsigned char 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  address         1   23[COMRAM] unsigned char 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  1    wreg      void 
  3626 ;; Registers used:
  3627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;Total ram usage:        3 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; Hardware stack levels required when called: 12
  3640 ;; This function calls:
  3641 ;;		_I2C_Close
  3642 ;;		_I2C_MasterWrite
  3643 ;;		_I2C_Open
  3644 ;;		_I2C_SetAddressNackCallback
  3645 ;;		_I2C_SetBuffer
  3646 ;;		_I2C_SetDataCompleteCallback
  3647 ;; This function is called by:
  3648 ;;		_AT42QT2120_enableSlider
  3649 ;;		_AT42QT2120_enableWheel
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text29
  3654  001E1C                     __ptext29:
  3655                           	callstack 0
  3656  001E1C                     _I2C_Write1ByteRegister:
  3657                           	callstack 16
  3658                           
  3659                           ;incstack = 0
  3660                           ;I2C_Write1ByteRegister@address stored from wreg
  3661  001E1C  6E18               	movwf	I2C_Write1ByteRegister@address^0,c
  3662  001E1E                     l3184:
  3663  001E1E  5018               	movf	I2C_Write1ByteRegister@address^0,w,c
  3664  001E20  EC9F  F00D         	call	_I2C_Open
  3665  001E24  0900               	iorlw	0
  3666  001E26  B4D8               	btfsc	status,2,c
  3667  001E28  EF18  F00F         	goto	u1661
  3668  001E2C  EF1A  F00F         	goto	u1660
  3669  001E30                     u1661:
  3670  001E30  EF0F  F00F         	goto	l3184
  3671  001E34                     u1660:
  3672  001E34                     
  3673                           ;mcc_generated_files/examples/i2c_master_example.c: 94:     I2C_SetDataCompleteCallback(
      +                          wr1RegCompleteHandler,&data);
  3674  001E34  0EF0               	movlw	low _wr1RegCompleteHandler
  3675  001E36  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  3676  001E38  0E21               	movlw	high _wr1RegCompleteHandler
  3677  001E3A  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  3678  001E3C  0E17               	movlw	low I2C_Write1ByteRegister@data
  3679  001E3E  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  3680  001E40  0E00               	movlw	high I2C_Write1ByteRegister@data
  3681  001E42  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  3682  001E44  ECDD  F011         	call	_I2C_SetDataCompleteCallback	;wreg free
  3683  001E48                     
  3684                           ;mcc_generated_files/examples/i2c_master_example.c: 95:     I2C_SetBuffer(&reg,1);
  3685  001E48  0E16               	movlw	low I2C_Write1ByteRegister@reg
  3686  001E4A  6E05               	movwf	I2C_SetBuffer@buffer^0,c
  3687  001E4C  0E00               	movlw	high I2C_Write1ByteRegister@reg
  3688  001E4E  6E06               	movwf	(I2C_SetBuffer@buffer+1)^0,c
  3689  001E50  0E00               	movlw	0
  3690  001E52  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  3691  001E54  0E01               	movlw	1
  3692  001E56  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  3693  001E58  EC8F  F011         	call	_I2C_SetBuffer	;wreg free
  3694  001E5C                     
  3695                           ;mcc_generated_files/examples/i2c_master_example.c: 96:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  3696  001E5C  0E00               	movlw	0
  3697  001E5E  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
  3698  001E60  0E00               	movlw	0
  3699  001E62  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  3700  001E64  0E00               	movlw	0
  3701  001E66  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  3702  001E68  0E00               	movlw	0
  3703  001E6A  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  3704  001E6C  ECD1  F011         	call	_I2C_SetAddressNackCallback	;wreg free
  3705  001E70                     
  3706                           ;mcc_generated_files/examples/i2c_master_example.c: 97:     I2C_MasterWrite();
  3707  001E70  EC5D  F012         	call	_I2C_MasterWrite	;wreg free
  3708  001E74                     l3194:
  3709  001E74  EC50  F011         	call	_I2C_Close	;wreg free
  3710  001E78  06E8               	decf	wreg,f,c
  3711  001E7A  B4D8               	btfsc	status,2,c
  3712  001E7C  EF42  F00F         	goto	u1671
  3713  001E80  EF44  F00F         	goto	u1670
  3714  001E84                     u1671:
  3715  001E84  EF3A  F00F         	goto	l3194
  3716  001E88                     u1670:
  3717  001E88  0012               	return		;funcret
  3718  001E8A                     __end_of_I2C_Write1ByteRegister:
  3719                           	callstack 0
  3720                           
  3721 ;; *************** function _I2C_SetAddressNackCallback *****************
  3722 ;; Defined at:
  3723 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
  3726 ;;		 -> Absolute function(1), 
  3727 ;;  ptr             2   11[COMRAM] PTR void 
  3728 ;;		 -> NULL(0), 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3740 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3743 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;Total ram usage:        4 bytes
  3745 ;; Hardware stack levels used: 1
  3746 ;; Hardware stack levels required when called: 5
  3747 ;; This function calls:
  3748 ;;		_I2C_SetCallback
  3749 ;; This function is called by:
  3750 ;;		_I2C_Read1ByteRegister
  3751 ;;		_I2C_Write1ByteRegister
  3752 ;;		_I2C_Read2ByteRegister
  3753 ;;		_I2C_Write2ByteRegister
  3754 ;;		_I2C_WriteNBytes
  3755 ;;		_I2C_ReadDataBlock
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text30
  3760  0023A2                     __ptext30:
  3761                           	callstack 0
  3762  0023A2                     _I2C_SetAddressNackCallback:
  3763                           	callstack 23
  3764  0023A2                     
  3765                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  3766  0023A2  C00A  F005         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  3767  0023A6  C00B  F006         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  3768  0023AA  C00C  F007         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  3769  0023AE  C00D  F008         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  3770  0023B2  0E02               	movlw	2
  3771  0023B4  EC24  F00E         	call	_I2C_SetCallback
  3772  0023B8  0012               	return		;funcret
  3773  0023BA                     __end_of_I2C_SetAddressNackCallback:
  3774                           	callstack 0
  3775                           
  3776 ;; *************** function _I2C_Open *****************
  3777 ;; Defined at:
  3778 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;  address         1    wreg     unsigned char 
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  address         1    4[COMRAM] unsigned char 
  3783 ;;  returnValue     1    5[COMRAM] enum E355
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      enum E355
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0, cstack
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;Total ram usage:        2 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 5
  3800 ;; This function calls:
  3801 ;;		_I2C_MasterClearIrq
  3802 ;;		_I2C_MasterOpen
  3803 ;; This function is called by:
  3804 ;;		_I2C_Read1ByteRegister
  3805 ;;		_I2C_Write1ByteRegister
  3806 ;;		_I2C_Read2ByteRegister
  3807 ;;		_I2C_Write2ByteRegister
  3808 ;;		_I2C_WriteNBytes
  3809 ;;		_I2C_ReadNBytes
  3810 ;;		_I2C_ReadDataBlock
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text31
  3815  001B3E                     __ptext31:
  3816                           	callstack 0
  3817  001B3E                     _I2C_Open:
  3818                           	callstack 23
  3819                           
  3820                           ;incstack = 0
  3821                           ;I2C_Open@address stored from wreg
  3822  001B3E  6E05               	movwf	I2C_Open@address^0,c
  3823  001B40                     
  3824                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  3825  001B40  0E01               	movlw	1
  3826  001B42  6E06               	movwf	I2C_Open@returnValue^0,c
  3827  001B44                     
  3828                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  3829  001B44  0100               	movlb	0	; () banked
  3830  001B46  B583               	btfsc	(_I2C_Status+35)& (0+255),2,b
  3831  001B48  EFA8  F00D         	goto	u1491
  3832  001B4C  EFAA  F00D         	goto	u1490
  3833  001B50                     u1491:
  3834  001B50  EFE4  F00D         	goto	l3096
  3835  001B54                     u1490:
  3836  001B54                     
  3837                           ; BSR set to: 0
  3838                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  3839  001B54  C005  F07C         	movff	I2C_Open@address,_I2C_Status+28
  3840  001B58                     
  3841                           ; BSR set to: 0
  3842                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  3843  001B58  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  3844  001B5A                     
  3845                           ; BSR set to: 0
  3846                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  3847  001B5A  8583               	bsf	(_I2C_Status+35)& (0+255),2,b
  3848  001B5C                     
  3849                           ; BSR set to: 0
  3850                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  3851  001B5C  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  3852  001B5E                     
  3853                           ; BSR set to: 0
  3854                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  3855  001B5E  0E0E               	movlw	14
  3856  001B60  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  3857  001B62                     
  3858                           ; BSR set to: 0
  3859                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  3860  001B62  0E01               	movlw	1
  3861  001B64  6F7B               	movwf	(_I2C_Status+27)& (0+255),b
  3862  001B66  0EF4               	movlw	244
  3863  001B68  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
  3864  001B6A                     
  3865                           ; BSR set to: 0
  3866                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  3867  001B6A  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  3868  001B6C                     
  3869                           ; BSR set to: 0
  3870                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  3871  001B6C  0E34               	movlw	low _I2C_CallbackReturnStop
  3872  001B6E  6F60               	movwf	_I2C_Status& (0+255),b
  3873  001B70  0E25               	movlw	high _I2C_CallbackReturnStop
  3874  001B72  6F61               	movwf	(_I2C_Status+1)& (0+255),b
  3875  001B74                     
  3876                           ; BSR set to: 0
  3877                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  3878  001B74  0E00               	movlw	0
  3879  001B76  6F6C               	movwf	(_I2C_Status+12)& (0+255),b
  3880  001B78  0E00               	movlw	0
  3881  001B7A  6F6D               	movwf	(_I2C_Status+13)& (0+255),b
  3882  001B7C                     
  3883                           ; BSR set to: 0
  3884                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  3885  001B7C  0E34               	movlw	low _I2C_CallbackReturnStop
  3886  001B7E  6F62               	movwf	(_I2C_Status+2)& (0+255),b
  3887  001B80  0E25               	movlw	high _I2C_CallbackReturnStop
  3888  001B82  6F63               	movwf	(_I2C_Status+3)& (0+255),b
  3889  001B84                     
  3890                           ; BSR set to: 0
  3891                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  3892  001B84  0E00               	movlw	0
  3893  001B86  6F6E               	movwf	(_I2C_Status+14)& (0+255),b
  3894  001B88  0E00               	movlw	0
  3895  001B8A  6F6F               	movwf	(_I2C_Status+15)& (0+255),b
  3896  001B8C                     
  3897                           ; BSR set to: 0
  3898                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  3899  001B8C  0E34               	movlw	low _I2C_CallbackReturnStop
  3900  001B8E  6F64               	movwf	(_I2C_Status+4)& (0+255),b
  3901  001B90  0E25               	movlw	high _I2C_CallbackReturnStop
  3902  001B92  6F65               	movwf	(_I2C_Status+5)& (0+255),b
  3903  001B94                     
  3904                           ; BSR set to: 0
  3905                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  3906  001B94  0E00               	movlw	0
  3907  001B96  6F70               	movwf	(_I2C_Status+16)& (0+255),b
  3908  001B98  0E00               	movlw	0
  3909  001B9A  6F71               	movwf	(_I2C_Status+17)& (0+255),b
  3910  001B9C                     
  3911                           ; BSR set to: 0
  3912                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  3913  001B9C  0E34               	movlw	low _I2C_CallbackReturnStop
  3914  001B9E  6F66               	movwf	(_I2C_Status+6)& (0+255),b
  3915  001BA0  0E25               	movlw	high _I2C_CallbackReturnStop
  3916  001BA2  6F67               	movwf	(_I2C_Status+7)& (0+255),b
  3917  001BA4                     
  3918                           ; BSR set to: 0
  3919                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  3920  001BA4  0E00               	movlw	0
  3921  001BA6  6F72               	movwf	(_I2C_Status+18)& (0+255),b
  3922  001BA8  0E00               	movlw	0
  3923  001BAA  6F73               	movwf	(_I2C_Status+19)& (0+255),b
  3924  001BAC                     
  3925                           ; BSR set to: 0
  3926                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  3927  001BAC  0E30               	movlw	low _I2C_CallbackReturnReset
  3928  001BAE  6F68               	movwf	(_I2C_Status+8)& (0+255),b
  3929  001BB0  0E25               	movlw	high _I2C_CallbackReturnReset
  3930  001BB2  6F69               	movwf	(_I2C_Status+9)& (0+255),b
  3931  001BB4                     
  3932                           ; BSR set to: 0
  3933                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  3934  001BB4  0E00               	movlw	0
  3935  001BB6  6F74               	movwf	(_I2C_Status+20)& (0+255),b
  3936  001BB8  0E00               	movlw	0
  3937  001BBA  6F75               	movwf	(_I2C_Status+21)& (0+255),b
  3938  001BBC                     
  3939                           ; BSR set to: 0
  3940                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
  3941  001BBC  ECA6  F012         	call	_I2C_MasterClearIrq	;wreg free
  3942  001BC0                     
  3943                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
  3944  001BC0  ECA1  F011         	call	_I2C_MasterOpen	;wreg free
  3945  001BC4                     
  3946                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
  3947  001BC4  0E00               	movlw	0
  3948  001BC6  6E06               	movwf	I2C_Open@returnValue^0,c
  3949  001BC8                     l3096:
  3950                           
  3951                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
  3952  001BC8  5006               	movf	I2C_Open@returnValue^0,w,c
  3953  001BCA  0012               	return		;funcret
  3954  001BCC                     __end_of_I2C_Open:
  3955                           	callstack 0
  3956                           
  3957 ;; *************** function _I2C_MasterOpen *****************
  3958 ;; Defined at:
  3959 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;		None
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;		None
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  1    wreg      _Bool 
  3966 ;; Registers used:
  3967 ;;		wreg, status,2
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;Total ram usage:        0 bytes
  3978 ;; Hardware stack levels used: 1
  3979 ;; Hardware stack levels required when called: 4
  3980 ;; This function calls:
  3981 ;;		Nothing
  3982 ;; This function is called by:
  3983 ;;		_I2C_Open
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text32
  3988  002342                     __ptext32:
  3989                           	callstack 0
  3990  002342                     _I2C_MasterOpen:
  3991                           	callstack 23
  3992  002342                     
  3993                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
  3994  002342  BAC6               	btfsc	198,5,c	;volatile
  3995  002344  EFA6  F011         	goto	u1281
  3996  002348  EFA8  F011         	goto	u1280
  3997  00234C                     u1281:
  3998  00234C  EFB1  F011         	goto	l378
  3999  002350                     u1280:
  4000  002350                     
  4001                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x00;
  4002  002350  0E00               	movlw	0
  4003  002352  6EC7               	movwf	199,c	;volatile
  4004                           
  4005                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
  4006  002354  0E08               	movlw	8
  4007  002356  6EC6               	movwf	198,c	;volatile
  4008                           
  4009                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
  4010  002358  0E00               	movlw	0
  4011  00235A  6EC5               	movwf	197,c	;volatile
  4012                           
  4013                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x13;
  4014  00235C  0E13               	movlw	19
  4015  00235E  6EC8               	movwf	200,c	;volatile
  4016  002360                     
  4017                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
  4018  002360  8AC6               	bsf	198,5,c	;volatile
  4019  002362                     l378:
  4020  002362  0012               	return		;funcret
  4021  002364                     __end_of_I2C_MasterOpen:
  4022                           	callstack 0
  4023                           
  4024 ;; *************** function _I2C_MasterWrite *****************
  4025 ;; Defined at:
  4026 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;		None
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;		None
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      enum E355
  4033 ;; Registers used:
  4034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;Total ram usage:        0 bytes
  4045 ;; Hardware stack levels used: 1
  4046 ;; Hardware stack levels required when called: 11
  4047 ;; This function calls:
  4048 ;;		_I2C_MasterOperation
  4049 ;; This function is called by:
  4050 ;;		_I2C_Read1ByteRegister
  4051 ;;		_I2C_Write1ByteRegister
  4052 ;;		_I2C_Read2ByteRegister
  4053 ;;		_I2C_Write2ByteRegister
  4054 ;;		_I2C_WriteNBytes
  4055 ;;		_I2C_ReadDataBlock
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           	psect	text33
  4060  0024BA                     __ptext33:
  4061                           	callstack 0
  4062  0024BA                     _I2C_MasterWrite:
  4063                           	callstack 17
  4064  0024BA                     
  4065                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  4066  0024BA  0E00               	movlw	0
  4067  0024BC  EC2B  F010         	call	_I2C_MasterOperation
  4068  0024C0  0012               	return		;funcret
  4069  0024C2                     __end_of_I2C_MasterWrite:
  4070                           	callstack 0
  4071                           
  4072 ;; *************** function _I2C_MasterOperation *****************
  4073 ;; Defined at:
  4074 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;  read            1    wreg     _Bool 
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;  read            1   19[COMRAM] _Bool 
  4079 ;;  returnValue     1   20[COMRAM] enum E355
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  1    wreg      enum E355
  4082 ;; Registers used:
  4083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4090 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4092 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4093 ;;Total ram usage:        2 bytes
  4094 ;; Hardware stack levels used: 1
  4095 ;; Hardware stack levels required when called: 10
  4096 ;; This function calls:
  4097 ;;		_I2C_MasterStart
  4098 ;;		_I2C_Poller
  4099 ;; This function is called by:
  4100 ;;		_I2C_MasterWrite
  4101 ;;		_I2C_MasterRead
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           	psect	text34
  4106  002056                     __ptext34:
  4107                           	callstack 0
  4108  002056                     _I2C_MasterOperation:
  4109                           	callstack 17
  4110                           
  4111                           ;incstack = 0
  4112                           ;I2C_MasterOperation@read stored from wreg
  4113  002056  6E14               	movwf	I2C_MasterOperation@read^0,c
  4114  002058                     
  4115                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  4116  002058  0E01               	movlw	1
  4117  00205A  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
  4118  00205C                     
  4119                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
  4120  00205C  0100               	movlb	0	; () banked
  4121  00205E  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  4122  002060  EF34  F010         	goto	u1291
  4123  002064  EF36  F010         	goto	u1290
  4124  002068                     u1291:
  4125  002068  EF4B  F010         	goto	l2942
  4126  00206C                     u1290:
  4127  00206C                     
  4128                           ; BSR set to: 0
  4129                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
  4130  00206C  8383               	bsf	(_I2C_Status+35)& (0+255),1,b
  4131  00206E                     
  4132                           ; BSR set to: 0
  4133                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
  4134  00206E  0E00               	movlw	0
  4135  002070  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
  4136  002072                     
  4137                           ; BSR set to: 0
  4138                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
  4139  002072  5014               	movf	I2C_MasterOperation@read^0,w,c
  4140  002074  B4D8               	btfsc	status,2,c
  4141  002076  EF3F  F010         	goto	u1301
  4142  00207A  EF41  F010         	goto	u1300
  4143  00207E                     u1301:
  4144  00207E  EF45  F010         	goto	l2936
  4145  002082                     u1300:
  4146  002082                     
  4147                           ; BSR set to: 0
  4148                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  4149  002082  0E01               	movlw	1
  4150  002084  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4151                           
  4152                           ;mcc_generated_files/i2c_master.c: 235:         }
  4153  002086  EF47  F010         	goto	l2938
  4154  00208A                     l2936:
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  4158  00208A  0E02               	movlw	2
  4159  00208C  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4160  00208E                     l2938:
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
  4164  00208E  ECA0  F012         	call	_I2C_MasterStart	;wreg free
  4165  002092                     
  4166                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
  4167  002092  ECC2  F011         	call	_I2C_Poller	;wreg free
  4168  002096                     l2942:
  4169                           
  4170                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
  4171  002096  5015               	movf	I2C_MasterOperation@returnValue^0,w,c
  4172  002098  0012               	return		;funcret
  4173  00209A                     __end_of_I2C_MasterOperation:
  4174                           	callstack 0
  4175                           
  4176 ;; *************** function _I2C_Poller *****************
  4177 ;; Defined at:
  4178 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;		None
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;		None
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      void 
  4185 ;; Registers used:
  4186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4196 ;;Total ram usage:        0 bytes
  4197 ;; Hardware stack levels used: 1
  4198 ;; Hardware stack levels required when called: 9
  4199 ;; This function calls:
  4200 ;;		_I2C_MasterFsm
  4201 ;;		_I2C_MasterWaitForEvent
  4202 ;; This function is called by:
  4203 ;;		_I2C_MasterOperation
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           	psect	text35
  4208  002384                     __ptext35:
  4209                           	callstack 0
  4210  002384                     _I2C_Poller:
  4211                           	callstack 17
  4212  002384                     
  4213                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  4214  002384  EFC8  F011         	goto	l2892
  4215  002388                     l2888:
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
  4219  002388  EC10  F012         	call	_I2C_MasterWaitForEvent	;wreg free
  4220  00238C                     
  4221                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
  4222  00238C  ECD6  F00E         	call	_I2C_MasterFsm	;wreg free
  4223  002390                     l2892:
  4224                           
  4225                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  4226  002390  0100               	movlb	0	; () banked
  4227  002392  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  4228  002394  EFCE  F011         	goto	u1251
  4229  002398  EFD0  F011         	goto	u1250
  4230  00239C                     u1251:
  4231  00239C  EFC4  F011         	goto	l2888
  4232  0023A0                     u1250:
  4233  0023A0                     
  4234                           ; BSR set to: 0
  4235  0023A0  0012               	return		;funcret
  4236  0023A2                     __end_of_I2C_Poller:
  4237                           	callstack 0
  4238                           
  4239 ;; *************** function _I2C_MasterWaitForEvent *****************
  4240 ;; Defined at:
  4241 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;		None
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;		None
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  1    wreg      void 
  4248 ;; Registers used:
  4249 ;;		None
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4259 ;;Total ram usage:        0 bytes
  4260 ;; Hardware stack levels used: 1
  4261 ;; Hardware stack levels required when called: 4
  4262 ;; This function calls:
  4263 ;;		Nothing
  4264 ;; This function is called by:
  4265 ;;		_I2C_Poller
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           	psect	text36
  4270  002420                     __ptext36:
  4271                           	callstack 0
  4272  002420                     _I2C_MasterWaitForEvent:
  4273                           	callstack 21
  4274  002420                     l435:
  4275                           
  4276                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
  4277  002420  A69E               	btfss	158,3,c	;volatile
  4278  002422  EF15  F012         	goto	u1171
  4279  002426  EF17  F012         	goto	u1170
  4280  00242A                     u1171:
  4281  00242A  EF10  F012         	goto	l435
  4282  00242E                     u1170:
  4283  00242E  0012               	return		;funcret
  4284  002430                     __end_of_I2C_MasterWaitForEvent:
  4285                           	callstack 0
  4286                           
  4287 ;; *************** function _I2C_MasterFsm *****************
  4288 ;; Defined at:
  4289 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;		None
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      void 
  4296 ;; Registers used:
  4297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4307 ;;Total ram usage:        2 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; Hardware stack levels required when called: 8
  4310 ;; This function calls:
  4311 ;;		_I2C_DO_ADDRESS_NACK
  4312 ;;		_I2C_DO_IDLE
  4313 ;;		_I2C_DO_RCEN
  4314 ;;		_I2C_DO_RESET
  4315 ;;		_I2C_DO_RX
  4316 ;;		_I2C_DO_RX_ACK
  4317 ;;		_I2C_DO_RX_NACK_RESTART
  4318 ;;		_I2C_DO_RX_NACK_STOP
  4319 ;;		_I2C_DO_SEND_ADR_READ
  4320 ;;		_I2C_DO_SEND_ADR_WRITE
  4321 ;;		_I2C_DO_SEND_RESTART
  4322 ;;		_I2C_DO_SEND_RESTART_READ
  4323 ;;		_I2C_DO_SEND_RESTART_WRITE
  4324 ;;		_I2C_DO_SEND_STOP
  4325 ;;		_I2C_DO_TX
  4326 ;;		_I2C_DO_TX_EMPTY
  4327 ;;		_I2C_MasterClearIrq
  4328 ;;		_I2C_MasterIsNack
  4329 ;; This function is called by:
  4330 ;;		_I2C_Poller
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           	psect	text37
  4335  001DAC                     __ptext37:
  4336                           	callstack 0
  4337  001DAC                     _I2C_MasterFsm:
  4338                           	callstack 17
  4339  001DAC                     
  4340                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
  4341  001DAC  ECA6  F012         	call	_I2C_MasterClearIrq	;wreg free
  4342  001DB0                     
  4343                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  4344  001DB0  0100               	movlb	0	; () banked
  4345  001DB2  A183               	btfss	(_I2C_Status+35)& (0+255),0,b
  4346  001DB4  EFDE  F00E         	goto	u1181
  4347  001DB8  EFE0  F00E         	goto	u1180
  4348  001DBC                     u1181:
  4349  001DBC  EFED  F00E         	goto	l2868
  4350  001DC0                     u1180:
  4351  001DC0                     
  4352                           ; BSR set to: 0
  4353  001DC0  ECFE  F011         	call	_I2C_MasterIsNack	;wreg free
  4354  001DC4  0900               	iorlw	0
  4355  001DC6  B4D8               	btfsc	status,2,c
  4356  001DC8  EFE8  F00E         	goto	u1191
  4357  001DCC  EFEA  F00E         	goto	u1190
  4358  001DD0                     u1191:
  4359  001DD0  EFED  F00E         	goto	l2868
  4360  001DD4                     u1190:
  4361  001DD4                     
  4362                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  4363  001DD4  0E0F               	movlw	15
  4364  001DD6  0100               	movlb	0	; () banked
  4365  001DD8  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4366  001DDA                     l2868:
  4367                           
  4368                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = fsmStateTable[I2C_Status.
      +                          state]();
  4369  001DDA  0100               	movlb	0	; () banked
  4370  001DDC  5181               	movf	(_I2C_Status+33)& (0+255),w,b
  4371  001DDE  0D02               	mullw	2
  4372  001DE0  0E01               	movlw	low _fsmStateTable
  4373  001DE2  24F3               	addwf	243,w,c
  4374  001DE4  6EF6               	movwf	tblptrl,c
  4375  001DE6  0E10               	movlw	high _fsmStateTable
  4376  001DE8  20F4               	addwfc	244,w,c
  4377  001DEA  6EF7               	movwf	tblptrh,c
  4378  001DEC                     	if	1	;There are 3 active tblptr bytes
  4379  001DEC  6AF8               	clrf	tblptru,c
  4380  001DEE  0E00               	movlw	low (__mediumconst shr (0+16))
  4381  001DF0  22F8               	addwfc	tblptru,f,c
  4382  001DF2                     	endif
  4383  001DF2  0009               	tblrd		*+
  4384  001DF4  CFF5 F012          	movff	tablat,??_I2C_MasterFsm
  4385  001DF8  0009               	tblrd		*+
  4386  001DFA  CFF5 F013          	movff	tablat,??_I2C_MasterFsm+1
  4387  001DFE  D802               	call	u1208
  4388  001E00  EF0B  F00F         	goto	u1209
  4389  001E04                     u1208:
  4390  001E04  0005               	push	
  4391  001E06  6EFA               	movwf	pclath,c
  4392  001E08  5012               	movf	??_I2C_MasterFsm^0,w,c
  4393  001E0A  6EFD               	movwf	tosl,c
  4394  001E0C  5013               	movf	(??_I2C_MasterFsm+1)^0,w,c
  4395  001E0E  6EFE               	movwf	tosh,c
  4396  001E10  6AFF               	clrf	tosu,c
  4397  001E12  50FA               	movf	pclath,w,c
  4398  001E14  0012               	return		;indir
  4399  001E16                     u1209:
  4400  001E16  0100               	movlb	0	; () banked
  4401  001E18  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4402  001E1A                     
  4403                           ; BSR set to: 0
  4404  001E1A  0012               	return		;funcret
  4405  001E1C                     __end_of_I2C_MasterFsm:
  4406                           	callstack 0
  4407                           
  4408 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  4409 ;; Defined at:
  4410 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;		None
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;		None
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  1    wreg      enum E3112
  4417 ;; Registers used:
  4418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4426 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;Total ram usage:        2 bytes
  4429 ;; Hardware stack levels used: 1
  4430 ;; Hardware stack levels required when called: 7
  4431 ;; This function calls:
  4432 ;;		Absolute function
  4433 ;;		_I2C_CallbackReturnReset
  4434 ;;		_I2C_CallbackReturnStop
  4435 ;;		_I2C_DO_SEND_RESTART
  4436 ;;		_I2C_DO_SEND_STOP
  4437 ;;		_rd1RegCompleteHandler
  4438 ;;		_rd2RegCompleteHandler
  4439 ;;		_rdBlkRegCompleteHandler
  4440 ;;		_wr1RegCompleteHandler
  4441 ;;		_wr2RegCompleteHandler
  4442 ;; This function is called by:
  4443 ;;		_I2C_MasterFsm
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           	psect	text38
  4448  001EF0                     __ptext38:
  4449                           	callstack 0
  4450  001EF0                     _I2C_DO_ADDRESS_NACK:
  4451                           	callstack 17
  4452  001EF0                     
  4453                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
  4454  001EF0  0100               	movlb	0	; () banked
  4455  001EF2  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  4456  001EF4                     
  4457                           ; BSR set to: 0
  4458                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
  4459  001EF4  0E02               	movlw	2
  4460  001EF6  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  4461                           
  4462                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  4463  001EF8  EF86  F00F         	goto	l2850
  4464  001EFC                     l2840:
  4465                           
  4466                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
  4467  001EFC  EC71  F012         	call	_I2C_DO_SEND_RESTART	;wreg free
  4468  001F00  EFAA  F00F         	goto	l357
  4469  001F04                     l2844:
  4470                           
  4471                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
  4472  001F04  EC6D  F012         	call	_I2C_DO_SEND_STOP	;wreg free
  4473  001F08  EFAA  F00F         	goto	l357
  4474  001F0C                     l2850:
  4475                           
  4476                           ; BSR set to: 0
  4477  001F0C  C070  F00E         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
  4478  001F10  C071  F00F         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
  4479  001F14  D802               	call	u1168
  4480  001F16  EF96  F00F         	goto	u1169
  4481  001F1A                     u1168:
  4482  001F1A  0005               	push	
  4483  001F1C  6EFA               	movwf	pclath,c
  4484  001F1E  5164               	movf	(_I2C_Status+4)& (0+255),w,b
  4485  001F20  6EFD               	movwf	tosl,c
  4486  001F22  5165               	movf	(_I2C_Status+5)& (0+255),w,b
  4487  001F24  6EFE               	movwf	tosh,c
  4488  001F26  6AFF               	clrf	tosu,c
  4489  001F28  50FA               	movf	pclath,w,c
  4490  001F2A  0012               	return		;indir
  4491  001F2C                     u1169:
  4492  001F2C  6E10               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
  4493  001F2E  6A11               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
  4494                           
  4495                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4496                           ; Switch size 1, requested type "simple"
  4497                           ; Number of cases is 1, Range of values is 0 to 0
  4498                           ; switch strategies available:
  4499                           ; Name         Instructions Cycles
  4500                           ; simple_byte            4     3 (average)
  4501                           ;	Chosen strategy is simple_byte
  4502  001F30  5011               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
  4503  001F32  0A00               	xorlw	0	; case 0
  4504  001F34  B4D8               	btfsc	status,2,c
  4505  001F36  EF9F  F00F         	goto	l4024
  4506  001F3A  EF82  F00F         	goto	l2844
  4507  001F3E                     l4024:
  4508                           
  4509                           ; Switch size 1, requested type "simple"
  4510                           ; Number of cases is 2, Range of values is 2 to 3
  4511                           ; switch strategies available:
  4512                           ; Name         Instructions Cycles
  4513                           ; simple_byte            7     4 (average)
  4514                           ;	Chosen strategy is simple_byte
  4515  001F3E  5010               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
  4516  001F40  0A02               	xorlw	2	; case 2
  4517  001F42  B4D8               	btfsc	status,2,c
  4518  001F44  EF7E  F00F         	goto	l2840
  4519  001F48  0A01               	xorlw	1	; case 3
  4520  001F4A  B4D8               	btfsc	status,2,c
  4521  001F4C  EF7E  F00F         	goto	l2840
  4522  001F50  EF82  F00F         	goto	l2844
  4523  001F54                     l357:
  4524  001F54  0012               	return		;funcret
  4525  001F56                     __end_of_I2C_DO_ADDRESS_NACK:
  4526                           	callstack 0
  4527                           
  4528 ;; *************** function _I2C_DO_RESET *****************
  4529 ;; Defined at:
  4530 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      enum E3112
  4537 ;; Registers used:
  4538 ;;		wreg, status,2
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;Total ram usage:        0 bytes
  4549 ;; Hardware stack levels used: 1
  4550 ;; Hardware stack levels required when called: 4
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_I2C_MasterFsm
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text39
  4559  002450                     __ptext39:
  4560                           	callstack 0
  4561  002450                     _I2C_DO_RESET:
  4562                           	callstack 20
  4563  002450                     
  4564                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
  4565  002450  0100               	movlb	0	; () banked
  4566  002452  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  4567  002454                     
  4568                           ; BSR set to: 0
  4569                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
  4570  002454  0E00               	movlw	0
  4571  002456  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  4572  002458                     
  4573                           ; BSR set to: 0
  4574                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
  4575  002458  0E0E               	movlw	14
  4576  00245A                     
  4577                           ; BSR set to: 0
  4578  00245A  0012               	return		;funcret
  4579  00245C                     __end_of_I2C_DO_RESET:
  4580                           	callstack 0
  4581                           
  4582 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  4583 ;; Defined at:
  4584 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;		None
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;		None
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  1    wreg      enum E3112
  4591 ;; Registers used:
  4592 ;;		wreg, cstack
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4602 ;;Total ram usage:        0 bytes
  4603 ;; Hardware stack levels used: 1
  4604 ;; Hardware stack levels required when called: 5
  4605 ;; This function calls:
  4606 ;;		_I2C_MasterSendNack
  4607 ;; This function is called by:
  4608 ;;		_I2C_DO_RX
  4609 ;;		_I2C_MasterFsm
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           	psect	text40
  4614  0024C2                     __ptext40:
  4615                           	callstack 0
  4616  0024C2                     _I2C_DO_RX_NACK_RESTART:
  4617                           	callstack 19
  4618  0024C2                     
  4619                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
  4620  0024C2  EC87  F012         	call	_I2C_MasterSendNack	;wreg free
  4621  0024C6                     
  4622                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
  4623  0024C6  0E09               	movlw	9
  4624  0024C8  0012               	return		;funcret
  4625  0024CA                     __end_of_I2C_DO_RX_NACK_RESTART:
  4626                           	callstack 0
  4627                           
  4628 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  4629 ;; Defined at:
  4630 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;		None
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;		None
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  1    wreg      enum E3112
  4637 ;; Registers used:
  4638 ;;		wreg, cstack
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;Total ram usage:        0 bytes
  4649 ;; Hardware stack levels used: 1
  4650 ;; Hardware stack levels required when called: 5
  4651 ;; This function calls:
  4652 ;;		_I2C_MasterSendNack
  4653 ;; This function is called by:
  4654 ;;		_I2C_DO_RX
  4655 ;;		_I2C_MasterFsm
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text41
  4660  0024CA                     __ptext41:
  4661                           	callstack 0
  4662  0024CA                     _I2C_DO_RX_NACK_STOP:
  4663                           	callstack 19
  4664  0024CA                     
  4665                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
  4666  0024CA  EC87  F012         	call	_I2C_MasterSendNack	;wreg free
  4667  0024CE                     
  4668                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
  4669  0024CE  0E0A               	movlw	10
  4670  0024D0  0012               	return		;funcret
  4671  0024D2                     __end_of_I2C_DO_RX_NACK_STOP:
  4672                           	callstack 0
  4673                           
  4674 ;; *************** function _I2C_DO_RX_ACK *****************
  4675 ;; Defined at:
  4676 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;		None
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;		None
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      enum E3112
  4683 ;; Registers used:
  4684 ;;		wreg, cstack
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4694 ;;Total ram usage:        0 bytes
  4695 ;; Hardware stack levels used: 1
  4696 ;; Hardware stack levels required when called: 5
  4697 ;; This function calls:
  4698 ;;		_I2C_MasterSendAck
  4699 ;; This function is called by:
  4700 ;;		_I2C_MasterFsm
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           	psect	text42
  4705  0024D2                     __ptext42:
  4706                           	callstack 0
  4707  0024D2                     _I2C_DO_RX_ACK:
  4708                           	callstack 19
  4709  0024D2                     
  4710                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
  4711  0024D2  EC84  F012         	call	_I2C_MasterSendAck	;wreg free
  4712  0024D6                     
  4713                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
  4714  0024D6  0E05               	movlw	5
  4715  0024D8  0012               	return		;funcret
  4716  0024DA                     __end_of_I2C_DO_RX_ACK:
  4717                           	callstack 0
  4718                           
  4719 ;; *************** function _I2C_DO_SEND_STOP *****************
  4720 ;; Defined at:
  4721 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;		None
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;		None
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  1    wreg      enum E3112
  4728 ;; Registers used:
  4729 ;;		wreg, cstack
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4739 ;;Total ram usage:        0 bytes
  4740 ;; Hardware stack levels used: 1
  4741 ;; Hardware stack levels required when called: 5
  4742 ;; This function calls:
  4743 ;;		_I2C_MasterStop
  4744 ;; This function is called by:
  4745 ;;		_I2C_DO_TX
  4746 ;;		_I2C_DO_TX_EMPTY
  4747 ;;		_I2C_DO_ADDRESS_NACK
  4748 ;;		_I2C_MasterFsm
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	text43
  4753  0024DA                     __ptext43:
  4754                           	callstack 0
  4755  0024DA                     _I2C_DO_SEND_STOP:
  4756                           	callstack 18
  4757  0024DA                     
  4758                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
  4759  0024DA  EC9C  F012         	call	_I2C_MasterStop	;wreg free
  4760  0024DE                     
  4761                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
  4762  0024DE  0E00               	movlw	0
  4763  0024E0  0012               	return		;funcret
  4764  0024E2                     __end_of_I2C_DO_SEND_STOP:
  4765                           	callstack 0
  4766                           
  4767 ;; *************** function _I2C_DO_SEND_RESTART *****************
  4768 ;; Defined at:
  4769 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;		None
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;		None
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  1    wreg      enum E3112
  4776 ;; Registers used:
  4777 ;;		wreg, cstack
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4787 ;;Total ram usage:        0 bytes
  4788 ;; Hardware stack levels used: 1
  4789 ;; Hardware stack levels required when called: 5
  4790 ;; This function calls:
  4791 ;;		_I2C_MasterEnableRestart
  4792 ;; This function is called by:
  4793 ;;		_I2C_DO_TX_EMPTY
  4794 ;;		_I2C_DO_ADDRESS_NACK
  4795 ;;		_I2C_MasterFsm
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799                           	psect	text44
  4800  0024E2                     __ptext44:
  4801                           	callstack 0
  4802  0024E2                     _I2C_DO_SEND_RESTART:
  4803                           	callstack 18
  4804  0024E2                     
  4805                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
  4806  0024E2  EC9E  F012         	call	_I2C_MasterEnableRestart	;wreg free
  4807  0024E6                     
  4808                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
  4809  0024E6  0E01               	movlw	1
  4810  0024E8  0012               	return		;funcret
  4811  0024EA                     __end_of_I2C_DO_SEND_RESTART:
  4812                           	callstack 0
  4813                           
  4814 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  4815 ;; Defined at:
  4816 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;		None
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;		None
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  1    wreg      enum E3112
  4823 ;; Registers used:
  4824 ;;		wreg, cstack
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;Total ram usage:        0 bytes
  4835 ;; Hardware stack levels used: 1
  4836 ;; Hardware stack levels required when called: 5
  4837 ;; This function calls:
  4838 ;;		_I2C_MasterEnableRestart
  4839 ;; This function is called by:
  4840 ;;		_I2C_DO_TX
  4841 ;;		_I2C_MasterFsm
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           	psect	text45
  4846  0024EA                     __ptext45:
  4847                           	callstack 0
  4848  0024EA                     _I2C_DO_SEND_RESTART_WRITE:
  4849                           	callstack 18
  4850  0024EA                     
  4851                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
  4852  0024EA  EC9E  F012         	call	_I2C_MasterEnableRestart	;wreg free
  4853  0024EE                     
  4854                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
  4855  0024EE  0E02               	movlw	2
  4856  0024F0  0012               	return		;funcret
  4857  0024F2                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  4858                           	callstack 0
  4859                           
  4860 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  4861 ;; Defined at:
  4862 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;		None
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;		None
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  1    wreg      enum E3112
  4869 ;; Registers used:
  4870 ;;		wreg, cstack
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;Total ram usage:        0 bytes
  4881 ;; Hardware stack levels used: 1
  4882 ;; Hardware stack levels required when called: 5
  4883 ;; This function calls:
  4884 ;;		_I2C_MasterEnableRestart
  4885 ;; This function is called by:
  4886 ;;		_I2C_DO_TX
  4887 ;;		_I2C_MasterFsm
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           	psect	text46
  4892  0024F2                     __ptext46:
  4893                           	callstack 0
  4894  0024F2                     _I2C_DO_SEND_RESTART_READ:
  4895                           	callstack 18
  4896  0024F2                     
  4897                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
  4898  0024F2  EC9E  F012         	call	_I2C_MasterEnableRestart	;wreg free
  4899  0024F6                     
  4900                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
  4901  0024F6  0E01               	movlw	1
  4902  0024F8  0012               	return		;funcret
  4903  0024FA                     __end_of_I2C_DO_SEND_RESTART_READ:
  4904                           	callstack 0
  4905                           
  4906 ;; *************** function _I2C_DO_RCEN *****************
  4907 ;; Defined at:
  4908 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;		None
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;		None
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  1    wreg      enum E3112
  4915 ;; Registers used:
  4916 ;;		wreg, cstack
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;Total ram usage:        0 bytes
  4927 ;; Hardware stack levels used: 1
  4928 ;; Hardware stack levels required when called: 5
  4929 ;; This function calls:
  4930 ;;		_I2C_MasterStartRx
  4931 ;; This function is called by:
  4932 ;;		_I2C_MasterFsm
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           	psect	text47
  4937  00245C                     __ptext47:
  4938                           	callstack 0
  4939  00245C                     _I2C_DO_RCEN:
  4940                           	callstack 19
  4941  00245C                     
  4942                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
  4943  00245C  0100               	movlb	0	; () banked
  4944  00245E  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  4945  002460                     
  4946                           ; BSR set to: 0
  4947                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
  4948  002460  EC96  F012         	call	_I2C_MasterStartRx	;wreg free
  4949  002464                     
  4950                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
  4951  002464  0E04               	movlw	4
  4952  002466  0012               	return		;funcret
  4953  002468                     __end_of_I2C_DO_RCEN:
  4954                           	callstack 0
  4955                           
  4956 ;; *************** function _I2C_DO_RX *****************
  4957 ;; Defined at:
  4958 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;		None
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;		None
  4963 ;; Return value:  Size  Location     Type
  4964 ;;                  1    wreg      enum E3112
  4965 ;; Registers used:
  4966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4974 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4975 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4976 ;;Total ram usage:        2 bytes
  4977 ;; Hardware stack levels used: 1
  4978 ;; Hardware stack levels required when called: 7
  4979 ;; This function calls:
  4980 ;;		Absolute function
  4981 ;;		_I2C_CallbackReturnReset
  4982 ;;		_I2C_CallbackReturnStop
  4983 ;;		_I2C_DO_RX_NACK_RESTART
  4984 ;;		_I2C_DO_RX_NACK_STOP
  4985 ;;		_I2C_MasterGetRxData
  4986 ;;		_I2C_MasterSendAck
  4987 ;;		_rd1RegCompleteHandler
  4988 ;;		_rd2RegCompleteHandler
  4989 ;;		_rdBlkRegCompleteHandler
  4990 ;;		_wr1RegCompleteHandler
  4991 ;;		_wr2RegCompleteHandler
  4992 ;; This function is called by:
  4993 ;;		_I2C_MasterFsm
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           	psect	text48
  4998  001A02                     __ptext48:
  4999                           	callstack 0
  5000  001A02                     _I2C_DO_RX:
  5001                           	callstack 17
  5002  001A02                     
  5003                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  5004  001A02  EC94  F012         	call	_I2C_MasterGetRxData	;wreg free
  5005  001A06  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  5006  001A0A  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  5007  001A0E  6EDF               	movwf	indf2,c
  5008  001A10  0100               	movlb	0	; () banked
  5009  001A12  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  5010  001A14  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  5011  001A16                     
  5012                           ; BSR set to: 0
  5013                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
  5014  001A16  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  5015  001A18  A0D8               	btfss	status,0,c
  5016  001A1A  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  5017  001A1C  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  5018  001A1E  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  5019  001A20  B4D8               	btfsc	status,2,c
  5020  001A22  EF15  F00D         	goto	u1131
  5021  001A26  EF17  F00D         	goto	u1130
  5022  001A2A                     u1131:
  5023  001A2A  EF1C  F00D         	goto	l294
  5024  001A2E                     u1130:
  5025  001A2E                     
  5026                           ; BSR set to: 0
  5027                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
  5028  001A2E  EC84  F012         	call	_I2C_MasterSendAck	;wreg free
  5029  001A32                     
  5030                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
  5031  001A32  0E05               	movlw	5
  5032  001A34  EF53  F00D         	goto	l295
  5033  001A38                     l294:
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
  5037  001A38  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  5038                           
  5039                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  5040  001A3A  EF27  F00D         	goto	l2784
  5041  001A3E                     l2774:
  5042                           
  5043                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
  5044  001A3E  EC61  F012         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
  5045  001A42  EF53  F00D         	goto	l295
  5046  001A46                     l2778:
  5047                           
  5048                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
  5049  001A46  EC65  F012         	call	_I2C_DO_RX_NACK_STOP	;wreg free
  5050  001A4A  EF53  F00D         	goto	l295
  5051  001A4E                     l2784:
  5052                           
  5053                           ; BSR set to: 0
  5054  001A4E  C06C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  5055  001A52  C06D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  5056  001A56  D802               	call	u1148
  5057  001A58  EF37  F00D         	goto	u1149
  5058  001A5C                     u1148:
  5059  001A5C  0005               	push	
  5060  001A5E  6EFA               	movwf	pclath,c
  5061  001A60  5160               	movf	_I2C_Status& (0+255),w,b
  5062  001A62  6EFD               	movwf	tosl,c
  5063  001A64  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  5064  001A66  6EFE               	movwf	tosh,c
  5065  001A68  6AFF               	clrf	tosu,c
  5066  001A6A  50FA               	movf	pclath,w,c
  5067  001A6C  0012               	return		;indir
  5068  001A6E                     u1149:
  5069  001A6E  6E10               	movwf	??_I2C_DO_RX^0,c
  5070  001A70  6A11               	clrf	(??_I2C_DO_RX+1)^0,c
  5071                           
  5072                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5073                           ; Switch size 1, requested type "simple"
  5074                           ; Number of cases is 1, Range of values is 0 to 0
  5075                           ; switch strategies available:
  5076                           ; Name         Instructions Cycles
  5077                           ; simple_byte            4     3 (average)
  5078                           ;	Chosen strategy is simple_byte
  5079  001A72  5011               	movf	(??_I2C_DO_RX+1)^0,w,c
  5080  001A74  0A00               	xorlw	0	; case 0
  5081  001A76  B4D8               	btfsc	status,2,c
  5082  001A78  EF40  F00D         	goto	l4026
  5083  001A7C  EF23  F00D         	goto	l2778
  5084  001A80                     l4026:
  5085                           
  5086                           ; Switch size 1, requested type "simple"
  5087                           ; Number of cases is 4, Range of values is 1 to 4
  5088                           ; switch strategies available:
  5089                           ; Name         Instructions Cycles
  5090                           ; simple_byte           13     7 (average)
  5091                           ;	Chosen strategy is simple_byte
  5092  001A80  5010               	movf	??_I2C_DO_RX^0,w,c
  5093  001A82  0A01               	xorlw	1	; case 1
  5094  001A84  B4D8               	btfsc	status,2,c
  5095  001A86  EF23  F00D         	goto	l2778
  5096  001A8A  0A03               	xorlw	3	; case 2
  5097  001A8C  B4D8               	btfsc	status,2,c
  5098  001A8E  EF1F  F00D         	goto	l2774
  5099  001A92  0A01               	xorlw	1	; case 3
  5100  001A94  B4D8               	btfsc	status,2,c
  5101  001A96  EF1F  F00D         	goto	l2774
  5102  001A9A  0A07               	xorlw	7	; case 4
  5103  001A9C  B4D8               	btfsc	status,2,c
  5104  001A9E  EF23  F00D         	goto	l2778
  5105  001AA2  EF23  F00D         	goto	l2778
  5106  001AA6                     l295:
  5107  001AA6  0012               	return		;funcret
  5108  001AA8                     __end_of_I2C_DO_RX:
  5109                           	callstack 0
  5110                           
  5111 ;; *************** function _I2C_DO_TX *****************
  5112 ;; Defined at:
  5113 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;		None
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;		None
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  1    wreg      enum E3112
  5120 ;; Registers used:
  5121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5129 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5130 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5131 ;;Total ram usage:        2 bytes
  5132 ;; Hardware stack levels used: 1
  5133 ;; Hardware stack levels required when called: 7
  5134 ;; This function calls:
  5135 ;;		Absolute function
  5136 ;;		_I2C_CallbackReturnReset
  5137 ;;		_I2C_CallbackReturnStop
  5138 ;;		_I2C_DO_SEND_RESTART_READ
  5139 ;;		_I2C_DO_SEND_RESTART_WRITE
  5140 ;;		_I2C_DO_SEND_STOP
  5141 ;;		_I2C_MasterIsNack
  5142 ;;		_I2C_MasterSendTxData
  5143 ;;		_rd1RegCompleteHandler
  5144 ;;		_rd2RegCompleteHandler
  5145 ;;		_rdBlkRegCompleteHandler
  5146 ;;		_wr1RegCompleteHandler
  5147 ;;		_wr2RegCompleteHandler
  5148 ;; This function is called by:
  5149 ;;		_I2C_MasterFsm
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text49
  5154  001882                     __ptext49:
  5155                           	callstack 0
  5156  001882                     _I2C_DO_TX:
  5157                           	callstack 17
  5158  001882                     
  5159                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
  5160  001882  ECFE  F011         	call	_I2C_MasterIsNack	;wreg free
  5161  001886  0900               	iorlw	0
  5162  001888  B4D8               	btfsc	status,2,c
  5163  00188A  EF49  F00C         	goto	u1101
  5164  00188E  EF4B  F00C         	goto	u1100
  5165  001892                     u1101:
  5166  001892  EF86  F00C         	goto	l278
  5167  001896                     u1100:
  5168  001896  EF59  F00C         	goto	l2744
  5169  00189A                     l2730:
  5170                           
  5171                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  5172  00189A  EC79  F012         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
  5173  00189E  EFA2  F00C         	goto	l281
  5174  0018A2                     l2734:
  5175                           
  5176                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  5177  0018A2  EC75  F012         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
  5178  0018A6  EFA2  F00C         	goto	l281
  5179  0018AA                     l2738:
  5180                           
  5181                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
  5182  0018AA  EC6D  F012         	call	_I2C_DO_SEND_STOP	;wreg free
  5183  0018AE  EFA2  F00C         	goto	l281
  5184  0018B2                     l2744:
  5185  0018B2  C072  F00E         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
  5186  0018B6  C073  F00F         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
  5187  0018BA  D802               	call	u1118
  5188  0018BC  EF6A  F00C         	goto	u1119
  5189  0018C0                     u1118:
  5190  0018C0  0005               	push	
  5191  0018C2  6EFA               	movwf	pclath,c
  5192  0018C4  0100               	movlb	0	; () banked
  5193  0018C6  5166               	movf	(_I2C_Status+6)& (0+255),w,b
  5194  0018C8  6EFD               	movwf	tosl,c
  5195  0018CA  5167               	movf	(_I2C_Status+7)& (0+255),w,b
  5196  0018CC  6EFE               	movwf	tosh,c
  5197  0018CE  6AFF               	clrf	tosu,c
  5198  0018D0  50FA               	movf	pclath,w,c
  5199  0018D2  0012               	return		;indir
  5200  0018D4                     u1119:
  5201  0018D4  6E10               	movwf	??_I2C_DO_TX^0,c
  5202  0018D6  6A11               	clrf	(??_I2C_DO_TX+1)^0,c
  5203                           
  5204                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5205                           ; Switch size 1, requested type "simple"
  5206                           ; Number of cases is 1, Range of values is 0 to 0
  5207                           ; switch strategies available:
  5208                           ; Name         Instructions Cycles
  5209                           ; simple_byte            4     3 (average)
  5210                           ;	Chosen strategy is simple_byte
  5211  0018D8  5011               	movf	(??_I2C_DO_TX+1)^0,w,c
  5212  0018DA  0A00               	xorlw	0	; case 0
  5213  0018DC  B4D8               	btfsc	status,2,c
  5214  0018DE  EF73  F00C         	goto	l4028
  5215  0018E2  EF55  F00C         	goto	l2738
  5216  0018E6                     l4028:
  5217                           
  5218                           ; Switch size 1, requested type "simple"
  5219                           ; Number of cases is 4, Range of values is 1 to 4
  5220                           ; switch strategies available:
  5221                           ; Name         Instructions Cycles
  5222                           ; simple_byte           13     7 (average)
  5223                           ;	Chosen strategy is simple_byte
  5224  0018E6  5010               	movf	??_I2C_DO_TX^0,w,c
  5225  0018E8  0A01               	xorlw	1	; case 1
  5226  0018EA  B4D8               	btfsc	status,2,c
  5227  0018EC  EF55  F00C         	goto	l2738
  5228  0018F0  0A03               	xorlw	3	; case 2
  5229  0018F2  B4D8               	btfsc	status,2,c
  5230  0018F4  EF4D  F00C         	goto	l2730
  5231  0018F8  0A01               	xorlw	1	; case 3
  5232  0018FA  B4D8               	btfsc	status,2,c
  5233  0018FC  EF51  F00C         	goto	l2734
  5234  001900  0A07               	xorlw	7	; case 4
  5235  001902  B4D8               	btfsc	status,2,c
  5236  001904  EF55  F00C         	goto	l2738
  5237  001908  EF55  F00C         	goto	l2738
  5238  00190C                     l278:
  5239                           
  5240                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
  5241  00190C  0100               	movlb	0	; () banked
  5242  00190E  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  5243  001910                     
  5244                           ; BSR set to: 0
  5245                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  5246  001910  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  5247  001914  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  5248  001918  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  5249  00191A  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  5250  00191C  50DF               	movf	indf2,w,c
  5251  00191E  EC7D  F012         	call	_I2C_MasterSendTxData
  5252  001922                     
  5253                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  5254  001922  0100               	movlb	0	; () banked
  5255  001924  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  5256  001926  A0D8               	btfss	status,0,c
  5257  001928  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  5258  00192A  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  5259  00192C  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  5260  00192E  A4D8               	btfss	status,2,c
  5261  001930  EF9C  F00C         	goto	u1121
  5262  001934  EF9E  F00C         	goto	u1120
  5263  001938                     u1121:
  5264  001938  EFA1  F00C         	goto	l2752
  5265  00193C                     u1120:
  5266  00193C                     
  5267                           ; BSR set to: 0
  5268  00193C  0E06               	movlw	6
  5269  00193E  EFA2  F00C         	goto	l281
  5270  001942                     l2752:
  5271                           
  5272                           ; BSR set to: 0
  5273  001942  0E03               	movlw	3
  5274  001944                     l281:
  5275  001944  0012               	return		;funcret
  5276  001946                     __end_of_I2C_DO_TX:
  5277                           	callstack 0
  5278                           
  5279 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  5280 ;; Defined at:
  5281 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;		None
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;		None
  5286 ;; Return value:  Size  Location     Type
  5287 ;;                  1    wreg      enum E3112
  5288 ;; Registers used:
  5289 ;;		wreg, status,2, status,0, cstack
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;Total ram usage:        0 bytes
  5300 ;; Hardware stack levels used: 1
  5301 ;; Hardware stack levels required when called: 5
  5302 ;; This function calls:
  5303 ;;		_I2C_MasterSendTxData
  5304 ;; This function is called by:
  5305 ;;		_I2C_MasterFsm
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           	psect	text50
  5310  002430                     __ptext50:
  5311                           	callstack 0
  5312  002430                     _I2C_DO_SEND_ADR_WRITE:
  5313                           	callstack 19
  5314  002430                     
  5315                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
  5316  002430  0100               	movlb	0	; () banked
  5317  002432  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  5318  002434                     
  5319                           ; BSR set to: 0
  5320                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                          );
  5321  002434  517C               	movf	(_I2C_Status+28)& (0+255),w,b
  5322  002436  257C               	addwf	(_I2C_Status+28)& (0+255),w,b
  5323  002438  EC7D  F012         	call	_I2C_MasterSendTxData
  5324  00243C                     
  5325                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
  5326  00243C  0E03               	movlw	3
  5327  00243E  0012               	return		;funcret
  5328  002440                     __end_of_I2C_DO_SEND_ADR_WRITE:
  5329                           	callstack 0
  5330                           
  5331 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  5332 ;; Defined at:
  5333 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;		None
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;		None
  5338 ;; Return value:  Size  Location     Type
  5339 ;;                  1    wreg      enum E3112
  5340 ;; Registers used:
  5341 ;;		wreg, status,0, cstack
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5351 ;;Total ram usage:        0 bytes
  5352 ;; Hardware stack levels used: 1
  5353 ;; Hardware stack levels required when called: 5
  5354 ;; This function calls:
  5355 ;;		_I2C_MasterSendTxData
  5356 ;; This function is called by:
  5357 ;;		_I2C_MasterFsm
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           	psect	text51
  5362  002440                     __ptext51:
  5363                           	callstack 0
  5364  002440                     _I2C_DO_SEND_ADR_READ:
  5365                           	callstack 19
  5366  002440                     
  5367                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
  5368  002440  0100               	movlb	0	; () banked
  5369  002442  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  5370  002444                     
  5371                           ; BSR set to: 0
  5372                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                           | 1);
  5373  002444  80D8               	bsf	status,0,c
  5374  002446  357C               	rlcf	(_I2C_Status+28)& (0+255),w,b
  5375  002448  EC7D  F012         	call	_I2C_MasterSendTxData
  5376  00244C                     
  5377                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
  5378  00244C  0E05               	movlw	5
  5379  00244E  0012               	return		;funcret
  5380  002450                     __end_of_I2C_DO_SEND_ADR_READ:
  5381                           	callstack 0
  5382                           
  5383 ;; *************** function _I2C_DO_IDLE *****************
  5384 ;; Defined at:
  5385 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;		None
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;		None
  5390 ;; Return value:  Size  Location     Type
  5391 ;;                  1    wreg      enum E3112
  5392 ;; Registers used:
  5393 ;;		wreg, status,2
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5403 ;;Total ram usage:        0 bytes
  5404 ;; Hardware stack levels used: 1
  5405 ;; Hardware stack levels required when called: 4
  5406 ;; This function calls:
  5407 ;;		Nothing
  5408 ;; This function is called by:
  5409 ;;		_I2C_MasterFsm
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413                           	psect	text52
  5414  002468                     __ptext52:
  5415                           	callstack 0
  5416  002468                     _I2C_DO_IDLE:
  5417                           	callstack 20
  5418  002468                     
  5419                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
  5420  002468  0100               	movlb	0	; () banked
  5421  00246A  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  5422  00246C                     
  5423                           ; BSR set to: 0
  5424                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
  5425  00246C  0E00               	movlw	0
  5426  00246E  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  5427  002470                     
  5428                           ; BSR set to: 0
  5429                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
  5430  002470  0E0E               	movlw	14
  5431  002472                     
  5432                           ; BSR set to: 0
  5433  002472  0012               	return		;funcret
  5434  002474                     __end_of_I2C_DO_IDLE:
  5435                           	callstack 0
  5436                           
  5437 ;; *************** function _I2C_DO_TX_EMPTY *****************
  5438 ;; Defined at:
  5439 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;		None
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;		None
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  1    wreg      enum E3112
  5446 ;; Registers used:
  5447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5456 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5457 ;;Total ram usage:        2 bytes
  5458 ;; Hardware stack levels used: 1
  5459 ;; Hardware stack levels required when called: 7
  5460 ;; This function calls:
  5461 ;;		Absolute function
  5462 ;;		_I2C_CallbackReturnReset
  5463 ;;		_I2C_CallbackReturnStop
  5464 ;;		_I2C_DO_SEND_RESTART
  5465 ;;		_I2C_DO_SEND_STOP
  5466 ;;		_I2C_MasterSetIrq
  5467 ;;		_rd1RegCompleteHandler
  5468 ;;		_rd2RegCompleteHandler
  5469 ;;		_rdBlkRegCompleteHandler
  5470 ;;		_wr1RegCompleteHandler
  5471 ;;		_wr2RegCompleteHandler
  5472 ;; This function is called by:
  5473 ;;		_I2C_MasterFsm
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           	psect	text53
  5478  001BCC                     __ptext53:
  5479                           	callstack 0
  5480  001BCC                     _I2C_DO_TX_EMPTY:
  5481                           	callstack 17
  5482  001BCC                     
  5483                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
  5484  001BCC  0100               	movlb	0	; () banked
  5485  001BCE  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  5486                           
  5487                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  5488  001BD0  EFF7  F00D         	goto	l2816
  5489  001BD4                     l2800:
  5490                           
  5491                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
  5492  001BD4  EC71  F012         	call	_I2C_DO_SEND_RESTART	;wreg free
  5493  001BD8  EF23  F00E         	goto	l312
  5494  001BDC                     l2804:
  5495                           
  5496                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
  5497  001BDC  EC92  F012         	call	_I2C_MasterSetIrq	;wreg free
  5498  001BE0                     
  5499                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
  5500  001BE0  0E03               	movlw	3
  5501  001BE2  EF23  F00E         	goto	l312
  5502  001BE6                     l2810:
  5503                           
  5504                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
  5505  001BE6  EC6D  F012         	call	_I2C_DO_SEND_STOP	;wreg free
  5506  001BEA  EF23  F00E         	goto	l312
  5507  001BEE                     l2816:
  5508                           
  5509                           ; BSR set to: 0
  5510  001BEE  C06C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  5511  001BF2  C06D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  5512  001BF6  D802               	call	u1158
  5513  001BF8  EF07  F00E         	goto	u1159
  5514  001BFC                     u1158:
  5515  001BFC  0005               	push	
  5516  001BFE  6EFA               	movwf	pclath,c
  5517  001C00  5160               	movf	_I2C_Status& (0+255),w,b
  5518  001C02  6EFD               	movwf	tosl,c
  5519  001C04  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  5520  001C06  6EFE               	movwf	tosh,c
  5521  001C08  6AFF               	clrf	tosu,c
  5522  001C0A  50FA               	movf	pclath,w,c
  5523  001C0C  0012               	return		;indir
  5524  001C0E                     u1159:
  5525  001C0E  6E10               	movwf	??_I2C_DO_TX_EMPTY^0,c
  5526  001C10  6A11               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
  5527                           
  5528                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5529                           ; Switch size 1, requested type "simple"
  5530                           ; Number of cases is 1, Range of values is 0 to 0
  5531                           ; switch strategies available:
  5532                           ; Name         Instructions Cycles
  5533                           ; simple_byte            4     3 (average)
  5534                           ;	Chosen strategy is simple_byte
  5535  001C12  5011               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
  5536  001C14  0A00               	xorlw	0	; case 0
  5537  001C16  B4D8               	btfsc	status,2,c
  5538  001C18  EF10  F00E         	goto	l4030
  5539  001C1C  EFF3  F00D         	goto	l2810
  5540  001C20                     l4030:
  5541                           
  5542                           ; Switch size 1, requested type "simple"
  5543                           ; Number of cases is 4, Range of values is 1 to 4
  5544                           ; switch strategies available:
  5545                           ; Name         Instructions Cycles
  5546                           ; simple_byte           13     7 (average)
  5547                           ;	Chosen strategy is simple_byte
  5548  001C20  5010               	movf	??_I2C_DO_TX_EMPTY^0,w,c
  5549  001C22  0A01               	xorlw	1	; case 1
  5550  001C24  B4D8               	btfsc	status,2,c
  5551  001C26  EFF3  F00D         	goto	l2810
  5552  001C2A  0A03               	xorlw	3	; case 2
  5553  001C2C  B4D8               	btfsc	status,2,c
  5554  001C2E  EFEA  F00D         	goto	l2800
  5555  001C32  0A01               	xorlw	1	; case 3
  5556  001C34  B4D8               	btfsc	status,2,c
  5557  001C36  EFEA  F00D         	goto	l2800
  5558  001C3A  0A07               	xorlw	7	; case 4
  5559  001C3C  B4D8               	btfsc	status,2,c
  5560  001C3E  EFEE  F00D         	goto	l2804
  5561  001C42  EFF3  F00D         	goto	l2810
  5562  001C46                     l312:
  5563  001C46  0012               	return		;funcret
  5564  001C48                     __end_of_I2C_DO_TX_EMPTY:
  5565                           	callstack 0
  5566                           
  5567 ;; *************** function _I2C_MasterSetIrq *****************
  5568 ;; Defined at:
  5569 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;		None
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;		None
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  1    wreg      void 
  5576 ;; Registers used:
  5577 ;;		None
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;Total ram usage:        0 bytes
  5588 ;; Hardware stack levels used: 1
  5589 ;; Hardware stack levels required when called: 4
  5590 ;; This function calls:
  5591 ;;		Nothing
  5592 ;; This function is called by:
  5593 ;;		_I2C_DO_TX_EMPTY
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           	psect	text54
  5598  002524                     __ptext54:
  5599                           	callstack 0
  5600  002524                     _I2C_MasterSetIrq:
  5601                           	callstack 19
  5602  002524                     
  5603                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
  5604  002524  869E               	bsf	158,3,c	;volatile
  5605  002526  0012               	return		;funcret
  5606  002528                     __end_of_I2C_MasterSetIrq:
  5607                           	callstack 0
  5608                           
  5609 ;; *************** function _I2C_MasterIsNack *****************
  5610 ;; Defined at:
  5611 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;		None
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;		None
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  1    wreg      _Bool 
  5618 ;; Registers used:
  5619 ;;		wreg
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5629 ;;Total ram usage:        0 bytes
  5630 ;; Hardware stack levels used: 1
  5631 ;; Hardware stack levels required when called: 4
  5632 ;; This function calls:
  5633 ;;		Nothing
  5634 ;; This function is called by:
  5635 ;;		_I2C_MasterFsm
  5636 ;;		_I2C_DO_TX
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           	psect	text55
  5641  0023FC                     __ptext55:
  5642                           	callstack 0
  5643  0023FC                     _I2C_MasterIsNack:
  5644                           	callstack 20
  5645  0023FC                     
  5646                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
  5647  0023FC  BCC5               	btfsc	197,6,c	;volatile
  5648  0023FE  EF03  F012         	goto	u1061
  5649  002402  EF06  F012         	goto	u1060
  5650  002406                     u1061:
  5651  002406  0E01               	movlw	1
  5652  002408  EF07  F012         	goto	u1066
  5653  00240C                     u1060:
  5654  00240C  0E00               	movlw	0
  5655  00240E                     u1066:
  5656  00240E  0012               	return		;funcret
  5657  002410                     __end_of_I2C_MasterIsNack:
  5658                           	callstack 0
  5659                           
  5660 ;; *************** function _I2C_MasterSendTxData *****************
  5661 ;; Defined at:
  5662 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;  data            1    wreg     unsigned char 
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  data            1    4[COMRAM] unsigned char 
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      void 
  5669 ;; Registers used:
  5670 ;;		wreg
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5677 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5679 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5680 ;;Total ram usage:        1 bytes
  5681 ;; Hardware stack levels used: 1
  5682 ;; Hardware stack levels required when called: 4
  5683 ;; This function calls:
  5684 ;;		Nothing
  5685 ;; This function is called by:
  5686 ;;		_I2C_DO_SEND_ADR_READ
  5687 ;;		_I2C_DO_SEND_ADR_WRITE
  5688 ;;		_I2C_DO_TX
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text56
  5693  0024FA                     __ptext56:
  5694                           	callstack 0
  5695  0024FA                     _I2C_MasterSendTxData:
  5696                           	callstack 19
  5697                           
  5698                           ;incstack = 0
  5699                           ;I2C_MasterSendTxData@data stored from wreg
  5700  0024FA  6E05               	movwf	I2C_MasterSendTxData@data^0,c
  5701  0024FC                     
  5702                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
  5703  0024FC  C005  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
  5704  002500  0012               	return		;funcret
  5705  002502                     __end_of_I2C_MasterSendTxData:
  5706                           	callstack 0
  5707                           
  5708 ;; *************** function _I2C_MasterSendAck *****************
  5709 ;; Defined at:
  5710 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;		None
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;		None
  5715 ;; Return value:  Size  Location     Type
  5716 ;;                  1    wreg      void 
  5717 ;; Registers used:
  5718 ;;		None
  5719 ;; Tracked objects:
  5720 ;;		On entry : 0/0
  5721 ;;		On exit  : 0/0
  5722 ;;		Unchanged: 0/0
  5723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5728 ;;Total ram usage:        0 bytes
  5729 ;; Hardware stack levels used: 1
  5730 ;; Hardware stack levels required when called: 4
  5731 ;; This function calls:
  5732 ;;		Nothing
  5733 ;; This function is called by:
  5734 ;;		_I2C_DO_RX
  5735 ;;		_I2C_DO_RX_ACK
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           
  5739                           	psect	text57
  5740  002508                     __ptext57:
  5741                           	callstack 0
  5742  002508                     _I2C_MasterSendAck:
  5743                           	callstack 19
  5744  002508                     
  5745                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
  5746  002508  9AC5               	bcf	197,5,c	;volatile
  5747                           
  5748                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
  5749  00250A  88C5               	bsf	197,4,c	;volatile
  5750  00250C  0012               	return		;funcret
  5751  00250E                     __end_of_I2C_MasterSendAck:
  5752                           	callstack 0
  5753                           
  5754 ;; *************** function _I2C_MasterGetRxData *****************
  5755 ;; Defined at:
  5756 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;		None
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;		None
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  1    wreg      unsigned char 
  5763 ;; Registers used:
  5764 ;;		wreg, status,2
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5774 ;;Total ram usage:        0 bytes
  5775 ;; Hardware stack levels used: 1
  5776 ;; Hardware stack levels required when called: 4
  5777 ;; This function calls:
  5778 ;;		Nothing
  5779 ;; This function is called by:
  5780 ;;		_I2C_DO_RX
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           	psect	text58
  5785  002528                     __ptext58:
  5786                           	callstack 0
  5787  002528                     _I2C_MasterGetRxData:
  5788                           	callstack 19
  5789  002528                     
  5790                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
  5791  002528  50C9               	movf	201,w,c	;volatile
  5792  00252A  0012               	return		;funcret
  5793  00252C                     __end_of_I2C_MasterGetRxData:
  5794                           	callstack 0
  5795                           
  5796 ;; *************** function _I2C_MasterSendNack *****************
  5797 ;; Defined at:
  5798 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;		None
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;		None
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  1    wreg      void 
  5805 ;; Registers used:
  5806 ;;		None
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5816 ;;Total ram usage:        0 bytes
  5817 ;; Hardware stack levels used: 1
  5818 ;; Hardware stack levels required when called: 4
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_I2C_DO_RX_NACK_STOP
  5823 ;;		_I2C_DO_RX_NACK_RESTART
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           	psect	text59
  5828  00250E                     __ptext59:
  5829                           	callstack 0
  5830  00250E                     _I2C_MasterSendNack:
  5831                           	callstack 19
  5832  00250E                     
  5833                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
  5834  00250E  8AC5               	bsf	197,5,c	;volatile
  5835                           
  5836                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
  5837  002510  88C5               	bsf	197,4,c	;volatile
  5838  002512  0012               	return		;funcret
  5839  002514                     __end_of_I2C_MasterSendNack:
  5840                           	callstack 0
  5841                           
  5842 ;; *************** function _I2C_MasterStartRx *****************
  5843 ;; Defined at:
  5844 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;		None
  5847 ;; Auto vars:     Size  Location     Type
  5848 ;;		None
  5849 ;; Return value:  Size  Location     Type
  5850 ;;                  1    wreg      void 
  5851 ;; Registers used:
  5852 ;;		None
  5853 ;; Tracked objects:
  5854 ;;		On entry : 0/0
  5855 ;;		On exit  : 0/0
  5856 ;;		Unchanged: 0/0
  5857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5862 ;;Total ram usage:        0 bytes
  5863 ;; Hardware stack levels used: 1
  5864 ;; Hardware stack levels required when called: 4
  5865 ;; This function calls:
  5866 ;;		Nothing
  5867 ;; This function is called by:
  5868 ;;		_I2C_DO_RCEN
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872                           	psect	text60
  5873  00252C                     __ptext60:
  5874                           	callstack 0
  5875  00252C                     _I2C_MasterStartRx:
  5876                           	callstack 19
  5877  00252C                     
  5878                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
  5879  00252C  86C5               	bsf	197,3,c	;volatile
  5880  00252E  0012               	return		;funcret
  5881  002530                     __end_of_I2C_MasterStartRx:
  5882                           	callstack 0
  5883                           
  5884 ;; *************** function _I2C_CallbackReturnReset *****************
  5885 ;; Defined at:
  5886 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;  funPtr          2   13[COMRAM] PTR void 
  5889 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5890 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5891 ;; Auto vars:     Size  Location     Type
  5892 ;;		None
  5893 ;; Return value:  Size  Location     Type
  5894 ;;                  1    wreg      enum E360
  5895 ;; Registers used:
  5896 ;;		wreg
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 0/0
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5905 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5906 ;;Total ram usage:        2 bytes
  5907 ;; Hardware stack levels used: 1
  5908 ;; Hardware stack levels required when called: 4
  5909 ;; This function calls:
  5910 ;;		Nothing
  5911 ;; This function is called by:
  5912 ;;		_I2C_Open
  5913 ;;		_I2C_DO_TX
  5914 ;;		_I2C_DO_RX
  5915 ;;		_I2C_DO_TX_EMPTY
  5916 ;;		_I2C_DO_ADDRESS_NACK
  5917 ;;		_I2C_DO_RX_EMPTY
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           	psect	text61
  5922  002530                     __ptext61:
  5923                           	callstack 0
  5924  002530                     _I2C_CallbackReturnReset:
  5925                           	callstack 19
  5926  002530                     
  5927                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
  5928  002530  0E05               	movlw	5
  5929  002532  0012               	return		;funcret
  5930  002534                     __end_of_I2C_CallbackReturnReset:
  5931                           	callstack 0
  5932                           
  5933 ;; *************** function _I2C_CallbackReturnStop *****************
  5934 ;; Defined at:
  5935 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;  funPtr          2   13[COMRAM] PTR void 
  5938 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5939 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;		None
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  1    wreg      enum E360
  5944 ;; Registers used:
  5945 ;;		wreg
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5951 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5954 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5955 ;;Total ram usage:        2 bytes
  5956 ;; Hardware stack levels used: 1
  5957 ;; Hardware stack levels required when called: 4
  5958 ;; This function calls:
  5959 ;;		Nothing
  5960 ;; This function is called by:
  5961 ;;		_I2C_Open
  5962 ;;		_I2C_SetCallback
  5963 ;;		_I2C_DO_TX
  5964 ;;		_I2C_DO_RX
  5965 ;;		_I2C_DO_TX_EMPTY
  5966 ;;		_I2C_DO_ADDRESS_NACK
  5967 ;;		_I2C_DO_RX_EMPTY
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text62
  5972  002534                     __ptext62:
  5973                           	callstack 0
  5974  002534                     _I2C_CallbackReturnStop:
  5975                           	callstack 19
  5976  002534                     
  5977                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
  5978  002534  0E01               	movlw	1
  5979  002536  0012               	return		;funcret
  5980  002538                     __end_of_I2C_CallbackReturnStop:
  5981                           	callstack 0
  5982                           
  5983 ;; *************** function _rdBlkRegCompleteHandler *****************
  5984 ;; Defined at:
  5985 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;  ptr             2   13[COMRAM] PTR void 
  5988 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5989 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;		None
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  1    wreg      enum E360
  5994 ;; Registers used:
  5995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6001 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6004 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6005 ;;Total ram usage:        2 bytes
  6006 ;; Hardware stack levels used: 1
  6007 ;; Hardware stack levels required when called: 6
  6008 ;; This function calls:
  6009 ;;		_I2C_SetBuffer
  6010 ;;		_I2C_SetDataCompleteCallback
  6011 ;; This function is called by:
  6012 ;;		_I2C_ReadDataBlock
  6013 ;;		_I2C_DO_TX
  6014 ;;		_I2C_DO_RX
  6015 ;;		_I2C_DO_TX_EMPTY
  6016 ;;		_I2C_DO_ADDRESS_NACK
  6017 ;;		_I2C_DO_RX_EMPTY
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           	psect	text63
  6022  00211C                     __ptext63:
  6023                           	callstack 0
  6024  00211C                     _rdBlkRegCompleteHandler:
  6025                           	callstack 17
  6026  00211C                     
  6027                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  6028  00211C  EE20 F002          	lfsr	2,2
  6029  002120  500E               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
  6030  002122  26D9               	addwf	fsr2l,f,c
  6031  002124  500F               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
  6032  002126  22DA               	addwfc	fsr2h,f,c
  6033  002128  CFDE F005          	movff	postinc2,I2C_SetBuffer@buffer
  6034  00212C  CFDD F006          	movff	postdec2,I2C_SetBuffer@buffer+1
  6035  002130  C00E  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
  6036  002134  C00F  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
  6037  002138  CFDE F007          	movff	postinc2,I2C_SetBuffer@bufferSize
  6038  00213C  CFDD F008          	movff	postdec2,I2C_SetBuffer@bufferSize+1
  6039  002140  EC8F  F011         	call	_I2C_SetBuffer	;wreg free
  6040  002144                     
  6041                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6042  002144  0E00               	movlw	0
  6043  002146  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6044  002148  0E00               	movlw	0
  6045  00214A  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6046  00214C  0E00               	movlw	0
  6047  00214E  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6048  002150  0E00               	movlw	0
  6049  002152  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6050  002154  ECDD  F011         	call	_I2C_SetDataCompleteCallback	;wreg free
  6051  002158                     
  6052                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  6053  002158  0E02               	movlw	2
  6054  00215A  0012               	return		;funcret
  6055  00215C                     __end_of_rdBlkRegCompleteHandler:
  6056                           	callstack 0
  6057                           
  6058 ;; *************** function _wr1RegCompleteHandler *****************
  6059 ;; Defined at:
  6060 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;  ptr             2   13[COMRAM] PTR void 
  6063 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6064 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;		None
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  1    wreg      enum E360
  6069 ;; Registers used:
  6070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6076 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6079 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6080 ;;Total ram usage:        2 bytes
  6081 ;; Hardware stack levels used: 1
  6082 ;; Hardware stack levels required when called: 6
  6083 ;; This function calls:
  6084 ;;		_I2C_SetBuffer
  6085 ;;		_I2C_SetDataCompleteCallback
  6086 ;; This function is called by:
  6087 ;;		_I2C_Write1ByteRegister
  6088 ;;		_I2C_DO_TX
  6089 ;;		_I2C_DO_RX
  6090 ;;		_I2C_DO_TX_EMPTY
  6091 ;;		_I2C_DO_ADDRESS_NACK
  6092 ;;		_I2C_DO_RX_EMPTY
  6093 ;; This function uses a non-reentrant model
  6094 ;;
  6095                           
  6096                           	psect	text64
  6097  0021F0                     __ptext64:
  6098                           	callstack 0
  6099  0021F0                     _wr1RegCompleteHandler:
  6100                           	callstack 17
  6101  0021F0                     
  6102                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  6103  0021F0  C00E  F005         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6104  0021F4  C00F  F006         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6105  0021F8  0E00               	movlw	0
  6106  0021FA  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6107  0021FC  0E01               	movlw	1
  6108  0021FE  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  6109  002200  EC8F  F011         	call	_I2C_SetBuffer	;wreg free
  6110  002204                     
  6111                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6112  002204  0E00               	movlw	0
  6113  002206  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6114  002208  0E00               	movlw	0
  6115  00220A  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6116  00220C  0E00               	movlw	0
  6117  00220E  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6118  002210  0E00               	movlw	0
  6119  002212  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6120  002214  ECDD  F011         	call	_I2C_SetDataCompleteCallback	;wreg free
  6121  002218                     
  6122                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  6123  002218  0E04               	movlw	4
  6124  00221A  0012               	return		;funcret
  6125  00221C                     __end_of_wr1RegCompleteHandler:
  6126                           	callstack 0
  6127                           
  6128 ;; *************** function _rd2RegCompleteHandler *****************
  6129 ;; Defined at:
  6130 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;  ptr             2   13[COMRAM] PTR void 
  6133 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6134 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;		None
  6137 ;; Return value:  Size  Location     Type
  6138 ;;                  1    wreg      enum E360
  6139 ;; Registers used:
  6140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6141 ;; Tracked objects:
  6142 ;;		On entry : 0/0
  6143 ;;		On exit  : 0/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6150 ;;Total ram usage:        2 bytes
  6151 ;; Hardware stack levels used: 1
  6152 ;; Hardware stack levels required when called: 6
  6153 ;; This function calls:
  6154 ;;		_I2C_SetBuffer
  6155 ;;		_I2C_SetDataCompleteCallback
  6156 ;; This function is called by:
  6157 ;;		_I2C_Read2ByteRegister
  6158 ;;		_I2C_DO_TX
  6159 ;;		_I2C_DO_RX
  6160 ;;		_I2C_DO_TX_EMPTY
  6161 ;;		_I2C_DO_ADDRESS_NACK
  6162 ;;		_I2C_DO_RX_EMPTY
  6163 ;; This function uses a non-reentrant model
  6164 ;;
  6165                           
  6166                           	psect	text65
  6167  00221C                     __ptext65:
  6168                           	callstack 0
  6169  00221C                     _rd2RegCompleteHandler:
  6170                           	callstack 17
  6171  00221C                     
  6172                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  6173  00221C  C00E  F005         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6174  002220  C00F  F006         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6175  002224  0E00               	movlw	0
  6176  002226  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6177  002228  0E02               	movlw	2
  6178  00222A  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  6179  00222C  EC8F  F011         	call	_I2C_SetBuffer	;wreg free
  6180  002230                     
  6181                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6182  002230  0E00               	movlw	0
  6183  002232  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6184  002234  0E00               	movlw	0
  6185  002236  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6186  002238  0E00               	movlw	0
  6187  00223A  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6188  00223C  0E00               	movlw	0
  6189  00223E  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6190  002240  ECDD  F011         	call	_I2C_SetDataCompleteCallback	;wreg free
  6191  002244                     
  6192                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  6193  002244  0E02               	movlw	2
  6194  002246  0012               	return		;funcret
  6195  002248                     __end_of_rd2RegCompleteHandler:
  6196                           	callstack 0
  6197                           
  6198 ;; *************** function _rd1RegCompleteHandler *****************
  6199 ;; Defined at:
  6200 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;  ptr             2   13[COMRAM] PTR void 
  6203 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6204 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;		None
  6207 ;; Return value:  Size  Location     Type
  6208 ;;                  1    wreg      enum E360
  6209 ;; Registers used:
  6210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6211 ;; Tracked objects:
  6212 ;;		On entry : 0/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6219 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6220 ;;Total ram usage:        2 bytes
  6221 ;; Hardware stack levels used: 1
  6222 ;; Hardware stack levels required when called: 6
  6223 ;; This function calls:
  6224 ;;		_I2C_SetBuffer
  6225 ;;		_I2C_SetDataCompleteCallback
  6226 ;; This function is called by:
  6227 ;;		_I2C_Read1ByteRegister
  6228 ;;		_I2C_DO_TX
  6229 ;;		_I2C_DO_RX
  6230 ;;		_I2C_DO_TX_EMPTY
  6231 ;;		_I2C_DO_ADDRESS_NACK
  6232 ;;		_I2C_DO_RX_EMPTY
  6233 ;; This function uses a non-reentrant model
  6234 ;;
  6235                           
  6236                           	psect	text66
  6237  002248                     __ptext66:
  6238                           	callstack 0
  6239  002248                     _rd1RegCompleteHandler:
  6240                           	callstack 17
  6241  002248                     
  6242                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  6243  002248  C00E  F005         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6244  00224C  C00F  F006         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6245  002250  0E00               	movlw	0
  6246  002252  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6247  002254  0E01               	movlw	1
  6248  002256  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  6249  002258  EC8F  F011         	call	_I2C_SetBuffer	;wreg free
  6250  00225C                     
  6251                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6252  00225C  0E00               	movlw	0
  6253  00225E  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6254  002260  0E00               	movlw	0
  6255  002262  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6256  002264  0E00               	movlw	0
  6257  002266  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6258  002268  0E00               	movlw	0
  6259  00226A  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6260  00226C  ECDD  F011         	call	_I2C_SetDataCompleteCallback	;wreg free
  6261  002270                     
  6262                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  6263  002270  0E02               	movlw	2
  6264  002272  0012               	return		;funcret
  6265  002274                     __end_of_rd1RegCompleteHandler:
  6266                           	callstack 0
  6267                           
  6268 ;; *************** function _wr2RegCompleteHandler *****************
  6269 ;; Defined at:
  6270 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;  ptr             2   13[COMRAM] PTR void 
  6273 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6274 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;		None
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  1    wreg      enum E360
  6279 ;; Registers used:
  6280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6290 ;;Total ram usage:        2 bytes
  6291 ;; Hardware stack levels used: 1
  6292 ;; Hardware stack levels required when called: 6
  6293 ;; This function calls:
  6294 ;;		_I2C_SetBuffer
  6295 ;;		_I2C_SetDataCompleteCallback
  6296 ;; This function is called by:
  6297 ;;		_I2C_Write2ByteRegister
  6298 ;;		_I2C_DO_TX
  6299 ;;		_I2C_DO_RX
  6300 ;;		_I2C_DO_TX_EMPTY
  6301 ;;		_I2C_DO_ADDRESS_NACK
  6302 ;;		_I2C_DO_RX_EMPTY
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text67
  6307  002274                     __ptext67:
  6308                           	callstack 0
  6309  002274                     _wr2RegCompleteHandler:
  6310                           	callstack 17
  6311  002274                     
  6312                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  6313  002274  C00E  F005         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6314  002278  C00F  F006         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6315  00227C  0E00               	movlw	0
  6316  00227E  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6317  002280  0E02               	movlw	2
  6318  002282  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  6319  002284  EC8F  F011         	call	_I2C_SetBuffer	;wreg free
  6320  002288                     
  6321                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6322  002288  0E00               	movlw	0
  6323  00228A  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6324  00228C  0E00               	movlw	0
  6325  00228E  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6326  002290  0E00               	movlw	0
  6327  002292  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6328  002294  0E00               	movlw	0
  6329  002296  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6330  002298  ECDD  F011         	call	_I2C_SetDataCompleteCallback	;wreg free
  6331  00229C                     
  6332                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  6333  00229C  0E04               	movlw	4
  6334  00229E  0012               	return		;funcret
  6335  0022A0                     __end_of_wr2RegCompleteHandler:
  6336                           	callstack 0
  6337                           
  6338 ;; *************** function _I2C_SetDataCompleteCallback *****************
  6339 ;; Defined at:
  6340 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
  6343 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  6344 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6345 ;;  ptr             2   11[COMRAM] PTR void 
  6346 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6347 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;		None
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  1    wreg      void 
  6352 ;; Registers used:
  6353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6359 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6362 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6363 ;;Total ram usage:        4 bytes
  6364 ;; Hardware stack levels used: 1
  6365 ;; Hardware stack levels required when called: 5
  6366 ;; This function calls:
  6367 ;;		_I2C_SetCallback
  6368 ;; This function is called by:
  6369 ;;		_I2C_Read1ByteRegister
  6370 ;;		_I2C_Write1ByteRegister
  6371 ;;		_rd1RegCompleteHandler
  6372 ;;		_rd2RegCompleteHandler
  6373 ;;		_wr1RegCompleteHandler
  6374 ;;		_wr2RegCompleteHandler
  6375 ;;		_rdBlkRegCompleteHandler
  6376 ;;		_I2C_Read2ByteRegister
  6377 ;;		_I2C_Write2ByteRegister
  6378 ;;		_I2C_ReadDataBlock
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           	psect	text68
  6383  0023BA                     __ptext68:
  6384                           	callstack 0
  6385  0023BA                     _I2C_SetDataCompleteCallback:
  6386                           	callstack 23
  6387  0023BA                     
  6388                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  6389  0023BA  C00A  F005         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
  6390  0023BE  C00B  F006         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
  6391  0023C2  C00C  F007         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
  6392  0023C6  C00D  F008         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
  6393  0023CA  0E00               	movlw	0
  6394  0023CC  EC24  F00E         	call	_I2C_SetCallback
  6395  0023D0  0012               	return		;funcret
  6396  0023D2                     __end_of_I2C_SetDataCompleteCallback:
  6397                           	callstack 0
  6398                           
  6399 ;; *************** function _I2C_SetCallback *****************
  6400 ;; Defined at:
  6401 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;  idx             1    wreg     enum E3130
  6404 ;;  cb              2    4[COMRAM] PTR FTN(PTR void ,)enum 
  6405 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  6406 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6407 ;;  ptr             2    6[COMRAM] PTR void 
  6408 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6409 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;  idx             1    8[COMRAM] enum E3130
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  1    wreg      void 
  6414 ;; Registers used:
  6415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6421 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6424 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6425 ;;Total ram usage:        5 bytes
  6426 ;; Hardware stack levels used: 1
  6427 ;; Hardware stack levels required when called: 4
  6428 ;; This function calls:
  6429 ;;		Nothing
  6430 ;; This function is called by:
  6431 ;;		_I2C_SetDataCompleteCallback
  6432 ;;		_I2C_SetAddressNackCallback
  6433 ;;		_I2C_SetWriteCollisionCallback
  6434 ;;		_I2C_SetDataNackCallback
  6435 ;;		_I2C_SetTimeoutCallback
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           	psect	text69
  6440  001C48                     __ptext69:
  6441                           	callstack 0
  6442  001C48                     _I2C_SetCallback:
  6443                           	callstack 23
  6444                           
  6445                           ;incstack = 0
  6446                           ;I2C_SetCallback@idx stored from wreg
  6447  001C48  6E09               	movwf	I2C_SetCallback@idx^0,c
  6448  001C4A                     
  6449                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
  6450  001C4A  5005               	movf	I2C_SetCallback@cb^0,w,c
  6451  001C4C  1006               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
  6452  001C4E  B4D8               	btfsc	status,2,c
  6453  001C50  EF2C  F00E         	goto	u1041
  6454  001C54  EF2E  F00E         	goto	u1040
  6455  001C58                     u1041:
  6456  001C58  EF48  F00E         	goto	l2564
  6457  001C5C                     u1040:
  6458  001C5C                     
  6459                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
  6460  001C5C  5009               	movf	I2C_SetCallback@idx^0,w,c
  6461  001C5E  0D02               	mullw	2
  6462  001C60  0E60               	movlw	low _I2C_Status
  6463  001C62  24F3               	addwf	243,w,c
  6464  001C64  6ED9               	movwf	fsr2l,c
  6465  001C66  0E00               	movlw	high _I2C_Status
  6466  001C68  20F4               	addwfc	prodh,w,c
  6467  001C6A  6EDA               	movwf	fsr2h,c
  6468  001C6C  C005  FFDE         	movff	I2C_SetCallback@cb,postinc2
  6469  001C70  C006  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
  6470                           
  6471                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
  6472  001C74  5009               	movf	I2C_SetCallback@idx^0,w,c
  6473  001C76  0D02               	mullw	2
  6474  001C78  0E6C               	movlw	low (_I2C_Status+12)
  6475  001C7A  24F3               	addwf	243,w,c
  6476  001C7C  6ED9               	movwf	fsr2l,c
  6477  001C7E  0E00               	movlw	high (_I2C_Status+12)
  6478  001C80  20F4               	addwfc	prodh,w,c
  6479  001C82  6EDA               	movwf	fsr2h,c
  6480  001C84  C007  FFDE         	movff	I2C_SetCallback@ptr,postinc2
  6481  001C88  C008  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
  6482                           
  6483                           ;mcc_generated_files/i2c_master.c: 304:     }
  6484  001C8C  EF60  F00E         	goto	l256
  6485  001C90                     l2564:
  6486                           
  6487                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  6488  001C90  5009               	movf	I2C_SetCallback@idx^0,w,c
  6489  001C92  0D02               	mullw	2
  6490  001C94  0E60               	movlw	low _I2C_Status
  6491  001C96  24F3               	addwf	243,w,c
  6492  001C98  6ED9               	movwf	fsr2l,c
  6493  001C9A  0E00               	movlw	high _I2C_Status
  6494  001C9C  20F4               	addwfc	prodh,w,c
  6495  001C9E  6EDA               	movwf	fsr2h,c
  6496  001CA0  0E34               	movlw	low _I2C_CallbackReturnStop
  6497  001CA2  6EDE               	movwf	postinc2,c
  6498  001CA4  0E25               	movlw	high _I2C_CallbackReturnStop
  6499  001CA6  6EDD               	movwf	postdec2,c
  6500                           
  6501                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  6502  001CA8  5009               	movf	I2C_SetCallback@idx^0,w,c
  6503  001CAA  0D02               	mullw	2
  6504  001CAC  0E6C               	movlw	low (_I2C_Status+12)
  6505  001CAE  24F3               	addwf	243,w,c
  6506  001CB0  6ED9               	movwf	fsr2l,c
  6507  001CB2  0E00               	movlw	high (_I2C_Status+12)
  6508  001CB4  20F4               	addwfc	prodh,w,c
  6509  001CB6  6EDA               	movwf	fsr2h,c
  6510  001CB8  0E00               	movlw	0
  6511  001CBA  6EDE               	movwf	postinc2,c
  6512  001CBC  0E00               	movlw	0
  6513  001CBE  6EDD               	movwf	postdec2,c
  6514  001CC0                     l256:
  6515  001CC0  0012               	return		;funcret
  6516  001CC2                     __end_of_I2C_SetCallback:
  6517                           	callstack 0
  6518                           
  6519 ;; *************** function _I2C_SetBuffer *****************
  6520 ;; Defined at:
  6521 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;  buffer          2    4[COMRAM] PTR void 
  6524 ;;		 -> I2C_Read1ByteRegister@returnValue.data(3), I2C_Read2ByteRegister@returnValue.data(3), I2C_Write1ByteRegister@dat
      +a.data(3), I2C_Write2ByteRegister@data.data(3), 
  6525 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), bufferBlock.data(3), I2C_Write2ByteRegister@reg(1), 
  6526 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
  6527 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1
      +), 
  6528 ;;  bufferSize      2    6[COMRAM] unsigned int 
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;		None
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  1    wreg      void 
  6533 ;; Registers used:
  6534 ;;		wreg, status,2, status,0
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6543 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6544 ;;Total ram usage:        4 bytes
  6545 ;; Hardware stack levels used: 1
  6546 ;; Hardware stack levels required when called: 4
  6547 ;; This function calls:
  6548 ;;		Nothing
  6549 ;; This function is called by:
  6550 ;;		_I2C_Read1ByteRegister
  6551 ;;		_I2C_Write1ByteRegister
  6552 ;;		_rd1RegCompleteHandler
  6553 ;;		_rd2RegCompleteHandler
  6554 ;;		_wr1RegCompleteHandler
  6555 ;;		_wr2RegCompleteHandler
  6556 ;;		_rdBlkRegCompleteHandler
  6557 ;;		_I2C_Read2ByteRegister
  6558 ;;		_I2C_Write2ByteRegister
  6559 ;;		_I2C_WriteNBytes
  6560 ;;		_I2C_ReadNBytes
  6561 ;;		_I2C_ReadDataBlock
  6562 ;; This function uses a non-reentrant model
  6563 ;;
  6564                           
  6565                           	psect	text70
  6566  00231E                     __ptext70:
  6567                           	callstack 0
  6568  00231E                     _I2C_SetBuffer:
  6569                           	callstack 24
  6570  00231E                     
  6571                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
  6572  00231E  0100               	movlb	0	; () banked
  6573  002320  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
  6574  002322  EF95  F011         	goto	u1051
  6575  002326  EF97  F011         	goto	u1050
  6576  00232A                     u1051:
  6577  00232A  EFA0  F011         	goto	l236
  6578  00232E                     u1050:
  6579  00232E                     
  6580                           ; BSR set to: 0
  6581                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
  6582  00232E  C005  F07D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
  6583  002332  C006  F07E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
  6584  002336                     
  6585                           ; BSR set to: 0
  6586                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
  6587  002336  C007  F07F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
  6588  00233A  C008  F080         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
  6589  00233E                     
  6590                           ; BSR set to: 0
  6591                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
  6592  00233E  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
  6593  002340                     l236:
  6594                           
  6595                           ; BSR set to: 0
  6596  002340  0012               	return		;funcret
  6597  002342                     __end_of_I2C_SetBuffer:
  6598                           	callstack 0
  6599                           
  6600 ;; *************** function _I2C_MasterStop *****************
  6601 ;; Defined at:
  6602 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
  6603 ;; Parameters:    Size  Location     Type
  6604 ;;		None
  6605 ;; Auto vars:     Size  Location     Type
  6606 ;;		None
  6607 ;; Return value:  Size  Location     Type
  6608 ;;                  1    wreg      void 
  6609 ;; Registers used:
  6610 ;;		None
  6611 ;; Tracked objects:
  6612 ;;		On entry : 0/0
  6613 ;;		On exit  : 0/0
  6614 ;;		Unchanged: 0/0
  6615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6620 ;;Total ram usage:        0 bytes
  6621 ;; Hardware stack levels used: 1
  6622 ;; Hardware stack levels required when called: 4
  6623 ;; This function calls:
  6624 ;;		Nothing
  6625 ;; This function is called by:
  6626 ;;		_I2C_DO_SEND_STOP
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           	psect	text71
  6631  002538                     __ptext71:
  6632                           	callstack 0
  6633  002538                     _I2C_MasterStop:
  6634                           	callstack 18
  6635  002538                     
  6636                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
  6637  002538  84C5               	bsf	197,2,c	;volatile
  6638  00253A  0012               	return		;funcret
  6639  00253C                     __end_of_I2C_MasterStop:
  6640                           	callstack 0
  6641                           
  6642 ;; *************** function _I2C_MasterEnableRestart *****************
  6643 ;; Defined at:
  6644 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;		None
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;		None
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  1    wreg      void 
  6651 ;; Registers used:
  6652 ;;		None
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;Total ram usage:        0 bytes
  6663 ;; Hardware stack levels used: 1
  6664 ;; Hardware stack levels required when called: 4
  6665 ;; This function calls:
  6666 ;;		Nothing
  6667 ;; This function is called by:
  6668 ;;		_I2C_DO_SEND_RESTART_READ
  6669 ;;		_I2C_DO_SEND_RESTART_WRITE
  6670 ;;		_I2C_DO_SEND_RESTART
  6671 ;;		_I2C_DO_RX_EMPTY
  6672 ;; This function uses a non-reentrant model
  6673 ;;
  6674                           
  6675                           	psect	text72
  6676  00253C                     __ptext72:
  6677                           	callstack 0
  6678  00253C                     _I2C_MasterEnableRestart:
  6679                           	callstack 18
  6680  00253C                     
  6681                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
  6682  00253C  82C5               	bsf	197,1,c	;volatile
  6683  00253E  0012               	return		;funcret
  6684  002540                     __end_of_I2C_MasterEnableRestart:
  6685                           	callstack 0
  6686                           
  6687 ;; *************** function _I2C_MasterStart *****************
  6688 ;; Defined at:
  6689 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;		None
  6692 ;; Auto vars:     Size  Location     Type
  6693 ;;		None
  6694 ;; Return value:  Size  Location     Type
  6695 ;;                  1    wreg      void 
  6696 ;; Registers used:
  6697 ;;		None
  6698 ;; Tracked objects:
  6699 ;;		On entry : 0/0
  6700 ;;		On exit  : 0/0
  6701 ;;		Unchanged: 0/0
  6702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6707 ;;Total ram usage:        0 bytes
  6708 ;; Hardware stack levels used: 1
  6709 ;; Hardware stack levels required when called: 4
  6710 ;; This function calls:
  6711 ;;		Nothing
  6712 ;; This function is called by:
  6713 ;;		_I2C_MasterOperation
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           	psect	text73
  6718  002540                     __ptext73:
  6719                           	callstack 0
  6720  002540                     _I2C_MasterStart:
  6721                           	callstack 22
  6722  002540                     
  6723                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
  6724  002540  80C5               	bsf	197,0,c	;volatile
  6725  002542  0012               	return		;funcret
  6726  002544                     __end_of_I2C_MasterStart:
  6727                           	callstack 0
  6728                           
  6729 ;; *************** function _I2C_Close *****************
  6730 ;; Defined at:
  6731 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;		None
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;  returnValue     1    4[COMRAM] enum E355
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  1    wreg      enum E355
  6738 ;; Registers used:
  6739 ;;		wreg, status,2, cstack
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6746 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6748 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6749 ;;Total ram usage:        1 bytes
  6750 ;; Hardware stack levels used: 1
  6751 ;; Hardware stack levels required when called: 5
  6752 ;; This function calls:
  6753 ;;		_I2C_MasterClearIrq
  6754 ;;		_I2C_MasterClose
  6755 ;;		_I2C_MasterDisableIrq
  6756 ;; This function is called by:
  6757 ;;		_I2C_Read1ByteRegister
  6758 ;;		_I2C_Write1ByteRegister
  6759 ;;		_I2C_Read2ByteRegister
  6760 ;;		_I2C_Write2ByteRegister
  6761 ;;		_I2C_WriteNBytes
  6762 ;;		_I2C_ReadNBytes
  6763 ;;		_I2C_ReadDataBlock
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767                           	psect	text74
  6768  0022A0                     __ptext74:
  6769                           	callstack 0
  6770  0022A0                     _I2C_Close:
  6771                           	callstack 23
  6772  0022A0                     
  6773                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
  6774  0022A0  0E01               	movlw	1
  6775  0022A2  6E05               	movwf	I2C_Close@returnValue^0,c
  6776  0022A4                     
  6777                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
  6778  0022A4  0100               	movlb	0	; () banked
  6779  0022A6  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  6780  0022A8  EF58  F011         	goto	u1501
  6781  0022AC  EF5A  F011         	goto	u1500
  6782  0022B0                     u1501:
  6783  0022B0  EF64  F011         	goto	l3116
  6784  0022B4                     u1500:
  6785  0022B4                     
  6786                           ; BSR set to: 0
  6787                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
  6788  0022B4  9583               	bcf	(_I2C_Status+35)& (0+255),2,b
  6789                           
  6790                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
  6791  0022B6  697C               	setf	(_I2C_Status+28)& (0+255),b
  6792  0022B8                     
  6793                           ; BSR set to: 0
  6794                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
  6795  0022B8  ECA6  F012         	call	_I2C_MasterClearIrq	;wreg free
  6796                           
  6797                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
  6798  0022BC  ECA2  F012         	call	_I2C_MasterDisableIrq	;wreg free
  6799                           
  6800                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
  6801  0022C0  ECA4  F012         	call	_I2C_MasterClose	;wreg free
  6802  0022C4                     
  6803                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
  6804  0022C4  C082  F005         	movff	_I2C_Status+34,I2C_Close@returnValue
  6805  0022C8                     l3116:
  6806                           
  6807                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
  6808  0022C8  5005               	movf	I2C_Close@returnValue^0,w,c
  6809  0022CA  0012               	return		;funcret
  6810  0022CC                     __end_of_I2C_Close:
  6811                           	callstack 0
  6812                           
  6813 ;; *************** function _I2C_MasterDisableIrq *****************
  6814 ;; Defined at:
  6815 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;		None
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;		None
  6820 ;; Return value:  Size  Location     Type
  6821 ;;                  1    wreg      void 
  6822 ;; Registers used:
  6823 ;;		None
  6824 ;; Tracked objects:
  6825 ;;		On entry : 0/0
  6826 ;;		On exit  : 0/0
  6827 ;;		Unchanged: 0/0
  6828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6833 ;;Total ram usage:        0 bytes
  6834 ;; Hardware stack levels used: 1
  6835 ;; Hardware stack levels required when called: 4
  6836 ;; This function calls:
  6837 ;;		Nothing
  6838 ;; This function is called by:
  6839 ;;		_I2C_Close
  6840 ;;		_I2C_SetTimeOut
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844                           	psect	text75
  6845  002544                     __ptext75:
  6846                           	callstack 0
  6847  002544                     _I2C_MasterDisableIrq:
  6848                           	callstack 23
  6849  002544                     
  6850                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
  6851  002544  969D               	bcf	157,3,c	;volatile
  6852  002546  0012               	return		;funcret
  6853  002548                     __end_of_I2C_MasterDisableIrq:
  6854                           	callstack 0
  6855                           
  6856 ;; *************** function _I2C_MasterClose *****************
  6857 ;; Defined at:
  6858 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
  6859 ;; Parameters:    Size  Location     Type
  6860 ;;		None
  6861 ;; Auto vars:     Size  Location     Type
  6862 ;;		None
  6863 ;; Return value:  Size  Location     Type
  6864 ;;                  1    wreg      void 
  6865 ;; Registers used:
  6866 ;;		None
  6867 ;; Tracked objects:
  6868 ;;		On entry : 0/0
  6869 ;;		On exit  : 0/0
  6870 ;;		Unchanged: 0/0
  6871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6876 ;;Total ram usage:        0 bytes
  6877 ;; Hardware stack levels used: 1
  6878 ;; Hardware stack levels required when called: 4
  6879 ;; This function calls:
  6880 ;;		Nothing
  6881 ;; This function is called by:
  6882 ;;		_I2C_Close
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           	psect	text76
  6887  002548                     __ptext76:
  6888                           	callstack 0
  6889  002548                     _I2C_MasterClose:
  6890                           	callstack 23
  6891  002548                     
  6892                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
  6893  002548  9AC6               	bcf	198,5,c	;volatile
  6894  00254A  0012               	return		;funcret
  6895  00254C                     __end_of_I2C_MasterClose:
  6896                           	callstack 0
  6897                           
  6898 ;; *************** function _I2C_MasterClearIrq *****************
  6899 ;; Defined at:
  6900 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;		None
  6903 ;; Auto vars:     Size  Location     Type
  6904 ;;		None
  6905 ;; Return value:  Size  Location     Type
  6906 ;;                  1    wreg      void 
  6907 ;; Registers used:
  6908 ;;		None
  6909 ;; Tracked objects:
  6910 ;;		On entry : 0/0
  6911 ;;		On exit  : 0/0
  6912 ;;		Unchanged: 0/0
  6913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6918 ;;Total ram usage:        0 bytes
  6919 ;; Hardware stack levels used: 1
  6920 ;; Hardware stack levels required when called: 4
  6921 ;; This function calls:
  6922 ;;		Nothing
  6923 ;; This function is called by:
  6924 ;;		_I2C_Open
  6925 ;;		_I2C_Close
  6926 ;;		_I2C_MasterFsm
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           
  6930                           	psect	text77
  6931  00254C                     __ptext77:
  6932                           	callstack 0
  6933  00254C                     _I2C_MasterClearIrq:
  6934                           	callstack 23
  6935  00254C                     
  6936                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
  6937  00254C  969E               	bcf	158,3,c	;volatile
  6938  00254E  0012               	return		;funcret
  6939  002550                     __end_of_I2C_MasterClearIrq:
  6940                           	callstack 0
  6941                           
  6942 ;; *************** function _INTERRUPT_InterruptManager *****************
  6943 ;; Defined at:
  6944 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;		None
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;		None
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  1    wreg      void 
  6951 ;; Registers used:
  6952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6960 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6961 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6962 ;;Total ram usage:        4 bytes
  6963 ;; Hardware stack levels used: 1
  6964 ;; Hardware stack levels required when called: 3
  6965 ;; This function calls:
  6966 ;;		Absolute function
  6967 ;;		_EUSART_Receive_ISR
  6968 ;;		_EUSART_Transmit_ISR
  6969 ;; This function is called by:
  6970 ;;		Interrupt level 2
  6971 ;; This function uses a non-reentrant model
  6972 ;;
  6973                           
  6974                           	psect	intcode
  6975  000008                     __pintcode:
  6976                           	callstack 0
  6977  000008                     _INTERRUPT_InterruptManager:
  6978                           	callstack 16
  6979                           
  6980                           ;incstack = 0
  6981  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6982  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  6983  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6984  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  6985  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  6986  00001A                     
  6987                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  6988  00001A  ACF2               	btfss	242,6,c	;volatile
  6989  00001C  EF12  F000         	goto	i2u199_41
  6990  000020  EF14  F000         	goto	i2u199_40
  6991  000024                     i2u199_41:
  6992  000024  EF4E  F000         	goto	i2l671
  6993  000028                     i2u199_40:
  6994  000028                     
  6995                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  6996  000028  A89D               	btfss	157,4,c	;volatile
  6997  00002A  EF19  F000         	goto	i2u200_41
  6998  00002E  EF1B  F000         	goto	i2u200_40
  6999  000032                     i2u200_41:
  7000  000032  EF31  F000         	goto	i2l666
  7001  000036                     i2u200_40:
  7002  000036  A89E               	btfss	158,4,c	;volatile
  7003  000038  EF20  F000         	goto	i2u201_41
  7004  00003C  EF22  F000         	goto	i2u201_40
  7005  000040                     i2u201_41:
  7006  000040  EF31  F000         	goto	i2l666
  7007  000044                     i2u201_40:
  7008  000044                     
  7009                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART_TxDefaultInterruptHandler();
  7010  000044  D802               	call	i2u202_48
  7011  000046  EF2F  F000         	goto	i2u202_49
  7012  00004A                     i2u202_48:
  7013  00004A  0005               	push	
  7014  00004C  6EFA               	movwf	pclath,c
  7015  00004E  0100               	movlb	0	; () banked
  7016  000050  51EB               	movf	_EUSART_TxDefaultInterruptHandler& (0+255),w,b
  7017  000052  6EFD               	movwf	tosl,c
  7018  000054  51EC               	movf	(_EUSART_TxDefaultInterruptHandler+1)& (0+255),w,b
  7019  000056  6EFE               	movwf	tosh,c
  7020  000058  6AFF               	clrf	tosu,c
  7021  00005A  50FA               	movf	pclath,w,c
  7022  00005C  0012               	return		;indir
  7023  00005E                     i2u202_49:
  7024                           
  7025                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  7026  00005E  EF4E  F000         	goto	i2l671
  7027  000062                     i2l666:
  7028  000062  AA9D               	btfss	157,5,c	;volatile
  7029  000064  EF36  F000         	goto	i2u203_41
  7030  000068  EF38  F000         	goto	i2u203_40
  7031  00006C                     i2u203_41:
  7032  00006C  EF4E  F000         	goto	i2l667
  7033  000070                     i2u203_40:
  7034  000070  AA9E               	btfss	158,5,c	;volatile
  7035  000072  EF3D  F000         	goto	i2u204_41
  7036  000076  EF3F  F000         	goto	i2u204_40
  7037  00007A                     i2u204_41:
  7038  00007A  EF4E  F000         	goto	i2l667
  7039  00007E                     i2u204_40:
  7040  00007E                     
  7041                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART_RxDefaultInterruptHandler();
  7042  00007E  D802               	call	i2u205_48
  7043  000080  EF4C  F000         	goto	i2u205_49
  7044  000084                     i2u205_48:
  7045  000084  0005               	push	
  7046  000086  6EFA               	movwf	pclath,c
  7047  000088  0100               	movlb	0	; () banked
  7048  00008A  51E9               	movf	_EUSART_RxDefaultInterruptHandler& (0+255),w,b
  7049  00008C  6EFD               	movwf	tosl,c
  7050  00008E  51EA               	movf	(_EUSART_RxDefaultInterruptHandler+1)& (0+255),w,b
  7051  000090  6EFE               	movwf	tosh,c
  7052  000092  6AFF               	clrf	tosu,c
  7053  000094  50FA               	movf	pclath,w,c
  7054  000096  0012               	return		;indir
  7055  000098                     i2u205_49:
  7056                           
  7057                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  7058  000098  EF4E  F000         	goto	i2l671
  7059  00009C                     i2l667:
  7060  00009C                     i2l671:
  7061  00009C  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  7062  0000A0  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  7063  0000A4  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  7064  0000A8  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  7065  0000AC  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7066  0000AE  0011               	retfie		f
  7067  0000B0                     __end_of_INTERRUPT_InterruptManager:
  7068                           	callstack 0
  7069                           
  7070 ;; *************** function _EUSART_Transmit_ISR *****************
  7071 ;; Defined at:
  7072 ;;		line 206 in file "mcc_generated_files/eusart.c"
  7073 ;; Parameters:    Size  Location     Type
  7074 ;;		None
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;		None
  7077 ;; Return value:  Size  Location     Type
  7078 ;;                  1    wreg      void 
  7079 ;; Registers used:
  7080 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7090 ;;Total ram usage:        0 bytes
  7091 ;; Hardware stack levels used: 1
  7092 ;; This function calls:
  7093 ;;		Nothing
  7094 ;; This function is called by:
  7095 ;;		_EUSART_Initialize
  7096 ;;		_INTERRUPT_InterruptManager
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           	psect	text79
  7101  00209A                     __ptext79:
  7102                           	callstack 0
  7103  00209A                     _EUSART_Transmit_ISR:
  7104                           	callstack 18
  7105  00209A                     
  7106                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  7107  00209A  0E08               	movlw	8
  7108  00209C  0100               	movlb	0	; () banked
  7109  00209E  61ED               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
  7110  0020A0  EF54  F010         	goto	i2u178_41
  7111  0020A4  EF56  F010         	goto	i2u178_40
  7112  0020A8                     i2u178_41:
  7113  0020A8  EF6C  F010         	goto	i2l607
  7114  0020AC                     i2u178_40:
  7115  0020AC                     
  7116                           ; BSR set to: 0
  7117                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  7118  0020AC  0E9E               	movlw	low _eusartTxBuffer
  7119  0020AE  2459               	addwf	_eusartTxTail^0,w,c	;volatile
  7120  0020B0  6ED9               	movwf	fsr2l,c
  7121  0020B2  6ADA               	clrf	fsr2h,c
  7122  0020B4  0E00               	movlw	high _eusartTxBuffer
  7123  0020B6  22DA               	addwfc	fsr2h,f,c
  7124  0020B8  50DF               	movf	indf2,w,c
  7125  0020BA  6EAD               	movwf	173,c	;volatile
  7126  0020BC                     
  7127                           ; BSR set to: 0
  7128  0020BC  2A59               	incf	_eusartTxTail^0,f,c	;volatile
  7129  0020BE                     
  7130                           ; BSR set to: 0
  7131                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  7132  0020BE  0E07               	movlw	7
  7133  0020C0  6459               	cpfsgt	_eusartTxTail^0,c	;volatile
  7134  0020C2  EF65  F010         	goto	i2u179_41
  7135  0020C6  EF67  F010         	goto	i2u179_40
  7136  0020CA                     i2u179_41:
  7137  0020CA  EF69  F010         	goto	i2l3376
  7138  0020CE                     i2u179_40:
  7139  0020CE                     
  7140                           ; BSR set to: 0
  7141                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
  7142  0020CE  0E00               	movlw	0
  7143  0020D0  6E59               	movwf	_eusartTxTail^0,c	;volatile
  7144  0020D2                     i2l3376:
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
  7148  0020D2  2BED               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  7149                           
  7150                           ;mcc_generated_files/eusart.c: 218:     }
  7151  0020D4  EF6D  F010         	goto	i2l610
  7152  0020D8                     i2l607:
  7153                           
  7154                           ; BSR set to: 0
  7155                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TX1IE = 0;
  7156  0020D8  989D               	bcf	157,4,c	;volatile
  7157  0020DA                     i2l610:
  7158                           
  7159                           ; BSR set to: 0
  7160  0020DA  0012               	return		;funcret
  7161  0020DC                     __end_of_EUSART_Transmit_ISR:
  7162                           	callstack 0
  7163                           
  7164 ;; *************** function _EUSART_Receive_ISR *****************
  7165 ;; Defined at:
  7166 ;;		line 225 in file "mcc_generated_files/eusart.c"
  7167 ;; Parameters:    Size  Location     Type
  7168 ;;		None
  7169 ;; Auto vars:     Size  Location     Type
  7170 ;;		None
  7171 ;; Return value:  Size  Location     Type
  7172 ;;                  1    wreg      void 
  7173 ;; Registers used:
  7174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7175 ;; Tracked objects:
  7176 ;;		On entry : 0/0
  7177 ;;		On exit  : 0/0
  7178 ;;		Unchanged: 0/0
  7179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7184 ;;Total ram usage:        0 bytes
  7185 ;; Hardware stack levels used: 1
  7186 ;; Hardware stack levels required when called: 2
  7187 ;; This function calls:
  7188 ;;		Absolute function
  7189 ;;		_EUSART_DefaultErrorHandler
  7190 ;;		_EUSART_DefaultFramingErrorHandler
  7191 ;;		_EUSART_DefaultOverrunErrorHandler
  7192 ;;		_EUSART_RxDataHandler
  7193 ;; This function is called by:
  7194 ;;		_EUSART_Initialize
  7195 ;;		_INTERRUPT_InterruptManager
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199                           	psect	text80
  7200  001946                     __ptext80:
  7201                           	callstack 0
  7202  001946                     _EUSART_Receive_ISR:
  7203                           	callstack 16
  7204  001946                     
  7205                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  7206  001946  0E8E               	movlw	low _eusartRxStatusBuffer
  7207  001948  2458               	addwf	_eusartRxHead^0,w,c	;volatile
  7208  00194A  6ED9               	movwf	fsr2l,c
  7209  00194C  6ADA               	clrf	fsr2h,c
  7210  00194E  0E00               	movlw	high _eusartRxStatusBuffer
  7211  001950  22DA               	addwfc	fsr2h,f,c
  7212  001952  0E00               	movlw	0
  7213  001954  6EDF               	movwf	indf2,c
  7214  001956                     
  7215                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
  7216  001956  A4AB               	btfss	171,2,c	;volatile
  7217  001958  EFB0  F00C         	goto	i2u180_41
  7218  00195C  EFB2  F00C         	goto	i2u180_40
  7219  001960                     i2u180_41:
  7220  001960  EFC6  F00C         	goto	i2l3386
  7221  001964                     i2u180_40:
  7222  001964                     
  7223                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  7224  001964  0E8E               	movlw	low _eusartRxStatusBuffer
  7225  001966  2458               	addwf	_eusartRxHead^0,w,c	;volatile
  7226  001968  6ED9               	movwf	fsr2l,c
  7227  00196A  6ADA               	clrf	fsr2h,c
  7228  00196C  0E00               	movlw	high _eusartRxStatusBuffer
  7229  00196E  22DA               	addwfc	fsr2h,f,c
  7230  001970  0100               	movlb	0	; () banked
  7231  001972  82DF               	bsf	indf2,1,c
  7232  001974                     
  7233                           ; BSR set to: 0
  7234                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
  7235  001974  D802               	call	i2u181_48
  7236  001976  EFC6  F00C         	goto	i2u181_49
  7237  00197A                     i2u181_48:
  7238  00197A  0005               	push	
  7239  00197C  6EFA               	movwf	pclath,c
  7240  00197E  51E7               	movf	_EUSART_FramingErrorHandler& (0+255),w,b
  7241  001980  6EFD               	movwf	tosl,c
  7242  001982  51E8               	movf	(_EUSART_FramingErrorHandler+1)& (0+255),w,b
  7243  001984  6EFE               	movwf	tosh,c
  7244  001986  6AFF               	clrf	tosu,c
  7245  001988  50FA               	movf	pclath,w,c
  7246  00198A  0012               	return		;indir
  7247  00198C                     i2u181_49:
  7248  00198C                     i2l3386:
  7249                           
  7250                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
  7251  00198C  A2AB               	btfss	171,1,c	;volatile
  7252  00198E  EFCB  F00C         	goto	i2u182_41
  7253  001992  EFCD  F00C         	goto	i2u182_40
  7254  001996                     i2u182_41:
  7255  001996  EFE1  F00C         	goto	i2l3392
  7256  00199A                     i2u182_40:
  7257  00199A                     
  7258                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  7259  00199A  0E8E               	movlw	low _eusartRxStatusBuffer
  7260  00199C  2458               	addwf	_eusartRxHead^0,w,c	;volatile
  7261  00199E  6ED9               	movwf	fsr2l,c
  7262  0019A0  6ADA               	clrf	fsr2h,c
  7263  0019A2  0E00               	movlw	high _eusartRxStatusBuffer
  7264  0019A4  22DA               	addwfc	fsr2h,f,c
  7265  0019A6  0100               	movlb	0	; () banked
  7266  0019A8  84DF               	bsf	indf2,2,c
  7267  0019AA                     
  7268                           ; BSR set to: 0
  7269                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
  7270  0019AA  D802               	call	i2u183_48
  7271  0019AC  EFE1  F00C         	goto	i2u183_49
  7272  0019B0                     i2u183_48:
  7273  0019B0  0005               	push	
  7274  0019B2  6EFA               	movwf	pclath,c
  7275  0019B4  51E5               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
  7276  0019B6  6EFD               	movwf	tosl,c
  7277  0019B8  51E6               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
  7278  0019BA  6EFE               	movwf	tosh,c
  7279  0019BC  6AFF               	clrf	tosu,c
  7280  0019BE  50FA               	movf	pclath,w,c
  7281  0019C0  0012               	return		;indir
  7282  0019C2                     i2u183_49:
  7283  0019C2                     i2l3392:
  7284                           
  7285                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
  7286  0019C2  0E8E               	movlw	low _eusartRxStatusBuffer
  7287  0019C4  2458               	addwf	_eusartRxHead^0,w,c	;volatile
  7288  0019C6  6ED9               	movwf	fsr2l,c
  7289  0019C8  6ADA               	clrf	fsr2h,c
  7290  0019CA  0E00               	movlw	high _eusartRxStatusBuffer
  7291  0019CC  22DA               	addwfc	fsr2h,f,c
  7292  0019CE  50DF               	movf	indf2,w,c
  7293  0019D0  B4D8               	btfsc	status,2,c
  7294  0019D2  EFED  F00C         	goto	i2u184_41
  7295  0019D6  EFEF  F00C         	goto	i2u184_40
  7296  0019DA                     i2u184_41:
  7297  0019DA  EFFE  F00C         	goto	i2l3396
  7298  0019DE                     i2u184_40:
  7299  0019DE                     
  7300                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
  7301  0019DE  D802               	call	i2u185_48
  7302  0019E0  EFFC  F00C         	goto	i2u185_49
  7303  0019E4                     i2u185_48:
  7304  0019E4  0005               	push	
  7305  0019E6  6EFA               	movwf	pclath,c
  7306  0019E8  0100               	movlb	0	; () banked
  7307  0019EA  51E3               	movf	_EUSART_ErrorHandler& (0+255),w,b
  7308  0019EC  6EFD               	movwf	tosl,c
  7309  0019EE  51E4               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
  7310  0019F0  6EFE               	movwf	tosh,c
  7311  0019F2  6AFF               	clrf	tosu,c
  7312  0019F4  50FA               	movf	pclath,w,c
  7313  0019F6  0012               	return		;indir
  7314  0019F8                     i2u185_49:
  7315                           
  7316                           ;mcc_generated_files/eusart.c: 242:     } else {
  7317  0019F8  EF00  F00D         	goto	i2l617
  7318  0019FC                     i2l3396:
  7319                           
  7320                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
  7321  0019FC  EC66  F011         	call	_EUSART_RxDataHandler	;wreg free
  7322  001A00                     i2l617:
  7323  001A00  0012               	return		;funcret
  7324  001A02                     __end_of_EUSART_Receive_ISR:
  7325                           	callstack 0
  7326                           
  7327 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  7328 ;; Defined at:
  7329 ;;		line 261 in file "mcc_generated_files/eusart.c"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;		None
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;		None
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  1    wreg      void 
  7336 ;; Registers used:
  7337 ;;		None
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7347 ;;Total ram usage:        0 bytes
  7348 ;; Hardware stack levels used: 1
  7349 ;; This function calls:
  7350 ;;		Nothing
  7351 ;; This function is called by:
  7352 ;;		_EUSART_Initialize
  7353 ;;		_EUSART_Receive_ISR
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           	psect	text81
  7358  002514                     __ptext81:
  7359                           	callstack 0
  7360  002514                     _EUSART_DefaultOverrunErrorHandler:
  7361                           	callstack 17
  7362  002514                     
  7363                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
  7364  002514  98AB               	bcf	171,4,c	;volatile
  7365                           
  7366                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
  7367  002516  88AB               	bsf	171,4,c	;volatile
  7368  002518  0012               	return		;funcret
  7369  00251A                     __end_of_EUSART_DefaultOverrunErrorHandler:
  7370                           	callstack 0
  7371                           
  7372 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  7373 ;; Defined at:
  7374 ;;		line 259 in file "mcc_generated_files/eusart.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;		None
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;		None
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  1    wreg      void 
  7381 ;; Registers used:
  7382 ;;		None
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7392 ;;Total ram usage:        0 bytes
  7393 ;; Hardware stack levels used: 1
  7394 ;; This function calls:
  7395 ;;		Nothing
  7396 ;; This function is called by:
  7397 ;;		_EUSART_Initialize
  7398 ;;		_EUSART_Receive_ISR
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           	psect	text82
  7403  002550                     __ptext82:
  7404                           	callstack 0
  7405  002550                     _EUSART_DefaultFramingErrorHandler:
  7406                           	callstack 17
  7407  002550  0012               	return		;funcret
  7408  002552                     __end_of_EUSART_DefaultFramingErrorHandler:
  7409                           	callstack 0
  7410                           
  7411 ;; *************** function _EUSART_DefaultErrorHandler *****************
  7412 ;; Defined at:
  7413 ;;		line 269 in file "mcc_generated_files/eusart.c"
  7414 ;; Parameters:    Size  Location     Type
  7415 ;;		None
  7416 ;; Auto vars:     Size  Location     Type
  7417 ;;		None
  7418 ;; Return value:  Size  Location     Type
  7419 ;;                  1    wreg      void 
  7420 ;; Registers used:
  7421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7422 ;; Tracked objects:
  7423 ;;		On entry : 0/0
  7424 ;;		On exit  : 0/0
  7425 ;;		Unchanged: 0/0
  7426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;Total ram usage:        0 bytes
  7432 ;; Hardware stack levels used: 1
  7433 ;; Hardware stack levels required when called: 1
  7434 ;; This function calls:
  7435 ;;		_EUSART_RxDataHandler
  7436 ;; This function is called by:
  7437 ;;		_EUSART_Initialize
  7438 ;;		_EUSART_Receive_ISR
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text83
  7443  00251A                     __ptext83:
  7444                           	callstack 0
  7445  00251A                     _EUSART_DefaultErrorHandler:
  7446                           	callstack 16
  7447  00251A                     
  7448                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
  7449  00251A  EC66  F011         	call	_EUSART_RxDataHandler	;wreg free
  7450  00251E  0012               	return		;funcret
  7451  002520                     __end_of_EUSART_DefaultErrorHandler:
  7452                           	callstack 0
  7453                           
  7454 ;; *************** function _EUSART_RxDataHandler *****************
  7455 ;; Defined at:
  7456 ;;		line 249 in file "mcc_generated_files/eusart.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;		None
  7459 ;; Auto vars:     Size  Location     Type
  7460 ;;		None
  7461 ;; Return value:  Size  Location     Type
  7462 ;;                  1    wreg      void 
  7463 ;; Registers used:
  7464 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7465 ;; Tracked objects:
  7466 ;;		On entry : 0/0
  7467 ;;		On exit  : 0/0
  7468 ;;		Unchanged: 0/0
  7469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7474 ;;Total ram usage:        0 bytes
  7475 ;; Hardware stack levels used: 1
  7476 ;; This function calls:
  7477 ;;		Nothing
  7478 ;; This function is called by:
  7479 ;;		_EUSART_Receive_ISR
  7480 ;;		_EUSART_DefaultErrorHandler
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           	psect	text84
  7485  0022CC                     __ptext84:
  7486                           	callstack 0
  7487  0022CC                     _EUSART_RxDataHandler:
  7488                           	callstack 17
  7489  0022CC                     
  7490                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
  7491  0022CC  0E96               	movlw	low _eusartRxBuffer
  7492  0022CE  2458               	addwf	_eusartRxHead^0,w,c	;volatile
  7493  0022D0  6ED9               	movwf	fsr2l,c
  7494  0022D2  6ADA               	clrf	fsr2h,c
  7495  0022D4  0E00               	movlw	high _eusartRxBuffer
  7496  0022D6  22DA               	addwfc	fsr2h,f,c
  7497  0022D8  CFAE FFDF          	movff	4014,indf2	;volatile
  7498  0022DC  2A58               	incf	_eusartRxHead^0,f,c	;volatile
  7499  0022DE                     
  7500                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  7501  0022DE  0E07               	movlw	7
  7502  0022E0  6458               	cpfsgt	_eusartRxHead^0,c	;volatile
  7503  0022E2  EF75  F011         	goto	i2u168_41
  7504  0022E6  EF77  F011         	goto	i2u168_40
  7505  0022EA                     i2u168_41:
  7506  0022EA  EF79  F011         	goto	i2l3214
  7507  0022EE                     i2u168_40:
  7508  0022EE                     
  7509                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
  7510  0022EE  0E00               	movlw	0
  7511  0022F0  6E58               	movwf	_eusartRxHead^0,c	;volatile
  7512  0022F2                     i2l3214:
  7513                           
  7514                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
  7515  0022F2  2A56               	incf	_eusartRxCount^0,f,c	;volatile
  7516  0022F4  0012               	return		;funcret
  7517  0022F6                     __end_of_EUSART_RxDataHandler:
  7518                           	callstack 0
  7519                           
  7520                           	psect	text85
  7521  000000                     __ptext85:
  7522                           	callstack 0
  7523  000000                     
  7524                           	psect	rparam
  7525  0000                     
  7526                           	psect	temp
  7527  00005B                     btemp:
  7528                           	callstack 0
  7529  00005B                     	ds	1
  7530  0000                     int$flags	set	btemp
  7531  0000                     wtemp8	set	btemp+1
  7532  0000                     ttemp5	set	btemp+1
  7533  0000                     ttemp6	set	btemp+4
  7534  0000                     ttemp7	set	btemp+8
  7535                           
  7536                           	psect	idloc
  7537                           
  7538                           ;Config register IDLOC0 @ 0x200000
  7539                           ;	unspecified, using default values
  7540  200000                     	org	2097152
  7541  200000  FF                 	db	255
  7542                           
  7543                           ;Config register IDLOC1 @ 0x200001
  7544                           ;	unspecified, using default values
  7545  200001                     	org	2097153
  7546  200001  FF                 	db	255
  7547                           
  7548                           ;Config register IDLOC2 @ 0x200002
  7549                           ;	unspecified, using default values
  7550  200002                     	org	2097154
  7551  200002  FF                 	db	255
  7552                           
  7553                           ;Config register IDLOC3 @ 0x200003
  7554                           ;	unspecified, using default values
  7555  200003                     	org	2097155
  7556  200003  FF                 	db	255
  7557                           
  7558                           ;Config register IDLOC4 @ 0x200004
  7559                           ;	unspecified, using default values
  7560  200004                     	org	2097156
  7561  200004  FF                 	db	255
  7562                           
  7563                           ;Config register IDLOC5 @ 0x200005
  7564                           ;	unspecified, using default values
  7565  200005                     	org	2097157
  7566  200005  FF                 	db	255
  7567                           
  7568                           ;Config register IDLOC6 @ 0x200006
  7569                           ;	unspecified, using default values
  7570  200006                     	org	2097158
  7571  200006  FF                 	db	255
  7572                           
  7573                           ;Config register IDLOC7 @ 0x200007
  7574                           ;	unspecified, using default values
  7575  200007                     	org	2097159
  7576  200007  FF                 	db	255
  7577                           
  7578                           	psect	config
  7579                           
  7580                           ; Padding undefined space
  7581  300000                     	org	3145728
  7582  300000  FF                 	db	255
  7583                           
  7584                           ;Config register CONFIG1H @ 0x300001
  7585                           ;	Oscillator Selection bits
  7586                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  7587                           ;	Fail-Safe Clock Monitor Enable bit
  7588                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7589                           ;	Internal/External Oscillator Switchover bit
  7590                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7591  300001                     	org	3145729
  7592  300001  08                 	db	8
  7593                           
  7594                           ;Config register CONFIG2L @ 0x300002
  7595                           ;	Power-up Timer Enable bit
  7596                           ;	PWRT = OFF, PWRT disabled
  7597                           ;	Brown-out Reset Enable bits
  7598                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7599                           ;	Brown Out Reset Voltage bits
  7600                           ;	BORV = 18, VBOR set to 1.8 V nominal
  7601  300002                     	org	3145730
  7602  300002  1F                 	db	31
  7603                           
  7604                           ;Config register CONFIG2H @ 0x300003
  7605                           ;	Watchdog Timer Enable bit
  7606                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  7607                           ;	Watchdog Timer Postscale Select bits
  7608                           ;	WDTPS = 32768, 1:32768
  7609  300003                     	org	3145731
  7610  300003  1E                 	db	30
  7611                           
  7612                           ; Padding undefined space
  7613  300004                     	org	3145732
  7614  300004  FF                 	db	255
  7615                           
  7616                           ;Config register CONFIG3H @ 0x300005
  7617                           ;	CCP2 MUX bit
  7618                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7619                           ;	PORTB A/D Enable bit
  7620                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  7621                           ;	Low-Power Timer1 Oscillator Enable bit
  7622                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7623                           ;	HFINTOSC Fast Start-up
  7624                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  7625                           ;	MCLR Pin Enable bit
  7626                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  7627  300005                     	org	3145733
  7628  300005  0B                 	db	11
  7629                           
  7630                           ;Config register CONFIG4L @ 0x300006
  7631                           ;	Stack Full/Underflow Reset Enable bit
  7632                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7633                           ;	Single-Supply ICSP Enable bit
  7634                           ;	LVP = OFF, Single-Supply ICSP disabled
  7635                           ;	Extended Instruction Set Enable bit
  7636                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7637                           ;	Background Debugger Enable bit
  7638                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  7639  300006                     	org	3145734
  7640  300006  81                 	db	129
  7641                           
  7642                           ; Padding undefined space
  7643  300007                     	org	3145735
  7644  300007  FF                 	db	255
  7645                           
  7646                           ;Config register CONFIG5L @ 0x300008
  7647                           ;	Code Protection Block 0
  7648                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7649                           ;	Code Protection Block 1
  7650                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7651                           ;	Code Protection Block 2
  7652                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7653                           ;	Code Protection Block 3
  7654                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7655  300008                     	org	3145736
  7656  300008  0F                 	db	15
  7657                           
  7658                           ;Config register CONFIG5H @ 0x300009
  7659                           ;	Boot Block Code Protection bit
  7660                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7661                           ;	Data EEPROM Code Protection bit
  7662                           ;	CPD = OFF, Data EEPROM not code-protected
  7663  300009                     	org	3145737
  7664  300009  C0                 	db	192
  7665                           
  7666                           ;Config register CONFIG6L @ 0x30000A
  7667                           ;	Write Protection Block 0
  7668                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7669                           ;	Write Protection Block 1
  7670                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7671                           ;	Write Protection Block 2
  7672                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7673                           ;	Write Protection Block 3
  7674                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  7675  30000A                     	org	3145738
  7676  30000A  0F                 	db	15
  7677                           
  7678                           ;Config register CONFIG6H @ 0x30000B
  7679                           ;	Configuration Register Write Protection bit
  7680                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7681                           ;	Boot Block Write Protection bit
  7682                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7683                           ;	Data EEPROM Write Protection bit
  7684                           ;	WRTD = OFF, Data EEPROM not write-protected
  7685  30000B                     	org	3145739
  7686  30000B  E0                 	db	224
  7687                           
  7688                           ;Config register CONFIG7L @ 0x30000C
  7689                           ;	Table Read Protection Block 0
  7690                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7691                           ;	Table Read Protection Block 1
  7692                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7693                           ;	Table Read Protection Block 2
  7694                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7695                           ;	Table Read Protection Block 3
  7696                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7697  30000C                     	org	3145740
  7698  30000C  0F                 	db	15
  7699                           
  7700                           ;Config register CONFIG7H @ 0x30000D
  7701                           ;	Boot Block Table Read Protection bit
  7702                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7703  30000D                     	org	3145741
  7704  30000D  40                 	db	64
  7705                           tosu	equ	0xFFF
  7706                           tosh	equ	0xFFE
  7707                           tosl	equ	0xFFD
  7708                           stkptr	equ	0xFFC
  7709                           pclatu	equ	0xFFB
  7710                           pclath	equ	0xFFA
  7711                           pcl	equ	0xFF9
  7712                           tblptru	equ	0xFF8
  7713                           tblptrh	equ	0xFF7
  7714                           tblptrl	equ	0xFF6
  7715                           tablat	equ	0xFF5
  7716                           prodh	equ	0xFF4
  7717                           prodl	equ	0xFF3
  7718                           indf0	equ	0xFEF
  7719                           postinc0	equ	0xFEE
  7720                           postdec0	equ	0xFED
  7721                           preinc0	equ	0xFEC
  7722                           plusw0	equ	0xFEB
  7723                           fsr0h	equ	0xFEA
  7724                           fsr0l	equ	0xFE9
  7725                           wreg	equ	0xFE8
  7726                           indf1	equ	0xFE7
  7727                           postinc1	equ	0xFE6
  7728                           postdec1	equ	0xFE5
  7729                           preinc1	equ	0xFE4
  7730                           plusw1	equ	0xFE3
  7731                           fsr1h	equ	0xFE2
  7732                           fsr1l	equ	0xFE1
  7733                           bsr	equ	0xFE0
  7734                           indf2	equ	0xFDF
  7735                           postinc2	equ	0xFDE
  7736                           postdec2	equ	0xFDD
  7737                           preinc2	equ	0xFDC
  7738                           plusw2	equ	0xFDB
  7739                           fsr2h	equ	0xFDA
  7740                           fsr2l	equ	0xFD9
  7741                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    32
    Data        0
    BSS         120
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      90
    BANK0           160     16     142
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2373$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2379$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2385$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$2391$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2390	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2385	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$2384	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2379	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$2378	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$2373	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2372	const PTR FTN()enum E3112 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1978$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1978$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue.data(COMRAM[3]), I2C_Read2ByteRegister@returnValue.data(COMRAM[3]), I2C_Write1ByteRegister@data.data(COMRAM[3]), I2C_Write2ByteRegister@data.data(COMRAM[3]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), bufferBlock.data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue.data(COMRAM[3]), I2C_Read2ByteRegister@returnValue.data(COMRAM[3]), I2C_Write1ByteRegister@data.data(COMRAM[3]), I2C_Write2ByteRegister@data.data(COMRAM[3]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), bufferBlock.data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E3112[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _AT42QT2120_sliderPosition->_I2C_Read1ByteRegister
    _AT42QT2120_enableSlider->_I2C_Write1ByteRegister
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  199183
                                             14 BANK0      2     2      0
                    _AT42QT2120_Init
          _AT42QT2120_sliderPosition
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    8102
                                              8 BANK0      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7931
                                              0 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    7458
                                             69 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _AT42QT2120_sliderPosition                            0     0      0   95307
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Read1ByteRegister                                3     2      1   95307
                                             21 COMRAM     3     2      1
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _AT42QT2120_Init                                      0     0      0   95284
            _AT42QT2120_enableSlider
 ---------------------------------------------------------------------------------
 (2) _AT42QT2120_enableSlider                              0     0      0   95284
             _I2C_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (3) _I2C_Write1ByteRegister                               3     1      2   95284
                                             21 COMRAM     3     1      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetAddressNackCallback                           4     0      4    1870
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             2     2      0      46
                                              4 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  2     2      0   88620
                                             19 COMRAM     2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (5) _I2C_Poller                                           0     0      0   88574
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        2     2      0   88574
                                             17 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            2     2      0   22149
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              2     0      2    4390
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetDataCompleteCallback                          4     0      4    2478
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetCallback                                      5     1      4     914
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        4     0      4    1868
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               2     0      2       0
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              2     0      2     265
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            1     1      0      24
                                              4 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AT42QT2120_Init
     _AT42QT2120_enableSlider
       _I2C_Write1ByteRegister
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterWrite
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                 _I2C_DO_RX_NACK_STOP *
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                   _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                   _I2C_DO_SEND_STOP *
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
         _I2C_SetDataCompleteCallback
   _AT42QT2120_sliderPosition
     _I2C_Read1ByteRegister
       _I2C_Close
       _I2C_MasterWrite
       _I2C_Open
       _I2C_SetAddressNackCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
             _strlen
         _fputc

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     10      8E       5       88.8%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      5A       1       95.7%
BITBIGSFRhhl        1D      0       0      37        0.0%
BITBIGSFRllllll     1C      0       0      49        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRlhh         C      0       0      40        0.0%
BITBIGSFRllllll      9      0       0      47        0.0%
BITBIGSFRlhll        9      0       0      42        0.0%
BITBIGSFRlhlhh       7      0       0      41        0.0%
BITBIGSFRhll         6      0       0      39        0.0%
BITBIGSFRllllhh      4      0       0      45        0.0%
BITBIGSFRllllhl      4      0       0      46        0.0%
BITBIGSFRhlh         2      0       0      38        0.0%
BITBIGSFRllh         2      0       0      43        0.0%
BITBIGSFRllllll      1      0       0      48        0.0%
BITBIGSFRlllh        1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E8      50        0.0%
DATA                 0      0      E8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Apr 07 10:39:50 2022

                ?_EUSART_SetRxInterruptHandler 0005                         ??_I2C_DO_SEND_ADR_READ 0005  
                      ??_I2C_DO_SEND_ADR_WRITE 0006                                    _SSPSTATbits 000FC7  
                                           l33 1DAA                                             l51 1E88  
                                           l90 2272                                             l93 2246  
                                           l96 221A                                             l99 229E  
                        ??_I2C_DO_SEND_RESTART 0005                                            l102 215A  
                                          l213 1BCA                                            l223 2098  
                                          l312 1C46                                            l217 22CA  
                                          l209 23FA                                            l402 253A  
                                          l306 2466                                            l330 24F8  
                                          l411 2512                                            l236 2340  
                                          l405 240E                                            l333 24F0  
                                          l229 24C0                                            l245 23B8  
                                          l342 24D8                                            l262 23A0  
                                          l239 23D0                                            l351 245A  
                                          l256 1CC0                                            l408 250C  
                                          l432 2526                                            l272 244E  
                                          l336 24E8                                            l281 1944  
                                          l345 24D0                                            l426 2546  
                                          l266 1E1A                                            l275 243E  
                                          l339 24E0                                            l435 2420  
                                          l348 24C8                                            l604 247C  
                                          l429 254E                                            l381 254A  
                                          l365 2536                                            l269 2472  
                                          l357 1F54                                            l390 253E  
                                          l278 190C                                            l294 1A38  
                                          l295 1AA6                                            l439 242E  
                                          l368 2532                                            l384 252A  
                                          l456 23E6                                            l633 24AE  
                                          l378 2362                                            l706 2506  
                                          l642 2490                                            l570 1D36  
                                          l387 2500                                            l459 2486  
                                          l396 252E                                            l716 21EE  
                                          l636 24A4                                            l660 2522  
                                          l492 21C0                                            l709 241E  
                                          l645 249A                                            l399 2542  
                                          l639 24B8                                            l850 17BA  
                                          l594 1FCE                                            l595 1FE4  
                                          l837 1656                                            l598 2010  
                                          _abs 20DC                         ??_EUSART_RxDataHandler 0001  
                                          _pad 17BC                         fp__I2C_DO_RX_NACK_STOP 0000  
                       _I2C_MasterWaitForEvent 2420                 ?_EUSART_SetFramingErrorHandler 0005  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                   ??_I2C_SetAddressNackCallback 000E  
                       _I2C_Write1ByteRegister 1E1C                       ??_I2C_CallbackReturnStop 0010  
                                 _I2C_DO_RESET 2450                                           ?_abs 0017  
                      ??_rd2RegCompleteHandler 0010                                           l1401 231C  
                                         l3100 23A2                                           l1500 2054  
                                         l3110 22B4                                           l3102 24BA  
                                         l1431 1844                                           l3112 22B8  
                                         l3200 24A6                                           l1433 1880  
                                         l1441 10D8                                           l3114 22C4  
                                         l3106 22A0                                           l3202 249C  
                                         l1506 2190                                           l3116 22C8  
                                         l3108 22A4                                           l3060 1B5A  
                                         l3052 1B40                                           l3204 24B0  
                                         l3300 1CD0                                           l1428 1802  
                                         l4030 1C20                                           l3070 1B6C  
                                         l3062 1B5C                                           l3054 1B44  
                                         l3310 1CEE                                           l3302 1CDE  
                                         l1439 10D0                                           l2600 2204  
                                         l4024 1F3E                                           l3080 1B94  
                                         l3072 1B74                                           l3064 1B5E  
                                         l3056 1B54                                           l3400 21C2  
                                         l3312 1CF2                                           l3304 1CE2  
                                         l1480 211A                                           l1472 1FB0  
                                         l1473 1FB8                                           l2610 229C  
                                         l2602 2218                                           l4026 1A80  
                                         l3090 1BBC                                           l3082 1B9C  
                                         l3074 1B7C                                           l3066 1B62  
                                         l3058 1B58                                           l3402 21D0  
                                         l3314 1CFE                                           l3306 1CE6  
                                         l1466 14CE                                           l1459 1310  
                                         l2700 254C                                           l4028 18E6  
                                         l3092 1BC0                                           l3084 1BA4  
                                         l3076 1B84                                           l3068 1B6A  
                                         l3324 2410                                           l3260 1D3E  
                                         l3404 21DE                                           l3316 1D0A  
                                         l3308 1CEA                                           l3340 23DE  
                                         l1492 1B3C                                           l1477 2112  
                                         l2606 2274                                           l2614 211C  
                                         l2622 23FC                                           l2702 2468  
                                         l2710 2440                                           l2630 24F6  
                                         l3094 1BC4                                           l3086 1BAC  
                                         l3078 1B8C                                           l3190 1E5C  
                                         l3182 1E1E                                           l3270 1D94  
                                         l3262 1D54                                           l3406 21EC  
                                         l3318 1D34                                           l3342 23E2  
                                         l3334 23D2                                           l2560 1C4A  
                                         l2608 2288                                           l2616 2144  
                                         l2800 1BD4                                           l2704 246C  
                                         l2712 2444                                           l2720 2434  
                                         l2640 24DA                                           l3088 1BB4  
                                         l3096 1BC8                                           l3192 1E70  
                                         l3184 1E1E                                           l3272 1DA8  
                                         l3264 1D68                                           l3280 2520  
                                         l3336 23D6                                           l2570 232E  
                                         l2562 1C5C                                           l2618 2158  
                                         l2650 2508                                           l2626 24FC  
                                         l2810 1BE6                                           l2706 2470  
                                         l2714 244C                                           l2722 243C  
                                         l2730 189A                                           l2634 24EA  
                                         l2642 24DE                                           l3194 1E74  
                                         l3186 1E34                                           l3266 1D7C  
                                         l3258 1D3A                                           l3290 21B4  
                                         l3282 2192                                           l3338 23DA  
                                         l2572 2336                                           l2564 1C90  
                                         l2580 250E                                           l2804 1BDC  
                                         l2628 24F2                                           l2636 24EE  
                                         l2660 24CE                                           l2652 24C2  
                                         l3188 1E48                                           l3268 1D90  
                                         l3196 2492                                           l3276 23E8  
                                         l3292 21BE                                           l3284 21AA  
                                         l3700 2184                                           l2574 233E  
                                         l2566 23BA                                           l2582 2248  
                                         l2590 221C                                           l2646 2528  
                                         l2806 1BE0                                           l2718 2430  
                                         l2750 193C                                           l2734 18A2  
                                         l2726 1882                                           l2822 24D2  
                                         l2654 24C6                                           l2830 2454  
                                         l3198 2488                                           l3278 23F8  
                                         l3294 247E                                           l3286 21AC  
                                         l3710 1502                                           l2920 2544  
                                         l2576 253C                                           l2568 231E  
                                         l2584 225C                                           l2592 2230  
                                         l2664 252C                                           l2672 2524  
                                         l2816 1BEE                                           l2752 1942  
                                         l2744 18B2                                           l2760 1A02  
                                         l2824 24D6                                           l2832 2458  
                                         l2840 1EFC                                           l2912 2342  
                                         l3296 1CC2                                           l3288 21B2  
                                         l3720 1544                                           l3712 1506  
                                         l3704 14D0                                           l3800 1854  
                                         l2922 2548                                           l2578 2538  
                                         l2586 2270                                           l2594 2244  
                                         l2674 2534                                           l2746 1910  
                                         l2738 18AA                                           l2762 1A10  
                                         l2666 24E2                                           l2658 24CA  
                                         l2850 1F0C                                           l2930 206E  
                                         l2914 2350                                           l3298 1CC4  
                                         l3730 159E                                           l3722 1562  
                                         l3714 1514                                           l3706 14D4  
                                         l3802 1868                                           l3810 1030  
                                         l2748 1922                                           l2764 1A16  
                                         l2668 24E6                                           l2828 2450  
                                         l2844 1F04                                           l2836 1EF0  
                                         l2860 1DAC                                           l2940 2092  
                                         l2932 2072                                           l2924 2058  
                                         l2916 2360                                           l3732 15CC  
                                         l3724 156A                                           l3740 1606  
                                         l3716 1534                                           l3708 14E2  
                                         l3660 1FF6                                           l3652 1FBC  
                                         l3820 10AA                                           l3812 1050  
                                         l3900 147C                                           l2598 21F0  
                                         l2678 2530                                           l2774 1A3E  
                                         l2766 1A2E                                           l2790 245C  
                                         l2838 1EF4                                           l2862 1DB0  
                                         l2934 2082                                           l2942 2096  
                                         l2926 205C                                           l3398 2502  
                                         l3742 1616                                           l3734 15EC  
                                         l3726 157E                                           l3718 1538  
                                         l3750 165C                                           l3806 20DC  
                                         l3662 1FF8                                           l3654 1FBC  
                                         l3670 2476                                           l3830 1106  
                                         l3822 10C4                                           l3814 1078  
                                         l3902 148A                                           ?_pad 0017  
                                         l2784 1A4E                                           l2768 1A32  
                                         l2792 2460                                           l2864 1DC0  
                                         l2936 208A                                           l2928 206C  
                                         l3744 1636                                           l3736 15EE  
                                         l3728 158C                                           l3760 16BC  
                                         l3752 166A                                           l3808 20F6  
                                         l3664 2008                                           l3656 1FDC  
                                         l3680 1AF4                                           l3672 1AA8  
                                         l3840 11A4                                           l3832 110E  
                                         l3824 10E0                                           l3816 1098  
                                         l3920 1F92                                           l2778 1A46  
                                         l2794 2464                                           l2866 1DD4  
                                         l2890 238C                                           l2938 208E  
                                         l3738 1600                                           l3770 1732  
                                         l3762 16DA                                           l3754 168A  
                                         l3666 200C                                           l3658 1FE6  
                                         l3682 1B2A                                           l3674 1ABA  
                                         l3690 2030                                           l3850 1260  
                                         l3842 11AA                                           l3834 1116  
                                         l3826 10F2                                           l3818 10A8  
                                         l3906 1496                                           l3914 1F56  
                                         l3922 22F6                                           l3930 1E8E  
                                         l2884 2540                                           l2868 1DDA  
                                         l2892 2390                                           l3780 179A  
                                         l3772 1752                                           l3764 16E2  
                                         l3756 168E                                           l3748 1658  
                                         l3668 200E                                           l3676 1ACC  
                                         l3692 2034                                           l3860 12B2  
                                         l3852 127A                                           l3836 111C  
                                         l3844 120E                                           l3828 1100  
                                         l3908 14BC                                           l3916 1F5E  
                                         l3924 2300                                           l3940 1EBA  
                                         l3932 1EAA                                           l2798 1BCC  
                                         l2886 2384                                           l3774 1764  
                                         l3766 16F6                                           l3758 169C  
                                         l3678 1AD6                                           l3686 2012  
                                         l3694 215C                                           l3790 17EE  
                                         l3862 12C4                                           l3846 1228  
                                         l3854 128A                                           l3838 119E  
                                         l3918 1F6C                                           l3942 1ECC  
                                         l3934 1EAE                                           l2888 2388  
                                         l3768 1704                                           l3776 176A  
                                         l3688 201E                                           l3696 2168  
                                         l3792 17FA                                           l3784 17BC  
                                         l3864 12D0                                           l3856 129C  
                                         l3848 1246                                           l3880 135C  
                                         l3872 1312                                           l3936 1EB0  
                                         l3928 1E8A                                           l3778 177A  
                                         l3698 216C                                           l3794 180E  
                                         l3786 17CC                                           l3866 12D8  
                                         l3858 12AC                                           l3890 1428  
                                         l3882 1382                                           l3874 1338  
                                         l3938 1EB2                                           l3796 1822  
                                         l3788 17E0                                           l3868 12E8  
                                         l3892 144E                                           l3884 13A8  
                                         l3876 1346                                           l3798 1826  
                                         l3894 145C                                           l3886 13F0  
                                         l3878 1358                                           l3896 1470  
                                         STR_1 1021                                           u1100 1896  
                                         u1101 1892                                           u1040 1C5C  
                                         u1120 193C                                           u1041 1C58  
                                         u1121 1938                                           u1050 232E  
                                         u1130 1A2E                                           u1051 232A  
                                         u1131 1A2A                                           u1060 240C  
                                         u1300 2082                                           u2100 1ABA  
                                         u1061 2406                                           u1301 207E  
                                         u2101 1AB6                                           u1118 18C0  
                                         u2110 1ACC                                           u1119 18D4  
                                         u2111 1AC8                                           u1208 1E04  
                                         u2200 158C                                           u2120 1AF4  
                                         u1209 1E16                                           u2201 1588  
                                         u2121 1AF0                                           u1066 240E  
                                         u1170 242E                                           u1250 23A0  
                                         u2210 15CC                                           u2130 1B2A  
                                         u1171 242A                                           u1251 239C  
                                         u2211 15C8                                           u2131 1B26  
                                         u1500 22B4                                           u1148 1A5C  
                                         u1180 1DC0                                           u2220 1616  
                                         u2140 2054                                           u2300 17EE  
                                         u1501 22B0                                           u1149 1A6E  
                                         u1181 1DBC                                           u2221 1612  
                                         u2141 2050                                           u2301 17EA  
                                         _LATA 000F89                                           u1158 1BFC  
                                         u1190 1DD4                                           u2230 166A  
                                         u2070 1FCE                                           u2150 2184  
                                         u2310 1844                                           _LATB 000F8A  
                                         u1159 1C0E                                           u1191 1DD0  
                                         u2231 1666                                           u2071 1FCA  
                                         u2151 2180                                           u2311 1840  
                                         _LATC 000F8B                                           u1168 1F1A  
                                         u1280 2350                                           u2160 14E2  
                                         u2240 169C                                           u2080 1FDC  
                                         u2320 1854                                           u2400 1100  
                                         _LATD 000F8C                                           u1169 1F2C  
                                         u1281 234C                                           u2161 14DE  
                                         u2241 1698                                           u2081 1FD8  
                                         u2321 1850                                           u2401 10FC  
                                         _LATE 000F8D                                           u1290 206C  
                                         u2170 1514                                           u2250 16DA  
                                         u2330 20F6                                           u2090 2008  
                                         u2410 1228                                           u1291 2068  
                                         u2171 1510                                           u2251 16D6  
                                         u2331 20F2                                           u2091 2004  
                                         u2411 1224                                           u2260 1704  
                                         u2420 1246                                           u2340 1060  
                                         u2500 1382                                           u2181 153E  
                                         u2261 1700                                           u2421 1242  
                                         u2341 105A                                           u2501 137E  
                                         u2190 1562                                           u2270 1732  
                                         u2430 1260                                           u2350 1062  
                                         u2510 13A8                                           u2191 155E  
                                         u2271 172E                                           u2431 125C  
                                         u2511 13A4                                           u2280 177A  
                                         u2440 127A                                           u2360 1078  
                                         u2520 144E                                           u2281 1776  
                                         u2441 1276                                           u2361 1074  
                                         u2521 144A                                           u1490 1B54  
                                         u1730 1D54                                           u2290 17CC  
                                         u2450 128A                                           u2370 10A8  
                                         u2530 1FB0                                           u1491 1B50  
                                         u1731 1D50                                           u2291 17C8  
                                         u2451 1286                                           u2371 10A4  
                                         u2531 1FAC                                           u1660 1E34  
                                         u1740 1DA8                                           u2460 129C  
                                         u2380 10C4                                           u1661 1E30  
                                         u1741 1DA4                                           u2461 1298  
                                         u2381 10C0                                           u1670 1E88  
                                         u2470 12AC                                           u2390 10F2  
                                         u1671 1E84                                           u2471 12A8  
                                         u2391 10EE                                           u2480 12C4  
                                         u2481 12C0                                           u2490 1338  
                                         u2491 1334                                           u2547 1E9A  
                                         u1860 21DE                                           u1861 21DA  
                                         u2557 1ED8                                           _WPUB 000F7C  
                      ??_wr2RegCompleteHandler 0010                                           abs@a 0017  
                                         _dbuf 00B3                                           _main 1E8A  
                                         _dtoa 1030                       ?_I2C_CallbackReturnReset 000E  
                                         _prec 00AD                                           _nout 00A9  
                                         pad@i 001E                                           pad@p 001B  
                                         fsr1h 000FE2                                           fsr2h 000FDA  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         pad@w 0020                                           fsr2l 000FD9  
                             __end_of_I2C_Open 1BCC                                           btemp 005B  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00B0                   fp__I2C_DO_SEND_RESTART_WRITE 0000  
                                 ___param_bank 000000                                          ??_abs 0019  
                                        ??_pad 001D                               ?_I2C_MasterClose 0001  
                                ?_EUSART_Write 0001                               ?_I2C_MasterStart 0001  
                                _I2C_DO_RX_ACK 24D2                               ?_I2C_MasterWrite 0001  
                __end_of_OSCILLATOR_Initialize 2488                                    _writeBuffer 00A6  
                              __end_of___aodiv 1658                                          ?_main 0001  
                                        ?_dtoa 0022                                __end_of___aomod 17BC  
                                        _ANSEL 000F7E                          _I2C_Read1ByteRegister 1D38  
                                        i2l610 20DA                                          i2l621 22F4  
                                        i2l630 251E                                          i2l607 20D8  
                                        i2l624 2550                                          i2l617 1A00  
                                        i2l627 2518                                          i2l671 009C  
                                        i2l666 0062                                          i2l667 009C  
                                        _RCREG 000FAE                                          _RCSTA 000FAB  
                                 vfpfcnvrt@fmt 0048                __end_of_AT42QT2120_enableSlider 2420  
                                        _SPBRG 000FAF                              ??_I2C_DO_TX_EMPTY 0010  
                                        _TRISA 000F92                                          _TRISB 000F93  
                                        _TRISC 000F94                                          _TRISD 000F95  
                                        _TRISE 000F96                                          _TXREG 000FAD  
                                        _TXSTA 000FAC                              __end_of_I2C_DO_RX 1AA8  
                            __end_of_I2C_DO_TX 1946                                          _flags 00AF  
                                        _fputc 1AA8                              __end_of_I2C_Close 22CC  
                                        _fputs 2012                 I2C_MasterOperation@returnValue 0015  
                                        pad@fp 0017                                          _width 00AB  
                                        _putch 2474                                          dtoa@d 0024  
                                        dtoa@i 0044                                          dtoa@n 003C  
                                        dtoa@p 0036                                          dtoa@s 003A  
                                        dtoa@w 0038                        _I2C_MasterEnableRestart 253C  
                                        pclath 000FFA                                          pclatu 000FFB  
                                        tablat 000FF5                               ?_I2C_SetCallback 0005  
                 I2C_SetAddressNackCallback@cb 000A                                          ttemp5 005C  
                                        ttemp6 005F                                          ttemp7 0063  
                                        status 000FD8                                          wtemp8 005C  
                            ?_I2C_DO_SEND_STOP 0001                             ??_I2C_DO_SEND_STOP 0005  
                                _fsmStateTable 1001                       fp__rd1RegCompleteHandler 0000  
                              __initialization 2364                     ?_AT42QT2120_sliderPosition 0001  
                                 __end_of_main 1EF0                                   __end_of_dtoa 1312  
                     fp__wr1RegCompleteHandler 0000                      ?_I2C_DO_SEND_RESTART_READ 0001  
                               ??_EUSART_Write 0005                                 ?_I2C_DO_RX_ACK 0001  
                  ?_INTERRUPT_InterruptManager 0001                 ??_EUSART_SetRxInterruptHandler 0007  
                                       ??_main 00E1                                         ??_dtoa 002C  
                            ?_I2C_MasterIsNack 0001                                  __activetblptr 000003  
                            ?_I2C_MasterSetIrq 0001                             ??_I2C_MasterIsNack 0005  
                           ??_I2C_MasterSetIrq 0005           fp__EUSART_DefaultFramingErrorHandler 0000  
    __end_of_EUSART_DefaultFramingErrorHandler 2552            ??_EUSART_DefaultFramingErrorHandler 0001  
           ?_EUSART_DefaultFramingErrorHandler 0001              _EUSART_DefaultFramingErrorHandler 2550  
                   _EUSART_OverrunErrorHandler 00E5                __end_of_I2C_CallbackReturnReset 2534  
                                       ?_fputc 0007                                         ?_fputs 0010  
                I2C_SetDataCompleteCallback@cb 000A                                         ?_putch 0001  
                                       _ANSELH 000F7F                                _AT42QT2120_Init 2502  
                                 ??_I2C_Poller 0014                                         i2l3210 22DE  
                                       i2l3212 22EE                                         i2l3214 22F2  
                                       i2l3206 22CC                                         i2l3208 22DC  
                                       i2l3320 2514                                         i2l3322 251A  
                                       i2l3370 20BC                                         i2l3380 1956  
                                       i2l3372 20BE                                         i2l3540 0044  
                                       i2l3390 19AA                                         i2l3382 1964  
                                       i2l3374 20CE                                         i2l3366 209A  
                                       i2l3542 0070                                         i2l3534 001A  
                                       i2l3392 19C2                                         i2l3384 1974  
                                       i2l3376 20D2                                         i2l3368 20AC  
                                       i2l3544 007E                                         i2l3536 0028  
                                       i2l3394 19DE                                         i2l3386 198C  
                                       i2l3378 1946                                         i2l3538 0036  
                                       i2l3396 19FC                                         i2l3388 199A  
                                       _OSCCON 000FD3                                         _SPBRGH 000FB0  
                                       _SSPADD 000FC8                                         _SSPBUF 000FC9  
                          _I2C_MasterGetRxData 2528                                   vfprintf@cfmt 00D9  
                                    ??___aodiv 0015                                      ??___aomod 0015  
                                   _Slider_pos 00B1                                  _I2C_MasterFsm 1DAC  
            __end_of_AT42QT2120_sliderPosition 21F0                            _EUSART_Transmit_ISR 209A  
                                       clear_0 236A                              I2C_SetCallback@cb 0005  
                      fp__I2C_DO_SEND_ADR_READ 0000                         ?_I2C_Read1ByteRegister 0016  
                                       isa$std 000001                                         _printf 22F6  
                                       pad@buf 0019                                  _I2C_SetBuffer 231E  
                                       dtoa@fp 0022                             __end_of_I2C_Poller 23A2  
                                       _strlen 215C                   __end_of_I2C_MasterDisableIrq 2548  
                                       fputc@c 0007                                         fputs@c 0014  
                          _I2C_DO_ADDRESS_NACK 1EF0                                         fputs@i 0015  
                                       fputs@s 0010                           ?_I2C_MasterGetRxData 0001  
                                    ?_I2C_Open 0001             __end_of_I2C_SetAddressNackCallback 23BA  
                   _I2C_SetAddressNackCallback 23A2                                   __mediumconst 0000  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                      ??_I2C_MasterEnableRestart 0005  
                             __end_of_vfprintf 1FBA                           ?_EUSART_Transmit_ISR 0001  
                            _SYSTEM_Initialize 23D2                                     __accesstop 0060  
                      __end_of__initialization 237A                            _I2C_MasterOperation 2056  
                           ?_SYSTEM_Initialize 0001                                  ___rparam_used 000001  
                         ?_I2C_DO_ADDRESS_NACK 0001           __end_of_EUSART_SetTxInterruptHandler 2492  
                 _EUSART_SetTxInterruptHandler 2488                        _rdBlkRegCompleteHandler 211C  
                   fp__rdBlkRegCompleteHandler 0000                                 __pcstackCOMRAM 0001  
                               ?_I2C_MasterFsm 0001                                ??_I2C_DO_RX_ACK 0005  
                       _I2C_CallbackReturnStop 2534                            ??_SYSTEM_Initialize 0007  
                                __end_of_fputc 1B3E                                  __end_of_fputs 2056  
                                __end_of_putch 247E                                 ?_I2C_SetBuffer 0005  
                      ?_I2C_MasterWaitForEvent 0001                  __end_of_I2C_DO_SEND_ADR_WRITE 2440  
                   ?_I2C_DO_SEND_RESTART_WRITE 0001                           ?_I2C_MasterOperation 0001  
                        ??_I2C_MasterGetRxData 0005                        ?_I2C_Write1ByteRegister 0016  
                                   ??_I2C_Open 0005                        __end_of_AT42QT2120_Init 2508  
                         _eusartRxStatusBuffer 008E                     __end_of_I2C_MasterClearIrq 2550  
              ??_EUSART_SetOverrunErrorHandler 0007                                        ??_fputc 000B  
                    __end_of_SYSTEM_Initialize 23E8                                        ??_fputs 0014  
                        ??_EUSART_Transmit_ISR 0001                                        ??_putch 0006  
                            _I2C_MasterSendAck 2508                                     __pbssBANK0 0060  
                         __end_of_EUSART_Write 2012                                  ??_I2C_DO_IDLE 0005  
                                ??_I2C_DO_RCEN 0005                  __end_of_rd2RegCompleteHandler 2248  
                 __end_of_I2C_MasterSendTxData 2502                             ?_I2C_MasterSendAck 0001  
                            _I2C_MasterStartRx 252C                          ??_I2C_DO_ADDRESS_NACK 0010  
                __end_of_wr2RegCompleteHandler 22A0                            _I2C_DO_RX_NACK_STOP 24CA  
                        _rd1RegCompleteHandler 2248                             ?_I2C_MasterStartRx 0001  
                   __end_of_I2C_MasterSendNack 2514                          _wr1RegCompleteHandler 21F0  
                          ??_I2C_MasterSendAck 0005                       rd1RegCompleteHandler@ptr 000E  
                ?_EUSART_SetTxInterruptHandler 0005               _EUSART_TxDefaultInterruptHandler 00EB  
                  __end_of_I2C_DO_SEND_RESTART 24EA                                _I2C_DO_TX_EMPTY 1BCC  
                          I2C_SetBuffer@buffer 0005                 __end_of_I2C_MasterWaitForEvent 2430  
                          ??_I2C_MasterStartRx 0005                                        _BAUDCON 000FB8  
                 ??_EUSART_DefaultErrorHandler 0001                          ??_I2C_MasterOperation 0014  
                                      ?_printf 00DB                 I2C_SetDataCompleteCallback@ptr 000C  
               __end_of_I2C_Write1ByteRegister 1E8A                                        ?_strlen 0005  
                     ??_I2C_DO_RX_NACK_RESTART 0005              __end_of_I2C_DO_SEND_RESTART_WRITE 24F2  
                         ?_I2C_DO_RX_NACK_STOP 0001                                  _eusartRxCount 0056  
                    __end_of_I2C_MasterSendAck 250E                                        _OSCTUNE 000F9B  
                     ??_EUSART_SetErrorHandler 0007                                        _SSPCON1 000FC6  
                                      _SSPCON2 000FC5                                        _SSPSTAT 000FC7  
                    __end_of_I2C_MasterStartRx 2530                           I2C_Close@returnValue 0005  
                 ?_I2C_SetDataCompleteCallback 000A                                      _I2C_DO_RX 1A02  
                                    _I2C_DO_TX 1882               __end_of_I2C_DO_SEND_RESTART_READ 24FA  
                 I2C_Read1ByteRegister@address 0017                                      _I2C_Close 22A0  
                    ??_rdBlkRegCompleteHandler 0010                           _I2C_MasterDisableIrq 2544  
                              ??_I2C_MasterFsm 0012                                        __Hparam 0000  
                                      __Lparam 0000                            __end_of_I2C_DO_IDLE 2474  
                          __end_of_I2C_DO_RCEN 2468                    ??_AT42QT2120_sliderPosition 0019  
                                   _readBuffer 0084                                        ___aodiv 14D0  
                                      ___aomod 1658                                ??_I2C_SetBuffer 0009  
                                    ?_vfprintf 00D3                        I2C_SetBuffer@bufferSize 0007  
                                 __psmallconst 1000                                 _I2C_MasterOpen 2342  
                                      __pcinit 2364                                 _I2C_MasterStop 2538  
                               _I2C_Initialize 23E8                                        __ramtop 1000  
                                      __ptext0 1E8A                                        __ptext1 22F6  
                                      __ptext2 1F56                                        __ptext3 1312  
                                      __ptext4 1030                                        __ptext5 17BC  
                                      __ptext6 215C                                        __ptext7 2012  
                                      __ptext8 1AA8                                        __ptext9 2474  
                        ??_I2C_DO_RX_NACK_STOP 0005                          _OSCILLATOR_Initialize 247E  
                             ?_AT42QT2120_Init 0001                             I2C_SetCallback@idx 0009  
                     ??_PIN_MANAGER_Initialize 0005                  I2C_CallbackReturnReset@funPtr 000E  
                           I2C_SetCallback@ptr 0007                       wr1RegCompleteHandler@ptr 000E  
                    I2C_Write1ByteRegister@reg 0016                       fp__I2C_DO_SEND_ADR_WRITE 0000  
                         end_of_initialization 237A                                     ?_I2C_DO_RX 0001  
                                   ?_I2C_DO_TX 0001          __end_of_EUSART_SetOverrunErrorHandler 24A6  
                _EUSART_SetOverrunErrorHandler 249C                                        fputc@fp 0009  
                                   ?_I2C_Close 0001                                        fputs@fp 0012  
                       ?_rd1RegCompleteHandler 000E                        __end_of_I2C_DO_TX_EMPTY 1C48  
                        ?_I2C_MasterDisableIrq 0001                              _EUSART_Initialize 1CC2  
                       ?_wr1RegCompleteHandler 000E                        _AT42QT2120_enableSlider 2410  
                     fp__rd2RegCompleteHandler 0000                             ?_EUSART_Initialize 0001  
                            __end_of_vfpfcnvrt 14D0                                      _RCSTAbits 000FAB  
                                      postdec2 000FDD                        ??_I2C_Read1ByteRegister 0017  
                       __end_of_I2C_MasterOpen 2364                       fp__wr2RegCompleteHandler 0000  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                         __end_of_I2C_MasterStop 253C  
                       __end_of_I2C_Initialize 23FC                                     ??_vfprintf 0056  
                    fp__I2C_CallbackReturnStop 0000                                        strlen@a 0007  
                                      strlen@s 0005                            ??_EUSART_Initialize 0007  
               ??_EUSART_SetTxInterruptHandler 0007                __end_of_rdBlkRegCompleteHandler 215C  
                         _I2C_MasterSendTxData 24FA                                fp__I2C_DO_RESET 0000  
                  ?_I2C_SetAddressNackCallback 000A                      _AT42QT2120_sliderPosition 21C2  
                    __end_of_EUSART_Initialize 1D38                                    _I2C_DO_IDLE 2468  
                                  _I2C_DO_RCEN 245C                     rdBlkRegCompleteHandler@ptr 000E  
                I2C_Write1ByteRegister@address 0018                                      _TXSTAbits 000FAC  
                      ?_I2C_CallbackReturnStop 000E                       _I2C_DO_SEND_RESTART_READ 24F2  
                  fp__I2C_DO_SEND_RESTART_READ 0000                   I2C_CallbackReturnStop@funPtr 000E  
                              ?_I2C_MasterOpen 0001                   __end_of_INTERRUPT_Initialize 2524  
                              ?_I2C_MasterStop 0001                                ?_I2C_Initialize 0001  
                      _I2C_CallbackReturnReset 2530                       I2C_Read1ByteRegister@reg 0016  
                   fp__I2C_CallbackReturnReset 0000             __end_of_EUSART_DefaultErrorHandler 2520  
                   _EUSART_DefaultErrorHandler 251A                                    vfpfcnvrt@ap 004A  
                                  vfpfcnvrt@fp 0046                                    vfpfcnvrt@ll 004E  
                                 _EUSART_Write 1FBA                          ?_I2C_MasterSendTxData 0001  
                       ?_OSCILLATOR_Initialize 0001                    ??_I2C_DO_SEND_RESTART_WRITE 0005  
                               __end_of_printf 231E                                 __end_of_strlen 2192  
                          start_initialization 2364                                    __end_of_abs 211C  
                                  __end_of_pad 1882                                  ?_I2C_DO_RESET 0001  
 EUSART_SetRxInterruptHandler@interruptHandler 0005   EUSART_SetTxInterruptHandler@interruptHandler 0005  
                                  putch@txData 0006                                    ??_I2C_DO_RX 0010  
                                  ??_I2C_DO_TX 0010                              ??_I2C_MasterClose 0005  
                    ??_AT42QT2120_enableSlider 0019                         ??_I2C_MasterDisableIrq 0005  
                                  ??_I2C_Close 0005                              ??_I2C_MasterStart 0005  
                            ??_I2C_MasterWrite 0016                 __end_of_I2C_CallbackReturnStop 2538  
                       _I2C_DO_RX_NACK_RESTART 24C2                               ?_I2C_DO_TX_EMPTY 0001  
                           _I2C_MasterClearIrq 254C                 ?_EUSART_SetOverrunErrorHandler 0005  
                                  vfprintf@fmt 00D5                     _EUSART_FramingErrorHandler 00E7  
                       _EUSART_SetErrorHandler 24B0                            ?_I2C_MasterClearIrq 0001  
                  __end_of_I2C_MasterGetRxData 252C                          __end_of_I2C_DO_RX_ACK 24DA  
                             _I2C_DO_SEND_STOP 24DA                              ??_I2C_SetCallback 0009  
                                     ??_printf 0056                            I2C_Open@returnValue 0006  
                           _I2C_MasterSendNack 250E                                       ??_strlen 0007  
                     ?_I2C_MasterEnableRestart 0001                         fp__I2C_DO_SEND_RESTART 0000  
                  __end_of_EUSART_Transmit_ISR 20DC                          _I2C_DO_SEND_ADR_WRITE 2430  
                                  __pbssCOMRAM 0056                                  __pcstackBANK0 00D3  
                               ??_I2C_DO_RESET 0005                               ___aodiv@dividend 0005  
                          ?_I2C_MasterSendNack 0001                   __end_of_I2C_DO_SEND_ADR_READ 2450  
                         ??_I2C_MasterClearIrq 0005                    __end_of_I2C_DO_ADDRESS_NACK 1F56  
                   __end_of_EUSART_Receive_ISR 1A02                               _I2C_MasterIsNack 23FC  
                    _I2C_DO_SEND_RESTART_WRITE 24EA               _EUSART_RxDefaultInterruptHandler 00E9  
                             _I2C_MasterSetIrq 2524                                      __pnvBANK0 00E3  
                        _rd2RegCompleteHandler 221C                          __end_of_fsmStateTable 1021  
                 __end_of_EUSART_RxDataHandler 22F6                         _PIN_MANAGER_Initialize 2192  
                                    _dtoa$2046 0034                          _wr2RegCompleteHandler 2274  
                    ??_I2C_CallbackReturnReset 0010                    __end_of_I2C_MasterOperation 209A  
                         ??_I2C_MasterSendNack 0005                       rd2RegCompleteHandler@ptr 000E  
                                    __pintcode 0008                                       ?___aodiv 0005  
                                     ?___aomod 0005                               ___aodiv@quotient 0017  
                                 _eusartRxHead 0058                                   _eusartTxHead 005A  
                                 _eusartRxTail 0057                         ??_I2C_MasterSendTxData 0005  
                                 _eusartTxTail 0059                   ??_INTERRUPT_InterruptManager 0001  
                                 fp__I2C_DO_RX 0000                                   fp__I2C_DO_TX 0000  
                      _eusartTxBufferRemaining 00ED                                    __smallconst 1000  
                      I2C_MasterOperation@read 0014                                       _I2C_Open 1B3E  
                      ??_rd1RegCompleteHandler 0010                           _INTERRUPT_Initialize 2520  
                               _eusartRxBuffer 0096                        ??_wr1RegCompleteHandler 0010  
                               _eusartTxBuffer 009E         EUSART_SetErrorHandler@interruptHandler 0005  
                                     _PIE1bits 000F9D                              _eusartRxLastError 00B2  
                                     i2u200_40 0036                                       i2u200_41 0032  
                                     i2u201_40 0044                                       i2u201_41 0040  
                                     i2u203_40 0070                                       i2u202_48 004A  
                                     i2u203_41 006C                                       i2u202_49 005E  
                                     i2u204_40 007E                                       i2u204_41 007A  
                                     i2u205_48 0084                                       i2u205_49 0098  
                                     i2u180_40 1964                                       i2u180_41 1960  
                                     i2u182_40 199A                                       i2u181_48 197A  
                                     i2u182_41 1996                                       i2u181_49 198C  
                                     i2u168_40 22EE                                       i2u184_40 19DE  
                                     i2u183_48 19B0                                       i2u168_41 22EA  
                                     i2u184_41 19DA                                       i2u183_49 19C2  
                                     _PIR1bits 000F9E                                       i2u185_48 19E4  
                                     i2u178_40 20AC                                       i2u185_49 19F8  
                                     i2u178_41 20A8                ??_EUSART_SetFramingErrorHandler 0007  
                                     i2u179_40 20CE                                       i2u179_41 20CA  
                                     _PIR2bits 000FA1                                       i2u199_40 0028  
                                     i2u199_41 0024                          __end_of_I2C_MasterFsm 1E1C  
                                     _RCONbits 000FD0                    __end_of_I2C_DO_RX_NACK_STOP 24D2  
         fp__EUSART_DefaultOverrunErrorHandler 0000      __end_of_EUSART_DefaultOverrunErrorHandler 251A  
          ??_EUSART_DefaultOverrunErrorHandler 0001             ?_EUSART_DefaultOverrunErrorHandler 0001  
            _EUSART_DefaultOverrunErrorHandler 2514                __end_of_I2C_MasterEnableRestart 2540  
                               fp__I2C_DO_IDLE 0000                                 fp__I2C_DO_RCEN 0000  
                __end_of_I2C_Read1ByteRegister 1DAC                                      _vfpfcnvrt 1312  
                        __end_of_I2C_SetBuffer 2342                         ?_I2C_DO_SEND_ADR_WRITE 0001  
                     I2C_MasterSendTxData@data 0005                       wr2RegCompleteHandler@ptr 000E  
                                  _INTCON2bits 000FF1                     ??_I2C_DO_SEND_RESTART_READ 0005  
                        ?_INTERRUPT_Initialize 0001                       ?_rdBlkRegCompleteHandler 000E  
                                   _I2C_Poller 2384                                     _I2C_Status 0060  
                                 ?_I2C_DO_IDLE 0001                                   ?_I2C_DO_RCEN 0001  
                       ?_rd2RegCompleteHandler 000E                          fp__EUSART_Receive_ISR 0000  
                             ??_I2C_MasterOpen 0005                         ?_wr2RegCompleteHandler 000E  
                             ??_I2C_MasterStop 0005                       ??_I2C_MasterWaitForEvent 0005  
                             ??_I2C_Initialize 0005                      fp__I2C_DO_RX_NACK_RESTART 0000  
                                     __Hrparam 0000                                     vfprintf@ap 00D7  
                                     __Lrparam 0000                                     vfprintf@fp 00D3  
                         __end_of_I2C_DO_RESET 245C                       ??_I2C_Write1ByteRegister 0018  
                      ??_OSCILLATOR_Initialize 0005                            _EUSART_ErrorHandler 00E3  
                         _I2C_DO_SEND_ADR_READ 2440                    ?_EUSART_DefaultErrorHandler 0001  
                                   ?_vfpfcnvrt 0046                                ___aodiv@divisor 000D  
                              ___aodiv@counter 0015               I2C_Read1ByteRegister@returnValue 0018  
                              _I2C_MasterClose 2548                  I2C_SetAddressNackCallback@ptr 000C  
                              I2C_Open@address 0005                            fp__I2C_DO_SEND_STOP 0000  
                              _I2C_MasterStart 2540                                _I2C_MasterWrite 24BA  
                         _EUSART_RxDataHandler 22CC                                       __ptext10 1FBA  
                                     __ptext11 20DC                                       __ptext20 2488  
                                     __ptext12 1658                                       __ptext21 2492  
                                     __ptext13 14D0                                       __ptext30 23A2  
                                     __ptext22 249C                                       __ptext14 23D2  
                                     __ptext31 1B3E                                       __ptext23 24A6  
                                     __ptext15 2192                                       __ptext40 24C2  
                                     __ptext32 2342                                       __ptext24 24B0  
                                     __ptext16 247E                                       __ptext41 24CA  
                                     __ptext33 24BA                                       __ptext25 21C2  
                                     __ptext17 2520                                       __ptext50 2430  
                                     __ptext42 24D2                                       __ptext34 2056  
                                     __ptext26 1D38                                       __ptext18 23E8  
                                     __ptext51 2440                                       __ptext43 24DA  
                                     __ptext35 2384                                       __ptext27 2502  
                                     __ptext19 1CC2                                       __ptext60 252C  
                                     __ptext52 2468                                       __ptext44 24E2  
                                     __ptext36 2420                                       __ptext28 2410  
                                     __ptext61 2530                                       __ptext53 1BCC  
                                     __ptext45 24EA                                       __ptext37 1DAC  
                                     __ptext29 1E1C                                       __ptext70 231E  
                                     __ptext62 2534                                       __ptext54 2524  
                                     __ptext46 24F2                                       __ptext38 1EF0  
                                     __ptext71 2538                                       __ptext63 211C  
                                     __ptext55 23FC                                       __ptext47 245C  
                                     __ptext39 2450                                       __ptext80 1946  
                                     __ptext72 253C                                       __ptext64 21F0  
                                     __ptext56 24FA                                       __ptext48 1A02  
                                     __ptext81 2514                                       __ptext73 2540  
                                     __ptext65 221C                                       __ptext57 2508  
                                     __ptext49 1882                                       __ptext82 2550  
                                     __ptext74 22A0                                       __ptext66 2248  
                                     __ptext58 2528                                       __ptext83 251A  
                                     __ptext75 2544                                       __ptext67 2274  
                                     __ptext59 250E                                       __ptext84 22CC  
                                     __ptext76 2548                                       __ptext68 23BA  
                                     __ptext85 0000                                       __ptext77 254C  
                                     __ptext69 1C48                                       __ptext79 209A  
          __end_of_I2C_SetDataCompleteCallback 23D2                    _I2C_SetDataCompleteCallback 23BA  
                      ?_I2C_DO_RX_NACK_RESTART 0001                       __end_of_I2C_DO_SEND_STOP 24E2  
                      ?_EUSART_SetErrorHandler 0005                                _I2C_SetCallback 1C48  
                ??_I2C_SetDataCompleteCallback 000E                     I2C_Write1ByteRegister@data 0017  
EUSART_SetOverrunErrorHandler@interruptHandler 0005                                       isa$xinst 000000  
                                     int$flags 005B                          ?_I2C_DO_SEND_ADR_READ 0001  
                                     _vfprintf 1F56             __end_of_INTERRUPT_InterruptManager 00B0  
                   _INTERRUPT_InterruptManager 0008                                      printf@fmt 00DB  
        __end_of_EUSART_SetFramingErrorHandler 24B0                  _EUSART_SetFramingErrorHandler 24A6  
                     __end_of_I2C_MasterIsNack 2410                               ___aomod@dividend 0005  
                     __end_of_I2C_MasterSetIrq 2528                                     _INTCONbits 000FF2  
                        ?_EUSART_RxDataHandler 0001                         ??_INTERRUPT_Initialize 0005  
               __end_of_I2C_DO_RX_NACK_RESTART 24CA                                       intlevel2 0000  
                                  ?_I2C_Poller 0001                         fp__EUSART_Transmit_ISR 0000  
                      ?_PIN_MANAGER_Initialize 0001                 __end_of_EUSART_SetErrorHandler 24BA  
                          _I2C_DO_SEND_RESTART 24E2                         fp__I2C_DO_ADDRESS_NACK 0000  
         __end_of_EUSART_SetRxInterruptHandler 249C                   _EUSART_SetRxInterruptHandler 2492  
                            ??_AT42QT2120_Init 0019                                       printf@ap 00DF  
                           _EUSART_Receive_ISR 1946  EUSART_SetFramingErrorHandler@interruptHandler 0005  
                      __end_of_I2C_MasterClose 254C                             fp__I2C_DO_TX_EMPTY 0000  
                              ___aomod@divisor 000D                                    ??_vfpfcnvrt 004C  
                      __end_of_I2C_MasterStart 2544                                ___aomod@counter 0015  
                      __end_of_I2C_MasterWrite 24C2                           ?_I2C_DO_SEND_RESTART 0001  
                          ?_EUSART_Receive_ISR 0001                  fp__EUSART_DefaultErrorHandler 0000  
                                  _SSPCON1bits 000FC6                                    _SSPCON2bits 000FC5  
                     ?_AT42QT2120_enableSlider 0001                             EUSART_Write@txData 0005  
                                 ___aodiv@sign 0016                        __end_of_I2C_SetCallback 1CC2  
               __end_of_PIN_MANAGER_Initialize 21C2                  __end_of_rd1RegCompleteHandler 2274  
                             fp__I2C_DO_RX_ACK 0000                           ??_EUSART_Receive_ISR 0001  
                __end_of_wr1RegCompleteHandler 221C                                   ___aomod@sign 0016  
